{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/command/generator/createRepo.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/command/generator/createRepo.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;AAEH,kEAAoE;AACpE,oEAAqF;AAGrF,wDAAqD;AACrD,4DAAkE;AAElE;;;;GAIG;AACH,2BAAkC,GAA4B;IAC1D,OAAO,GAAG,EAAE,CAAC,8BAAkB,CAC3B,gBAAgB,CAAC,GAAG,CAAC,EACrB,iCAAe,EACf,YAAY,EACZ,eAAe,EACf,aAAa,EAAE,UAAU,CAAC,CAAC;AACnC,CAAC;AAPD,8CAOC;AAED,oCAAoC;AAEpC,0BAA0B,GAA4B;IAClD,OAAO,CAAM,GAAG,EAAC,EAAE;QACf,MAAM,UAAU,GAAG,sCAAsB,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;QAC5D,MAAM,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,UAAU,CAAC,MAAM,yBAAyB,CAAC,CAAC;QAC/E,UAAU,CAAC,OAAO,CAAC,CAAM,EAAE,EAAC,EAAE;YAC1B,MAAM,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC1G,CAAC,CAAA,CAAC,CAAC;QACH,OAAO,2BAAO,CAAC;IACnB,CAAC,CAAA,CAAC;AACN,CAAC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HandleCommand, Success } from \"@atomist/automation-client\";\nimport { commandHandlerFrom, OnCommand } from \"@atomist/automation-client/onCommand\";\nimport { Maker } from \"@atomist/automation-client/util/constructionUtils\";\nimport { SoftwareDeliveryMachine } from \"../../../blueprint/SoftwareDeliveryMachine\";\nimport { EmptyParameters } from \"../EmptyParameters\";\nimport { commandHandlersWithTag } from \"../support/commandSearch\";\n\n/**\n * Return a command handler that can create a repo using generators in this SDM\n * @param {SoftwareDeliveryMachine} sdm\n * @return {HandleCommand<EmptyParameters>}\n */\nexport function createRepoHandler(sdm: SoftwareDeliveryMachine): Maker<HandleCommand> {\n    return () => commandHandlerFrom(\n        handleCreateRepo(sdm),\n        EmptyParameters,\n        \"createRepo\",\n        \"Create a repo\",\n        \"create repo\", \"new repo\");\n}\n\n// TODO implement this with dropdown\n\nfunction handleCreateRepo(sdm: SoftwareDeliveryMachine): OnCommand {\n    return async ctx => {\n        const generators = commandHandlersWithTag(sdm, \"generator\");\n        await ctx.messageClient.respond(`${generators.length} generators in this SDM`);\n        generators.forEach(async hi => {\n            await ctx.messageClient.respond(`${hi.instance.intent.map(intent => \"`\" + intent + \"`\").join(\", \")}`);\n        });\n        return Success;\n    };\n}\n"]}