"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_2avhcqjuci=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/goals/goalPreconditions.ts",hash="a99f3f65a18f6da2c9a8b51ef1be9338ff388fb5",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/goals/goalPreconditions.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:28},end:{line:18,column:65}},"2":{start:{line:19,column:21},end:{line:19,column:42}},"3":{start:{line:20,column:26},end:{line:20,column:71}},"4":{start:{line:26,column:4},end:{line:28,column:5}},"5":{start:{line:27,column:8},end:{line:27,column:20}},"6":{start:{line:29,column:26},end:{line:29,column:90}},"7":{start:{line:29,column:55},end:{line:29,column:89}},"8":{start:{line:30,column:4},end:{line:33,column:5}},"9":{start:{line:31,column:8},end:{line:31,column:163}},"10":{start:{line:32,column:8},end:{line:32,column:21}},"11":{start:{line:34,column:4},end:{line:34,column:105}},"12":{start:{line:35,column:4},end:{line:35,column:16}},"13":{start:{line:37,column:0},end:{line:37,column:50}},"14":{start:{line:39,column:29},end:{line:39,column:92}},"15":{start:{line:40,column:4},end:{line:45,column:5}},"16":{start:{line:43,column:8},end:{line:43,column:130}},"17":{start:{line:44,column:8},end:{line:44,column:20}},"18":{start:{line:46,column:4},end:{line:61,column:5}},"19":{start:{line:49,column:12},end:{line:49,column:163}},"20":{start:{line:50,column:12},end:{line:50,column:25}},"21":{start:{line:55,column:12},end:{line:55,column:146}},"22":{start:{line:56,column:12},end:{line:56,column:25}},"23":{start:{line:58,column:12},end:{line:58,column:24}},"24":{start:{line:60,column:12},end:{line:60,column:153}}},fnMap:{"0":{name:"preconditionsAreMet",decl:{start:{line:25,column:9},end:{line:25,column:28}},loc:{start:{line:25,column:41},end:{line:36,column:1}},line:25},"1":{name:"(anonymous_1)",decl:{start:{line:29,column:50},end:{line:29,column:51}},loc:{start:{line:29,column:55},end:{line:29,column:89}},line:29},"2":{name:"satisfied",decl:{start:{line:38,column:9},end:{line:38,column:18}},loc:{start:{line:38,column:52},end:{line:62,column:1}},line:38}},branchMap:{"0":{loc:{start:{line:26,column:4},end:{line:28,column:5}},type:"if",locations:[{start:{line:26,column:4},end:{line:28,column:5}},{start:{line:26,column:4},end:{line:28,column:5}}],line:26},"1":{loc:{start:{line:26,column:8},end:{line:26,column:62}},type:"binary-expr",locations:[{start:{line:26,column:8},end:{line:26,column:27}},{start:{line:26,column:31},end:{line:26,column:62}}],line:26},"2":{loc:{start:{line:30,column:4},end:{line:33,column:5}},type:"if",locations:[{start:{line:30,column:4},end:{line:33,column:5}},{start:{line:30,column:4},end:{line:33,column:5}}],line:30},"3":{loc:{start:{line:40,column:4},end:{line:45,column:5}},type:"if",locations:[{start:{line:40,column:4},end:{line:45,column:5}},{start:{line:40,column:4},end:{line:45,column:5}}],line:40},"4":{loc:{start:{line:46,column:4},end:{line:61,column:5}},type:"switch",locations:[{start:{line:47,column:8},end:{line:47,column:23}},{start:{line:48,column:8},end:{line:50,column:25}},{start:{line:51,column:8},end:{line:51,column:23}},{start:{line:52,column:8},end:{line:52,column:25}},{start:{line:53,column:8},end:{line:53,column:36}},{start:{line:54,column:8},end:{line:56,column:25}},{start:{line:57,column:8},end:{line:58,column:24}},{start:{line:59,column:8},end:{line:60,column:153}}],line:46}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0,0,0,0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_2avhcqjuci.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const automation_client_1=(cov_2avhcqjuci.s[1]++,require("@atomist/automation-client"));const sprintf_js_1=(cov_2avhcqjuci.s[2]++,require("sprintf-js"));const sdmGoalIngester_1=(cov_2avhcqjuci.s[3]++,require("../../../ingesters/sdmGoalIngester"));/*
 * Right now the only preconditions supported are other goals.
 * The intention is that others will be expressed, such as requiring an image.
 */function preconditionsAreMet(goal,info){cov_2avhcqjuci.f[0]++;cov_2avhcqjuci.s[4]++;if((cov_2avhcqjuci.b[1][0]++,!goal.preConditions)||(cov_2avhcqjuci.b[1][1]++,goal.preConditions.length===0)){cov_2avhcqjuci.b[0][0]++;cov_2avhcqjuci.s[5]++;return true;}else{cov_2avhcqjuci.b[0][1]++;}const falsification=(cov_2avhcqjuci.s[6]++,goal.preConditions.find(p=>{cov_2avhcqjuci.f[1]++;cov_2avhcqjuci.s[7]++;return!satisfied(p,info.goalsForCommit);}));cov_2avhcqjuci.s[8]++;if(falsification){cov_2avhcqjuci.b[2][0]++;cov_2avhcqjuci.s[9]++;automation_client_1.logger.debug("Precondition not met for %s: %s",sdmGoalIngester_1.goalKeyString(goal),sdmGoalIngester_1.goalKeyString(falsification));cov_2avhcqjuci.s[10]++;return false;}else{cov_2avhcqjuci.b[2][1]++;}cov_2avhcqjuci.s[11]++;automation_client_1.logger.debug("All %d preconditions satisfied for %s",goal.preConditions.length);cov_2avhcqjuci.s[12]++;return true;}cov_2avhcqjuci.s[13]++;exports.preconditionsAreMet=preconditionsAreMet;function satisfied(preconditionKey,goalsForCommit){cov_2avhcqjuci.f[2]++;const preconditionGoal=(cov_2avhcqjuci.s[14]++,sdmGoalIngester_1.mapKeyToGoal(goalsForCommit)(preconditionKey));cov_2avhcqjuci.s[15]++;if(!preconditionGoal){cov_2avhcqjuci.b[3][0]++;cov_2avhcqjuci.s[16]++;// TODO CD I'd suggest that goals that have a precondition that doesn't exist in the goal set
// are satisfied
automation_client_1.logger.error("Precondition %s not found on commit",sdmGoalIngester_1.goalKeyString(preconditionKey));cov_2avhcqjuci.s[17]++;return true;}else{cov_2avhcqjuci.b[3][1]++;}cov_2avhcqjuci.s[18]++;switch(preconditionGoal.state){case"failure":cov_2avhcqjuci.b[4][0]++;case"skipped":cov_2avhcqjuci.b[4][1]++;cov_2avhcqjuci.s[19]++;automation_client_1.logger.info("Precondition %s in state %s, won't be met",sdmGoalIngester_1.goalKeyString(preconditionKey),preconditionGoal.state);cov_2avhcqjuci.s[20]++;return false;case"planned":cov_2avhcqjuci.b[4][2]++;case"requested":cov_2avhcqjuci.b[4][3]++;case"waiting_for_approval":cov_2avhcqjuci.b[4][4]++;case"in_process":cov_2avhcqjuci.b[4][5]++;cov_2avhcqjuci.s[21]++;automation_client_1.logger.debug("Not yet. %s in state %s",sdmGoalIngester_1.goalKeyString(preconditionKey),preconditionGoal.state);cov_2avhcqjuci.s[22]++;return false;case"success":cov_2avhcqjuci.b[4][6]++;cov_2avhcqjuci.s[23]++;return true;default:cov_2avhcqjuci.b[4][7]++;cov_2avhcqjuci.s[24]++;throw new Error(sprintf_js_1.sprintf("Unhandled state: %s on %s",preconditionGoal.state,sdmGoalIngester_1.goalKeyString(preconditionKey)));}}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2NvbW1vbi9kZWxpdmVyeS9nb2Fscy9nb2FsUHJlY29uZGl0aW9ucy50cyIsInNvdXJjZXMiOlsiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2NvbW1vbi9kZWxpdmVyeS9nb2Fscy9nb2FsUHJlY29uZGl0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7O0dBY0c7O0FBRUgsa0VBQW9EO0FBQ3BELDJDQUFxQztBQUNyQyx3RUFBc0c7QUFFdEc7OztHQUdHO0FBQ0gsNkJBQW9DLElBQWEsRUFBRSxJQUVsRDtJQUNHLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxJQUFJLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtRQUN4RCxPQUFPLElBQUksQ0FBQztLQUNmO0lBQ0QsTUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7SUFDdkYsSUFBSSxhQUFhLEVBQUU7UUFDZiwwQkFBTSxDQUFDLEtBQUssQ0FBQyxpQ0FBaUMsRUFBRSwrQkFBYSxDQUFDLElBQUksQ0FBQyxFQUFFLCtCQUFhLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztRQUNuRyxPQUFPLEtBQUssQ0FBQztLQUNoQjtJQUNELDBCQUFNLENBQUMsS0FBSyxDQUFDLHVDQUF1QyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDakYsT0FBTyxJQUFJLENBQUM7QUFDaEIsQ0FBQztBQWJELGtEQWFDO0FBRUQsbUJBQW1CLGVBQTJCLEVBQUUsY0FBeUI7SUFDckUsTUFBTSxnQkFBZ0IsR0FBRyw4QkFBWSxDQUFDLGNBQWMsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQ3ZFLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtRQUNuQiw2RkFBNkY7UUFDN0YsZ0JBQWdCO1FBQ2hCLDBCQUFNLENBQUMsS0FBSyxDQUFDLHFDQUFxQyxFQUFFLCtCQUFhLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQztRQUNwRixPQUFPLElBQUksQ0FBQztLQUNmO0lBQ0QsUUFBUSxnQkFBZ0IsQ0FBQyxLQUFLLEVBQUU7UUFDNUIsS0FBSyxTQUFTLENBQUM7UUFDZixLQUFLLFNBQVM7WUFDViwwQkFBTSxDQUFDLElBQUksQ0FBQywyQ0FBMkMsRUFBRSwrQkFBYSxDQUFDLGVBQWUsQ0FBQyxFQUNuRixnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUM1QixPQUFPLEtBQUssQ0FBQztRQUNqQixLQUFLLFNBQVMsQ0FBQztRQUNmLEtBQUssV0FBVyxDQUFDO1FBQ2pCLEtBQUssc0JBQXNCLENBQUM7UUFDNUIsS0FBSyxZQUFZO1lBQ2IsMEJBQU0sQ0FBQyxLQUFLLENBQUMseUJBQXlCLEVBQUUsK0JBQWEsQ0FBQyxlQUFlLENBQUMsRUFDbEUsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDNUIsT0FBTyxLQUFLLENBQUM7UUFDakIsS0FBSyxTQUFTO1lBQ1YsT0FBTyxJQUFJLENBQUM7UUFDaEI7WUFDSSxNQUFNLElBQUksS0FBSyxDQUFDLG9CQUFPLENBQUMsMkJBQTJCLEVBQUUsZ0JBQWdCLENBQUMsS0FBSyxFQUN2RSwrQkFBYSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUM1QztBQUNMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IMKpIDIwMTggQXRvbWlzdCwgSW5jLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tIFwiQGF0b21pc3QvYXV0b21hdGlvbi1jbGllbnRcIjtcbmltcG9ydCB7IHNwcmludGYgfSBmcm9tIFwic3ByaW50Zi1qc1wiO1xuaW1wb3J0IHsgZ29hbEtleVN0cmluZywgbWFwS2V5VG9Hb2FsLCBTZG1Hb2FsLCBTZG1Hb2FsS2V5IH0gZnJvbSBcIi4uLy4uLy4uL2luZ2VzdGVycy9zZG1Hb2FsSW5nZXN0ZXJcIjtcblxuLypcbiAqIFJpZ2h0IG5vdyB0aGUgb25seSBwcmVjb25kaXRpb25zIHN1cHBvcnRlZCBhcmUgb3RoZXIgZ29hbHMuXG4gKiBUaGUgaW50ZW50aW9uIGlzIHRoYXQgb3RoZXJzIHdpbGwgYmUgZXhwcmVzc2VkLCBzdWNoIGFzIHJlcXVpcmluZyBhbiBpbWFnZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHByZWNvbmRpdGlvbnNBcmVNZXQoZ29hbDogU2RtR29hbCwgaW5mbzoge1xuICAgIGdvYWxzRm9yQ29tbWl0OiBTZG1Hb2FsW10sIC8vIEkgd291bGQgbGlrZSB0byBtYWtlIHRoaXMgb3B0aW9uYWwgYW5kIGZldGNoIGlmIG5lZWRlZCBub3QgcHJvdmlkZWRcbn0pOiBib29sZWFuIHtcbiAgICBpZiAoIWdvYWwucHJlQ29uZGl0aW9ucyB8fCBnb2FsLnByZUNvbmRpdGlvbnMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBjb25zdCBmYWxzaWZpY2F0aW9uID0gZ29hbC5wcmVDb25kaXRpb25zLmZpbmQocCA9PiAhc2F0aXNmaWVkKHAsIGluZm8uZ29hbHNGb3JDb21taXQpKTtcbiAgICBpZiAoZmFsc2lmaWNhdGlvbikge1xuICAgICAgICBsb2dnZXIuZGVidWcoXCJQcmVjb25kaXRpb24gbm90IG1ldCBmb3IgJXM6ICVzXCIsIGdvYWxLZXlTdHJpbmcoZ29hbCksIGdvYWxLZXlTdHJpbmcoZmFsc2lmaWNhdGlvbikpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGxvZ2dlci5kZWJ1ZyhcIkFsbCAlZCBwcmVjb25kaXRpb25zIHNhdGlzZmllZCBmb3IgJXNcIiwgZ29hbC5wcmVDb25kaXRpb25zLmxlbmd0aCk7XG4gICAgcmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIHNhdGlzZmllZChwcmVjb25kaXRpb25LZXk6IFNkbUdvYWxLZXksIGdvYWxzRm9yQ29tbWl0OiBTZG1Hb2FsW10pOiBib29sZWFuIHtcbiAgICBjb25zdCBwcmVjb25kaXRpb25Hb2FsID0gbWFwS2V5VG9Hb2FsKGdvYWxzRm9yQ29tbWl0KShwcmVjb25kaXRpb25LZXkpO1xuICAgIGlmICghcHJlY29uZGl0aW9uR29hbCkge1xuICAgICAgICAvLyBUT0RPIENEIEknZCBzdWdnZXN0IHRoYXQgZ29hbHMgdGhhdCBoYXZlIGEgcHJlY29uZGl0aW9uIHRoYXQgZG9lc24ndCBleGlzdCBpbiB0aGUgZ29hbCBzZXRcbiAgICAgICAgLy8gYXJlIHNhdGlzZmllZFxuICAgICAgICBsb2dnZXIuZXJyb3IoXCJQcmVjb25kaXRpb24gJXMgbm90IGZvdW5kIG9uIGNvbW1pdFwiLCBnb2FsS2V5U3RyaW5nKHByZWNvbmRpdGlvbktleSkpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgc3dpdGNoIChwcmVjb25kaXRpb25Hb2FsLnN0YXRlKSB7XG4gICAgICAgIGNhc2UgXCJmYWlsdXJlXCI6XG4gICAgICAgIGNhc2UgXCJza2lwcGVkXCI6XG4gICAgICAgICAgICBsb2dnZXIuaW5mbyhcIlByZWNvbmRpdGlvbiAlcyBpbiBzdGF0ZSAlcywgd29uJ3QgYmUgbWV0XCIsIGdvYWxLZXlTdHJpbmcocHJlY29uZGl0aW9uS2V5KSxcbiAgICAgICAgICAgICAgICBwcmVjb25kaXRpb25Hb2FsLnN0YXRlKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgY2FzZSBcInBsYW5uZWRcIjpcbiAgICAgICAgY2FzZSBcInJlcXVlc3RlZFwiOlxuICAgICAgICBjYXNlIFwid2FpdGluZ19mb3JfYXBwcm92YWxcIjpcbiAgICAgICAgY2FzZSBcImluX3Byb2Nlc3NcIjpcbiAgICAgICAgICAgIGxvZ2dlci5kZWJ1ZyhcIk5vdCB5ZXQuICVzIGluIHN0YXRlICVzXCIsIGdvYWxLZXlTdHJpbmcocHJlY29uZGl0aW9uS2V5KSxcbiAgICAgICAgICAgICAgICBwcmVjb25kaXRpb25Hb2FsLnN0YXRlKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgY2FzZSBcInN1Y2Nlc3NcIjpcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKHNwcmludGYoXCJVbmhhbmRsZWQgc3RhdGU6ICVzIG9uICVzXCIsIHByZWNvbmRpdGlvbkdvYWwuc3RhdGUsXG4gICAgICAgICAgICAgICAgZ29hbEtleVN0cmluZyhwcmVjb25kaXRpb25LZXkpKSk7XG4gICAgfVxufVxuIl19