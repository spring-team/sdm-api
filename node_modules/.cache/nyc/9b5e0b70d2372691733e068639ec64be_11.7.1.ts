"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_1tt0fdy82r=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/common/listener/pushRuleTest.ts",hash="8628b97347cdc928a3f310b61852796e5d6a7039",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/common/listener/pushRuleTest.ts",statementMap:{"0":{start:{line:17,column:16},end:{line:24,column:1}},"1":{start:{line:18,column:4},end:{line:23,column:7}},"2":{start:{line:19,column:36},end:{line:19,column:97}},"3":{start:{line:19,column:42},end:{line:19,column:70}},"4":{start:{line:19,column:85},end:{line:19,column:95}},"5":{start:{line:20,column:35},end:{line:20,column:100}},"6":{start:{line:20,column:41},end:{line:20,column:73}},"7":{start:{line:20,column:88},end:{line:20,column:98}},"8":{start:{line:21,column:32},end:{line:21,column:149}},"9":{start:{line:21,column:97},end:{line:21,column:119}},"10":{start:{line:22,column:8},end:{line:22,column:78}},"11":{start:{line:25,column:0},end:{line:25,column:62}},"12":{start:{line:26,column:26},end:{line:26,column:91}},"13":{start:{line:27,column:15},end:{line:27,column:38}},"14":{start:{line:28,column:18},end:{line:28,column:63}},"15":{start:{line:29,column:23},end:{line:29,column:88}},"16":{start:{line:30,column:20},end:{line:30,column:77}},"17":{start:{line:31,column:23},end:{line:31,column:96}},"18":{start:{line:32,column:0},end:{line:51,column:3}},"19":{start:{line:33,column:4},end:{line:41,column:8}},"20":{start:{line:33,column:66},end:{line:41,column:6}},"21":{start:{line:34,column:21},end:{line:36,column:56}},"22":{start:{line:37,column:24},end:{line:37,column:133}},"23":{start:{line:38,column:25},end:{line:38,column:40}},"24":{start:{line:39,column:23},end:{line:39,column:70}},"25":{start:{line:40,column:8},end:{line:40,column:24}},"26":{start:{line:42,column:4},end:{line:50,column:8}},"27":{start:{line:42,column:60},end:{line:50,column:6}},"28":{start:{line:43,column:21},end:{line:45,column:56}},"29":{start:{line:46,column:24},end:{line:46,column:132}},"30":{start:{line:47,column:25},end:{line:47,column:41}},"31":{start:{line:48,column:23},end:{line:48,column:70}},"32":{start:{line:49,column:8},end:{line:49,column:23}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:44},end:{line:17,column:45}},loc:{start:{line:17,column:89},end:{line:24,column:1}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:36},end:{line:18,column:37}},loc:{start:{line:18,column:63},end:{line:23,column:5}},line:18},"2":{name:"fulfilled",decl:{start:{line:19,column:17},end:{line:19,column:26}},loc:{start:{line:19,column:34},end:{line:19,column:99}},line:19},"3":{name:"rejected",decl:{start:{line:20,column:17},end:{line:20,column:25}},loc:{start:{line:20,column:33},end:{line:20,column:102}},line:20},"4":{name:"step",decl:{start:{line:21,column:17},end:{line:21,column:21}},loc:{start:{line:21,column:30},end:{line:21,column:151}},line:21},"5":{name:"(anonymous_5)",decl:{start:{line:21,column:76},end:{line:21,column:77}},loc:{start:{line:21,column:95},end:{line:21,column:121}},line:21},"6":{name:"(anonymous_6)",decl:{start:{line:32,column:38},end:{line:32,column:39}},loc:{start:{line:32,column:44},end:{line:51,column:1}},line:32},"7":{name:"(anonymous_7)",decl:{start:{line:33,column:60},end:{line:33,column:61}},loc:{start:{line:33,column:66},end:{line:41,column:6}},line:33},"8":{name:"(anonymous_8)",decl:{start:{line:33,column:98},end:{line:33,column:99}},loc:{start:{line:33,column:111},end:{line:41,column:5}},line:33},"9":{name:"(anonymous_9)",decl:{start:{line:42,column:54},end:{line:42,column:55}},loc:{start:{line:42,column:60},end:{line:50,column:6}},line:42},"10":{name:"(anonymous_10)",decl:{start:{line:42,column:92},end:{line:42,column:93}},loc:{start:{line:42,column:105},end:{line:50,column:5}},line:42}},branchMap:{"0":{loc:{start:{line:17,column:16},end:{line:24,column:1}},type:"binary-expr",locations:[{start:{line:17,column:17},end:{line:17,column:21}},{start:{line:17,column:25},end:{line:17,column:39}},{start:{line:17,column:44},end:{line:24,column:1}}],line:17},"1":{loc:{start:{line:18,column:16},end:{line:18,column:34}},type:"binary-expr",locations:[{start:{line:18,column:16},end:{line:18,column:17}},{start:{line:18,column:22},end:{line:18,column:33}}],line:18},"2":{loc:{start:{line:21,column:32},end:{line:21,column:148}},type:"cond-expr",locations:[{start:{line:21,column:46},end:{line:21,column:67}},{start:{line:21,column:70},end:{line:21,column:148}}],line:21},"3":{loc:{start:{line:22,column:51},end:{line:22,column:67}},type:"binary-expr",locations:[{start:{line:22,column:51},end:{line:22,column:61}},{start:{line:22,column:65},end:{line:22,column:67}}],line:22}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var __awaiter=(cov_1tt0fdy82r.s[0]++,(cov_1tt0fdy82r.b[0][0]++,this)&&(cov_1tt0fdy82r.b[0][1]++,this.__awaiter)||(cov_1tt0fdy82r.b[0][2]++,function(thisArg,_arguments,P,generator){cov_1tt0fdy82r.f[0]++;cov_1tt0fdy82r.s[1]++;return new((cov_1tt0fdy82r.b[1][0]++,P)||(cov_1tt0fdy82r.b[1][1]++,P=Promise))(function(resolve,reject){cov_1tt0fdy82r.f[1]++;function fulfilled(value){cov_1tt0fdy82r.f[2]++;cov_1tt0fdy82r.s[2]++;try{cov_1tt0fdy82r.s[3]++;step(generator.next(value));}catch(e){cov_1tt0fdy82r.s[4]++;reject(e);}}function rejected(value){cov_1tt0fdy82r.f[3]++;cov_1tt0fdy82r.s[5]++;try{cov_1tt0fdy82r.s[6]++;step(generator["throw"](value));}catch(e){cov_1tt0fdy82r.s[7]++;reject(e);}}function step(result){cov_1tt0fdy82r.f[4]++;cov_1tt0fdy82r.s[8]++;result.done?(cov_1tt0fdy82r.b[2][0]++,resolve(result.value)):(cov_1tt0fdy82r.b[2][1]++,new P(function(resolve){cov_1tt0fdy82r.f[5]++;cov_1tt0fdy82r.s[9]++;resolve(result.value);}).then(fulfilled,rejected));}cov_1tt0fdy82r.s[10]++;step((generator=generator.apply(thisArg,(cov_1tt0fdy82r.b[3][0]++,_arguments)||(cov_1tt0fdy82r.b[3][1]++,[]))).next());});}));cov_1tt0fdy82r.s[11]++;Object.defineProperty(exports,"__esModule",{value:true});const InMemoryProject_1=(cov_1tt0fdy82r.s[12]++,require("@atomist/automation-client/project/mem/InMemoryProject"));const assert=(cov_1tt0fdy82r.s[13]++,require("power-assert"));const goalDsl_1=(cov_1tt0fdy82r.s[14]++,require("../../../src/blueprint/dsl/goalDsl"));const libraryGoals_1=(cov_1tt0fdy82r.s[15]++,require("../../../src/common/delivery/goals/common/libraryGoals"));const PushRules_1=(cov_1tt0fdy82r.s[16]++,require("../../../src/common/listener/support/PushRules"));const jvmPushTests_1=(cov_1tt0fdy82r.s[17]++,require("../../../src/common/listener/support/pushtest/jvm/jvmPushTests"));cov_1tt0fdy82r.s[18]++;describe("Construction of PushRules",()=>{cov_1tt0fdy82r.f[6]++;cov_1tt0fdy82r.s[19]++;it("Does not think an empty project is a lein project",()=>{cov_1tt0fdy82r.f[7]++;cov_1tt0fdy82r.s[20]++;return __awaiter(this,void 0,void 0,function*(){cov_1tt0fdy82r.f[8]++;const rule=(cov_1tt0fdy82r.s[21]++,new PushRules_1.PushRules("test",[goalDsl_1.whenPushSatisfies(jvmPushTests_1.IsLein).itMeans("Build a Clojure library").setGoals(libraryGoals_1.LibraryGoals)]));const project=(cov_1tt0fdy82r.s[22]++,InMemoryProject_1.InMemoryProject.from({owner:"yes",repo:"no"},{path:"package.json",content:"{}"}));const fakePush=(cov_1tt0fdy82r.s[23]++,{id:"test1"});const result=(cov_1tt0fdy82r.s[24]++,yield rule.mapping({project,push:fakePush}));cov_1tt0fdy82r.s[25]++;assert(!result);});});cov_1tt0fdy82r.s[26]++;it("Does think a lein project is a lein project",()=>{cov_1tt0fdy82r.f[9]++;cov_1tt0fdy82r.s[27]++;return __awaiter(this,void 0,void 0,function*(){cov_1tt0fdy82r.f[10]++;const rule=(cov_1tt0fdy82r.s[28]++,new PushRules_1.PushRules("test",[goalDsl_1.whenPushSatisfies(jvmPushTests_1.IsLein).itMeans("Build a Clojure library").setGoals(libraryGoals_1.LibraryGoals)]));const project=(cov_1tt0fdy82r.s[29]++,InMemoryProject_1.InMemoryProject.from({owner:"yes",repo:"no"},{path:"project.clj",content:"{}"}));const fakePush=(cov_1tt0fdy82r.s[30]++,{id:"ttest2"});const result=(cov_1tt0fdy82r.s[31]++,yield rule.mapping({project,push:fakePush}));cov_1tt0fdy82r.s[32]++;assert(result);});});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvdGVzdC9jb21tb24vbGlzdGVuZXIvcHVzaFJ1bGVUZXN0LnRzIiwic291cmNlcyI6WyIvVXNlcnMvcm9kam9obnNvbi9zZm9yemFuZG8tZGV2L2lkZWEtcHJvamVjdHMvbXktZmxvdy90ZXN0L2NvbW1vbi9saXN0ZW5lci9wdXNoUnVsZVRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7OztHQWNHOzs7Ozs7Ozs7O0FBRUgsNEZBQXVGO0FBQ3ZGLHVDQUF1QztBQUN2QyxnRUFBdUU7QUFDdkUseUZBQXNGO0FBRXRGLDhFQUEyRTtBQUMzRSxpR0FBd0Y7QUFFeEYsUUFBUSxDQUFDLDJCQUEyQixFQUFFLEdBQUcsRUFBRTtJQUV2QyxFQUFFLENBQUMsbURBQW1ELEVBQUUsR0FBUyxFQUFFO1FBQy9ELE1BQU0sSUFBSSxHQUFHLElBQUkscUJBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQywyQkFBaUIsQ0FBQyxxQkFBTSxDQUFDO2lCQUN4RCxPQUFPLENBQUMseUJBQXlCLENBQUM7aUJBQ2xDLFFBQVEsQ0FBQywyQkFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRTlCLE1BQU0sT0FBTyxHQUFHLGlDQUFlLENBQUMsSUFBSSxDQUFDLEVBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFDLEVBQzNELEVBQUMsSUFBSSxFQUFFLGNBQWMsRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFDLENBQUMsQ0FBQztRQUMzQyxNQUFNLFFBQVEsR0FBRyxFQUFDLEVBQUUsRUFBRSxPQUFPLEVBQUMsQ0FBQztRQUMvQixNQUFNLE1BQU0sR0FBRyxNQUFNLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBa0MsQ0FBQyxDQUFDO1FBRTlGLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRXBCLENBQUMsQ0FBQSxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsNkNBQTZDLEVBQUUsR0FBUyxFQUFFO1FBQ3pELE1BQU0sSUFBSSxHQUFHLElBQUkscUJBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQywyQkFBaUIsQ0FBQyxxQkFBTSxDQUFDO2lCQUN4RCxPQUFPLENBQUMseUJBQXlCLENBQUM7aUJBQ2xDLFFBQVEsQ0FBQywyQkFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRTlCLE1BQU0sT0FBTyxHQUFHLGlDQUFlLENBQUMsSUFBSSxDQUFDLEVBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFDLEVBQzNELEVBQUMsSUFBSSxFQUFFLGFBQWEsRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFDLENBQUMsQ0FBQztRQUMxQyxNQUFNLFFBQVEsR0FBRyxFQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUMsQ0FBQztRQUNoQyxNQUFNLE1BQU0sR0FBRyxNQUFNLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBa0MsQ0FBQyxDQUFDO1FBRTlGLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUVuQixDQUFDLENBQUEsQ0FBQyxDQUFDO0FBQ1AsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IMKpIDIwMTggQXRvbWlzdCwgSW5jLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQge0luTWVtb3J5UHJvamVjdH0gZnJvbSBcIkBhdG9taXN0L2F1dG9tYXRpb24tY2xpZW50L3Byb2plY3QvbWVtL0luTWVtb3J5UHJvamVjdFwiO1xuaW1wb3J0ICogYXMgYXNzZXJ0IGZyb20gXCJwb3dlci1hc3NlcnRcIjtcbmltcG9ydCB7IHdoZW5QdXNoU2F0aXNmaWVzIH0gZnJvbSBcIi4uLy4uLy4uL3NyYy9ibHVlcHJpbnQvZHNsL2dvYWxEc2xcIjtcbmltcG9ydCB7IExpYnJhcnlHb2FscyB9IGZyb20gXCIuLi8uLi8uLi9zcmMvY29tbW9uL2RlbGl2ZXJ5L2dvYWxzL2NvbW1vbi9saWJyYXJ5R29hbHNcIjtcbmltcG9ydCB7IFB1c2hMaXN0ZW5lckludm9jYXRpb24gfSBmcm9tIFwiLi4vLi4vLi4vc3JjL2NvbW1vbi9saXN0ZW5lci9QdXNoTGlzdGVuZXJcIjtcbmltcG9ydCB7IFB1c2hSdWxlcyB9IGZyb20gXCIuLi8uLi8uLi9zcmMvY29tbW9uL2xpc3RlbmVyL3N1cHBvcnQvUHVzaFJ1bGVzXCI7XG5pbXBvcnQgeyBJc0xlaW4gfSBmcm9tIFwiLi4vLi4vLi4vc3JjL2NvbW1vbi9saXN0ZW5lci9zdXBwb3J0L3B1c2h0ZXN0L2p2bS9qdm1QdXNoVGVzdHNcIjtcblxuZGVzY3JpYmUoXCJDb25zdHJ1Y3Rpb24gb2YgUHVzaFJ1bGVzXCIsICgpID0+IHtcblxuICAgIGl0KFwiRG9lcyBub3QgdGhpbmsgYW4gZW1wdHkgcHJvamVjdCBpcyBhIGxlaW4gcHJvamVjdFwiLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHJ1bGUgPSBuZXcgUHVzaFJ1bGVzKFwidGVzdFwiLCBbd2hlblB1c2hTYXRpc2ZpZXMoSXNMZWluKVxuICAgICAgICAgICAgLml0TWVhbnMoXCJCdWlsZCBhIENsb2p1cmUgbGlicmFyeVwiKVxuICAgICAgICAgICAgLnNldEdvYWxzKExpYnJhcnlHb2FscyldKTtcblxuICAgICAgICBjb25zdCBwcm9qZWN0ID0gSW5NZW1vcnlQcm9qZWN0LmZyb20oe293bmVyOiBcInllc1wiLCByZXBvOiBcIm5vXCJ9LFxuICAgICAgICAgICAge3BhdGg6IFwicGFja2FnZS5qc29uXCIsIGNvbnRlbnQ6IFwie31cIn0pO1xuICAgICAgICBjb25zdCBmYWtlUHVzaCA9IHtpZDogXCJ0ZXN0MVwifTtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcnVsZS5tYXBwaW5nKHtwcm9qZWN0LCBwdXNoOiBmYWtlUHVzaH0gYXMgYW55IGFzIFB1c2hMaXN0ZW5lckludm9jYXRpb24pO1xuXG4gICAgICAgIGFzc2VydCghcmVzdWx0KTtcblxuICAgIH0pO1xuXG4gICAgaXQoXCJEb2VzIHRoaW5rIGEgbGVpbiBwcm9qZWN0IGlzIGEgbGVpbiBwcm9qZWN0XCIsIGFzeW5jICgpID0+IHtcbiAgICAgICAgY29uc3QgcnVsZSA9IG5ldyBQdXNoUnVsZXMoXCJ0ZXN0XCIsIFt3aGVuUHVzaFNhdGlzZmllcyhJc0xlaW4pXG4gICAgICAgICAgICAuaXRNZWFucyhcIkJ1aWxkIGEgQ2xvanVyZSBsaWJyYXJ5XCIpXG4gICAgICAgICAgICAuc2V0R29hbHMoTGlicmFyeUdvYWxzKV0pO1xuXG4gICAgICAgIGNvbnN0IHByb2plY3QgPSBJbk1lbW9yeVByb2plY3QuZnJvbSh7b3duZXI6IFwieWVzXCIsIHJlcG86IFwibm9cIn0sXG4gICAgICAgICAgICB7cGF0aDogXCJwcm9qZWN0LmNsalwiLCBjb250ZW50OiBcInt9XCJ9KTtcbiAgICAgICAgY29uc3QgZmFrZVB1c2ggPSB7aWQ6IFwidHRlc3QyXCJ9O1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBydWxlLm1hcHBpbmcoe3Byb2plY3QsIHB1c2g6IGZha2VQdXNofSBhcyBhbnkgYXMgUHVzaExpc3RlbmVySW52b2NhdGlvbik7XG5cbiAgICAgICAgYXNzZXJ0KHJlc3VsdCk7XG5cbiAgICB9KTtcbn0pO1xuIl19