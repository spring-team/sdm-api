{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/code/fingerprint/support/TypedFingerprint.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/code/fingerprint/support/TypedFingerprint.ts"],"names":[],"mappings":";;AAAA,+DAA4D;AAE5D;;GAEG;AACH,sBAAiC,SAAQ,yCAAmB;IAExD,YAAmB,IAAY,EACZ,YAAoB,EACpB,OAAe,EACE,CAAI;QACpC,KAAK,CAAC,IAAI,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;QADH,MAAC,GAAD,CAAC,CAAG;IAExC,CAAC;IAED,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC;IAED;;;OAGG;IACH,IAAI,MAAM;QACN,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;CAEJ;AArBD,4CAqBC","sourcesContent":["import { AbstractFingerprint } from \"./AbstractFingerprint\";\n\n/**\n * Typed fingerprint. Takes care of serializing the passed in data structure.\n */\nexport class TypedFingerprint<T> extends AbstractFingerprint {\n\n    public constructor(name: string,\n                       abbreviation: string,\n                       version: string,\n                       private readonly t: T) {\n        super(name, abbreviation, version);\n    }\n\n    get data(): string {\n        return JSON.stringify(this.t);\n    }\n\n    /**\n     * Return the fingerprint as a JSON object\n     * @return {T}\n     */\n    get object(): T {\n        return JSON.parse(this.data);\n    }\n\n}\n"]}