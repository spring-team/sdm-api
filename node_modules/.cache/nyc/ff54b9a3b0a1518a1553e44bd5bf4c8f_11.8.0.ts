"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_2b3kx71m9f=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/blueprint/sdmGoalImplementationTest.ts",hash="3fa768a4c773e7b39aa43bdfbc7e4eee0f6ac16b",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/blueprint/sdmGoalImplementationTest.ts",statementMap:{"0":{start:{line:17,column:16},end:{line:24,column:1}},"1":{start:{line:18,column:4},end:{line:23,column:7}},"2":{start:{line:19,column:36},end:{line:19,column:97}},"3":{start:{line:19,column:42},end:{line:19,column:70}},"4":{start:{line:19,column:85},end:{line:19,column:95}},"5":{start:{line:20,column:35},end:{line:20,column:100}},"6":{start:{line:20,column:41},end:{line:20,column:73}},"7":{start:{line:20,column:88},end:{line:20,column:98}},"8":{start:{line:21,column:32},end:{line:21,column:149}},"9":{start:{line:21,column:97},end:{line:21,column:119}},"10":{start:{line:22,column:8},end:{line:22,column:78}},"11":{start:{line:25,column:0},end:{line:25,column:62}},"12":{start:{line:26,column:28},end:{line:26,column:65}},"13":{start:{line:27,column:24},end:{line:27,column:93}},"14":{start:{line:28,column:26},end:{line:28,column:91}},"15":{start:{line:29,column:15},end:{line:29,column:38}},"16":{start:{line:30,column:18},end:{line:30,column:60}},"17":{start:{line:31,column:25},end:{line:31,column:70}},"18":{start:{line:32,column:15},end:{line:32,column:62}},"19":{start:{line:33,column:16},end:{line:33,column:64}},"20":{start:{line:34,column:26},end:{line:34,column:95}},"21":{start:{line:35,column:25},end:{line:35,column:91}},"22":{start:{line:36,column:30},end:{line:36,column:80}},"23":{start:{line:37,column:25},end:{line:37,column:70}},"24":{start:{line:38,column:24},end:{line:43,column:2}},"25":{start:{line:44,column:0},end:{line:46,column:2}},"26":{start:{line:47,column:20},end:{line:47,column:44}},"27":{start:{line:48,column:20},end:{line:48,column:65}},"28":{start:{line:49,column:14},end:{line:49,column:77}},"29":{start:{line:50,column:0},end:{line:101,column:3}},"30":{start:{line:51,column:4},end:{line:69,column:8}},"31":{start:{line:51,column:46},end:{line:69,column:6}},"32":{start:{line:52,column:22},end:{line:54,column:87}},"33":{start:{line:55,column:49},end:{line:63,column:10}},"34":{start:{line:61,column:35},end:{line:61,column:54}},"35":{start:{line:64,column:8},end:{line:64,column:77}},"36":{start:{line:65,column:8},end:{line:65,column:44}},"37":{start:{line:66,column:25},end:{line:66,column:39}},"38":{start:{line:67,column:23},end:{line:67,column:88}},"39":{start:{line:68,column:8},end:{line:68,column:59}},"40":{start:{line:70,column:23},end:{line:73,column:6}},"41":{start:{line:74,column:4},end:{line:100,column:8}},"42":{start:{line:74,column:51},end:{line:100,column:6}},"43":{start:{line:75,column:23},end:{line:75,column:28}},"44":{start:{line:76,column:29},end:{line:79,column:10}},"45":{start:{line:76,column:35},end:{line:79,column:10}},"46":{start:{line:77,column:12},end:{line:77,column:28}},"47":{start:{line:78,column:12},end:{line:78,column:47}},"48":{start:{line:80,column:22},end:{line:83,column:73}},"49":{start:{line:84,column:49},end:{line:92,column:10}},"50":{start:{line:90,column:35},end:{line:90,column:54}},"51":{start:{line:93,column:8},end:{line:93,column:59}},"52":{start:{line:94,column:8},end:{line:94,column:44}},"53":{start:{line:95,column:25},end:{line:95,column:39}},"54":{start:{line:96,column:23},end:{line:96,column:88}},"55":{start:{line:97,column:8},end:{line:97,column:61}},"56":{start:{line:98,column:8},end:{line:98,column:45}},"57":{start:{line:99,column:8},end:{line:99,column:25}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:44},end:{line:17,column:45}},loc:{start:{line:17,column:89},end:{line:24,column:1}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:36},end:{line:18,column:37}},loc:{start:{line:18,column:63},end:{line:23,column:5}},line:18},"2":{name:"fulfilled",decl:{start:{line:19,column:17},end:{line:19,column:26}},loc:{start:{line:19,column:34},end:{line:19,column:99}},line:19},"3":{name:"rejected",decl:{start:{line:20,column:17},end:{line:20,column:25}},loc:{start:{line:20,column:33},end:{line:20,column:102}},line:20},"4":{name:"step",decl:{start:{line:21,column:17},end:{line:21,column:21}},loc:{start:{line:21,column:30},end:{line:21,column:151}},line:21},"5":{name:"(anonymous_5)",decl:{start:{line:21,column:76},end:{line:21,column:77}},loc:{start:{line:21,column:95},end:{line:21,column:121}},line:21},"6":{name:"(anonymous_6)",decl:{start:{line:50,column:42},end:{line:50,column:43}},loc:{start:{line:50,column:48},end:{line:101,column:1}},line:50},"7":{name:"(anonymous_7)",decl:{start:{line:51,column:40},end:{line:51,column:41}},loc:{start:{line:51,column:46},end:{line:69,column:6}},line:51},"8":{name:"(anonymous_8)",decl:{start:{line:51,column:78},end:{line:51,column:79}},loc:{start:{line:51,column:91},end:{line:69,column:5}},line:51},"9":{name:"(anonymous_9)",decl:{start:{line:61,column:29},end:{line:61,column:30}},loc:{start:{line:61,column:35},end:{line:61,column:54}},line:61},"10":{name:"(anonymous_10)",decl:{start:{line:74,column:45},end:{line:74,column:46}},loc:{start:{line:74,column:51},end:{line:100,column:6}},line:74},"11":{name:"(anonymous_11)",decl:{start:{line:74,column:83},end:{line:74,column:84}},loc:{start:{line:74,column:96},end:{line:100,column:5}},line:74},"12":{name:"(anonymous_12)",decl:{start:{line:76,column:29},end:{line:76,column:30}},loc:{start:{line:76,column:35},end:{line:79,column:10}},line:76},"13":{name:"(anonymous_13)",decl:{start:{line:76,column:67},end:{line:76,column:68}},loc:{start:{line:76,column:80},end:{line:79,column:9}},line:76},"14":{name:"(anonymous_14)",decl:{start:{line:90,column:29},end:{line:90,column:30}},loc:{start:{line:90,column:35},end:{line:90,column:54}},line:90}},branchMap:{"0":{loc:{start:{line:17,column:16},end:{line:24,column:1}},type:"binary-expr",locations:[{start:{line:17,column:17},end:{line:17,column:21}},{start:{line:17,column:25},end:{line:17,column:39}},{start:{line:17,column:44},end:{line:24,column:1}}],line:17},"1":{loc:{start:{line:18,column:16},end:{line:18,column:34}},type:"binary-expr",locations:[{start:{line:18,column:16},end:{line:18,column:17}},{start:{line:18,column:22},end:{line:18,column:33}}],line:18},"2":{loc:{start:{line:21,column:32},end:{line:21,column:148}},type:"cond-expr",locations:[{start:{line:21,column:46},end:{line:21,column:67}},{start:{line:21,column:70},end:{line:21,column:148}}],line:21},"3":{loc:{start:{line:22,column:51},end:{line:22,column:67}},type:"binary-expr",locations:[{start:{line:22,column:51},end:{line:22,column:61}},{start:{line:22,column:65},end:{line:22,column:67}}],line:22}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var __awaiter=(cov_2b3kx71m9f.s[0]++,(cov_2b3kx71m9f.b[0][0]++,this)&&(cov_2b3kx71m9f.b[0][1]++,this.__awaiter)||(cov_2b3kx71m9f.b[0][2]++,function(thisArg,_arguments,P,generator){cov_2b3kx71m9f.f[0]++;cov_2b3kx71m9f.s[1]++;return new((cov_2b3kx71m9f.b[1][0]++,P)||(cov_2b3kx71m9f.b[1][1]++,P=Promise))(function(resolve,reject){cov_2b3kx71m9f.f[1]++;function fulfilled(value){cov_2b3kx71m9f.f[2]++;cov_2b3kx71m9f.s[2]++;try{cov_2b3kx71m9f.s[3]++;step(generator.next(value));}catch(e){cov_2b3kx71m9f.s[4]++;reject(e);}}function rejected(value){cov_2b3kx71m9f.f[3]++;cov_2b3kx71m9f.s[5]++;try{cov_2b3kx71m9f.s[6]++;step(generator["throw"](value));}catch(e){cov_2b3kx71m9f.s[7]++;reject(e);}}function step(result){cov_2b3kx71m9f.f[4]++;cov_2b3kx71m9f.s[8]++;result.done?(cov_2b3kx71m9f.b[2][0]++,resolve(result.value)):(cov_2b3kx71m9f.b[2][1]++,new P(function(resolve){cov_2b3kx71m9f.f[5]++;cov_2b3kx71m9f.s[9]++;resolve(result.value);}).then(fulfilled,rejected));}cov_2b3kx71m9f.s[10]++;step((generator=generator.apply(thisArg,(cov_2b3kx71m9f.b[3][0]++,_arguments)||(cov_2b3kx71m9f.b[3][1]++,[]))).next());});}));cov_2b3kx71m9f.s[11]++;Object.defineProperty(exports,"__esModule",{value:true});const automation_client_1=(cov_2b3kx71m9f.s[12]++,require("@atomist/automation-client"));const GitHubRepoRef_1=(cov_2b3kx71m9f.s[13]++,require("@atomist/automation-client/operations/common/GitHubRepoRef"));const InMemoryProject_1=(cov_2b3kx71m9f.s[14]++,require("@atomist/automation-client/project/mem/InMemoryProject"));const assert=(cov_2b3kx71m9f.s[15]++,require("power-assert"));const goalDsl_1=(cov_2b3kx71m9f.s[16]++,require("../../src/blueprint/dsl/goalDsl"));const wellKnownGoals_1=(cov_2b3kx71m9f.s[17]++,require("../../src/blueprint/wellKnownGoals"));const Goal_1=(cov_2b3kx71m9f.s[18]++,require("../../src/common/delivery/goals/Goal"));const Goals_1=(cov_2b3kx71m9f.s[19]++,require("../../src/common/delivery/goals/Goals"));const commonPushTests_1=(cov_2b3kx71m9f.s[20]++,require("../../src/common/listener/support/pushtest/commonPushTests"));const SetGoalsOnPush_1=(cov_2b3kx71m9f.s[21]++,require("../../src/handlers/events/delivery/goals/SetGoalsOnPush"));const SingleProjectLoader_1=(cov_2b3kx71m9f.s[22]++,require("../../src/util/test/SingleProjectLoader"));const machineFactory_1=(cov_2b3kx71m9f.s[23]++,require("../../src/blueprint/machineFactory"));const favoriteRepoRef=(cov_2b3kx71m9f.s[24]++,GitHubRepoRef_1.GitHubRepoRef.from({owner:"jess",repo:"monet",sha:"75132357b19889c4d6c2bef99fce8f477e1f2196",branch:"claude"}));cov_2b3kx71m9f.s[25]++;exports.fakeSoftwareDeliveryMachineOptions={projectLoader:new SingleProjectLoader_1.SingleProjectLoader(InMemoryProject_1.InMemoryProject.from(favoriteRepoRef,{path:"README.md",content:"read sometthing else"}))};const credentials=(cov_2b3kx71m9f.s[26]++,{token:"ab123bbbaaa"});const fakeContext=(cov_2b3kx71m9f.s[27]++,{context:{name:"my favorite context "}});const aPush=(cov_2b3kx71m9f.s[28]++,{repo:{org:{provider:{providerId:"myProviderId"}}}});cov_2b3kx71m9f.s[29]++;describe("implementing goals in the SDM",()=>{cov_2b3kx71m9f.f[6]++;cov_2b3kx71m9f.s[30]++;it("I can ask it to do an autofix",()=>{cov_2b3kx71m9f.f[7]++;cov_2b3kx71m9f.s[31]++;return __awaiter(this,void 0,void 0,function*(){cov_2b3kx71m9f.f[8]++;const mySDM=(cov_2b3kx71m9f.s[32]++,machineFactory_1.defaultMachine("Gustave",exports.fakeSoftwareDeliveryMachineOptions,goalDsl_1.whenPushSatisfies(commonPushTests_1.AnyPush).itMeans("autofix the crap out of that thing").setGoals(new Goals_1.Goals("Autofix only",wellKnownGoals_1.AutofixGoal))));const{determinedGoals,goalsToSave}=(cov_2b3kx71m9f.s[33]++,yield SetGoalsOnPush_1.determineGoals({projectLoader:exports.fakeSoftwareDeliveryMachineOptions.projectLoader,goalSetters:mySDM.goalSetters,implementationMapping:mySDM.goalFulfillmentMapper},{credentials,id:favoriteRepoRef,context:fakeContext,push:aPush,addressChannels:()=>{cov_2b3kx71m9f.f[9]++;cov_2b3kx71m9f.s[34]++;return Promise.resolve({});},goalSetId:"hi"}));cov_2b3kx71m9f.s[35]++;assert(determinedGoals.goals.includes(wellKnownGoals_1.AutofixGoal));cov_2b3kx71m9f.s[36]++;assert.equal(goalsToSave.length,1);const onlyGoal=(cov_2b3kx71m9f.s[37]++,goalsToSave[0]);const myImpl=(cov_2b3kx71m9f.s[38]++,mySDM.goalFulfillmentMapper.findImplementationBySdmGoal(onlyGoal));cov_2b3kx71m9f.s[39]++;assert.equal(myImpl.implementationName,"Autofix");});});const customGoal=(cov_2b3kx71m9f.s[40]++,new Goal_1.Goal({uniqueName:"Jerry",displayName:"Springer",environment:"1-staging/",orderedName:"1-springer"}));cov_2b3kx71m9f.s[41]++;it("I can teach it to do a custom goal",()=>{cov_2b3kx71m9f.f[10]++;cov_2b3kx71m9f.s[42]++;return __awaiter(this,void 0,void 0,function*(){cov_2b3kx71m9f.f[11]++;let executed=(cov_2b3kx71m9f.s[43]++,false);cov_2b3kx71m9f.s[44]++;const goalExecutor=()=>{cov_2b3kx71m9f.f[12]++;cov_2b3kx71m9f.s[45]++;return __awaiter(this,void 0,void 0,function*(){cov_2b3kx71m9f.f[13]++;cov_2b3kx71m9f.s[46]++;executed=true;cov_2b3kx71m9f.s[47]++;return automation_client_1.Success;});};const mySDM=(cov_2b3kx71m9f.s[48]++,machineFactory_1.defaultMachine("Gustave",exports.fakeSoftwareDeliveryMachineOptions,goalDsl_1.whenPushSatisfies(commonPushTests_1.AnyPush).itMeans("cornelius springer").setGoals(new Goals_1.Goals("Springer",customGoal))).addGoalImplementation("Cornelius",customGoal,goalExecutor));const{determinedGoals,goalsToSave}=(cov_2b3kx71m9f.s[49]++,yield SetGoalsOnPush_1.determineGoals({projectLoader:exports.fakeSoftwareDeliveryMachineOptions.projectLoader,goalSetters:mySDM.goalSetters,implementationMapping:mySDM.goalFulfillmentMapper},{credentials,id:favoriteRepoRef,context:fakeContext,push:aPush,addressChannels:()=>{cov_2b3kx71m9f.f[14]++;cov_2b3kx71m9f.s[50]++;return Promise.resolve({});},goalSetId:"hi"}));cov_2b3kx71m9f.s[51]++;assert(determinedGoals.goals.includes(customGoal));cov_2b3kx71m9f.s[52]++;assert.equal(goalsToSave.length,1);const onlyGoal=(cov_2b3kx71m9f.s[53]++,goalsToSave[0]);const myImpl=(cov_2b3kx71m9f.s[54]++,mySDM.goalFulfillmentMapper.findImplementationBySdmGoal(onlyGoal));cov_2b3kx71m9f.s[55]++;assert.equal(myImpl.implementationName,"Cornelius");cov_2b3kx71m9f.s[56]++;yield myImpl.goalExecutor(undefined);cov_2b3kx71m9f.s[57]++;assert(executed);});});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,