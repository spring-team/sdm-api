{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/common/log/DashboardDisplayProgressLogTest.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/common/log/DashboardDisplayProgressLogTest.ts"],"names":[],"mappings":";;AAEA,uCAAuC;AACvC,qGAAgG;AAGhG,QAAQ,CAAC,6BAA6B,EAAE,GAAG,EAAE;IAEzC,MAAM,OAAO,GAAmB;QAC5B,MAAM,EAAE,QAAQ;QAChB,aAAa,EAAE,eAAe;QAC9B,aAAa,EAAE,SAAS;KAC3B,CAAC;IAEF,MAAM,IAAI,GAAY;QAClB,IAAI,EAAE;YACF,KAAK,EAAE,WAAW;YAClB,IAAI,EAAE,UAAU;YAChB,UAAU,EAAE,SAAS;SACxB;QACD,GAAG,EAAE,MAAM;QACX,WAAW,EAAE,KAAK;QAClB,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,WAAW;QACtB,UAAU,EAAE,SAAS;QACrB,MAAM,EAAE,SAAS;QACjB,WAAW,EAAE,SAAS;QACtB,WAAW,EAAE,SAAS;QACtB,OAAO,EAAE,SAAS;QAClB,KAAK,EAAE,SAAS;QAChB,EAAE,EAAE,SAAS;QACb,UAAU,EAAE,SAAS;QACrB,aAAa,EAAE,SAAS;KAC3B,CAAC;IAEF,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAC1C,MAAM,GAAG,GAAG,IAAI,yDAA2B,CAAC,sBAAsB,EAAE,kBAAkB,EAClF,OAAO,EAAE,IAAI,CAAC,CAAC;QACnB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAChB,yGAAyG,CAAC,CAAC;IACnH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qEAAqE,EAAE,GAAG,EAAE;QAC3E,MAAM,GAAG,GAAG,IAAI,yDAA2B,CAAC,SAAS,EAAE,kBAAkB,EACrE,OAAO,EAAE,IAAI,CAAC,CAAC;QACnB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAChB,2FAA2F,CAAC,CAAC;IACrG,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC","sourcesContent":["\nimport {HandlerContext} from \"@atomist/automation-client\";\nimport * as assert from \"power-assert\";\nimport {DashboardDisplayProgressLog} from \"../../../src/common/log/DashboardDisplayProgressLog\";\nimport {SdmGoal} from \"../../../src/ingesters/sdmGoalIngester\";\n\ndescribe(\"DashboardDisplayProgressLog\", () => {\n\n    const context: HandlerContext = {\n        teamId: \"TeamID\",\n        correlationId: \"CorrelationID\",\n        messageClient: undefined,\n    };\n\n    const goal: SdmGoal = {\n        repo: {\n            owner: \"RepoOwner\",\n            name: \"RepoName\",\n            providerId: undefined,\n        },\n        sha: \"SHA1\",\n        environment: \"ENV\",\n        name: \"GoalName\",\n        goalSetId: \"GoalSetId\",\n        uniqueName: undefined,\n        branch: undefined,\n        fulfillment: undefined,\n        description: undefined,\n        goalSet: undefined,\n        state: undefined,\n        ts: undefined,\n        provenance: undefined,\n        preConditions: undefined,\n    };\n\n    it(\"should construct dashboard log URL\", () => {\n        const log = new DashboardDisplayProgressLog(\"http://dashboardhost\", \"http://rolarhost\",\n            context, goal);\n        assert.equal(log.url,\n            \"http://dashboardhost/workspace/TeamID/logs/RepoOwner/RepoName/SHA1/ENV/GoalName/GoalSetId/CorrelationID\");\n    });\n\n    it(\"should delegate to Rolar URL if dashboard base URL is not specified\", () => {\n        const log = new DashboardDisplayProgressLog(undefined, \"http://rolarhost\",\n            context, goal);\n        assert.equal(log.url,\n            \"http://rolarhost/logs/TeamID/RepoOwner/RepoName/SHA1/ENV/GoalName/GoalSetId/CorrelationID\");\n    });\n\n});\n"]}