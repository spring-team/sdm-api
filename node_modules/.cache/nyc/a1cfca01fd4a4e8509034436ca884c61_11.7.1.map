{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/handlers/commands/deleteRepository.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/handlers/commands/deleteRepository.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;;AAEH,kEAUoC;AACpC,sEAAmE;AACnE,oEAA0E;AAC1E,8FAA2F;AAC3F,iDAA0D;AAC1D,qEAAiE;AAGjE,IAAa,0BAA0B,GAAvC;CAgBC,CAAA;AAbG;IADC,0BAAM,CAAC,2BAAO,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;;+DACd;AAG3B;IADC,mCAAe,CAAC,oCAAgB,CAAC,WAAW,CAAC;;yDACzB;AAGrB;IADC,mCAAe,CAAC,oCAAgB,CAAC,gBAAgB,CAAC;;wDAC/B;AAGpB;IADC,mCAAe,CAAC,oCAAgB,CAAC,wBAAwB,CAAC;;8DACjC;AAG1B;IADC,6BAAS,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC;;8DACF;AAfjB,0BAA0B;IADtC,uBAAU,EAAE;GACA,0BAA0B,CAgBtC;AAhBY,gEAA0B;AAkB1B,QAAA,2BAA2B,GAAG,kBAAkB,CAAC;AAE9D;IACI,OAAO,8BAAkB,CAAC,sBAAsB,EAAE,EAC9C,0BAA0B,EAC1B,mCAA2B,EAC3B,qCAAqC,EACrC,wBAAwB,CAAC,CAAC;AAClC,CAAC;AAND,0DAMC;AAED;IACI,OAAO,CAAO,GAAmB,EAAE,aAAyC,EAAE,EAAE;QAC5E,IAAI,aAAa,CAAC,UAAU,CAAC,WAAW,EAAE,KAAK,KAAK,EAAE;YAClD,OAAO,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC,iEAAiE,CAAC;iBAC9F,IAAI,CAAC,2BAAO,CAAC,CAAC;SACtB;QAED,MAAM,QAAQ,GAAG,MAAM,8BAAa,CAAC,GAAG,EAAE,aAAa,CAAC,UAAU,CAAC,CAAC;QACpE,MAAM,EAAE,GAAG,6BAAa,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE,aAAa,CAAC,IAAI,EAAE,UAAU,EAAE,QAAQ,CAAC,MAAM,EAAC,CAAC,CAAC;QAEnH,MAAM,uBAAgB,CAAC,aAAa,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QACtD,OAAO,2BAAO,CAAC;IACnB,CAAC,CAAA,CAAC;AACN,CAAC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    HandleCommand,\n    HandlerContext,\n    MappedParameter,\n    MappedParameters,\n    Parameter,\n    Secret,\n    Secrets,\n    success,\n    Success,\n} from \"@atomist/automation-client\";\nimport { Parameters } from \"@atomist/automation-client/decorators\";\nimport { commandHandlerFrom } from \"@atomist/automation-client/onCommand\";\nimport { GitHubRepoRef } from \"@atomist/automation-client/operations/common/GitHubRepoRef\";\nimport { deleteRepository } from \"../../util/github/ghub\";\nimport { fetchProvider } from \"../../util/github/gitHubProvider\";\n\n@Parameters()\nexport class DeleteRepositoryParameters {\n\n    @Secret(Secrets.userToken(\"delete_repo\"))\n    public githubToken: string;\n\n    @MappedParameter(MappedParameters.GitHubOwner)\n    public owner: string;\n\n    @MappedParameter(MappedParameters.GitHubRepository)\n    public repo: string;\n\n    @MappedParameter(MappedParameters.GitHubRepositoryProvider)\n    public providerId: string;\n\n    @Parameter({required: true})\n    public areYouSure: string;\n}\n\nexport const DeleteRepositoryCommandName = \"DeleteRepository\";\n\nexport function deleteRepositoryCommand(): HandleCommand {\n    return commandHandlerFrom(deleteRepositoryPlease(),\n        DeleteRepositoryParameters,\n        DeleteRepositoryCommandName,\n        \"Really delete the GitHub repository\",\n        \"delete this repository\");\n}\n\nfunction deleteRepositoryPlease() {\n    return async (ctx: HandlerContext, commandParams: DeleteRepositoryParameters) => {\n        if (commandParams.areYouSure.toLowerCase() !== \"yes\") {\n            return ctx.messageClient.respond(\"You didn't say 'yes' to 'are you sure?' so I won't do anything.\")\n                .then(success);\n        }\n\n        const provider = await fetchProvider(ctx, commandParams.providerId);\n        const id = GitHubRepoRef.from({owner: commandParams.owner, repo: commandParams.repo, rawApiBase: provider.apiUrl});\n\n        await deleteRepository(commandParams.githubToken, id);\n        return Success;\n    };\n}\n"]}