{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/listener/Mapping.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/listener/Mapping.ts"],"names":[],"mappings":";;AAyCA,mBAA0B,CAAM;IAC5B,MAAM,KAAK,GAAG,CAAsB,CAAC;IACrC,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;AAC3C,CAAC;AAHD,8BAGC","sourcesContent":["\nexport type NeverMatch = null;\n\n/**\n * Result of a Mapper. A result of the desired type if\n * we match. undefined if we don't match.\n * Return DoNotSetAnyGoals (null) to shortcut evaluation of the present set of rules,\n * terminating evaluation and guarantee the return of undefined if we've reached this point.\n * Only do so if you are sure\n */\nexport type MappingResult<V> = Promise<V | undefined | NeverMatch>;\n\nexport type Mapper<F, V> = (from: F) => MappingResult<V>;\n\n/**\n * Mapper from source to value, if it can be resolved.\n * This is a central interface used throughout the SDM.\n */\nexport interface Mapping<F, V> {\n\n    /**\n     * Name of the Mapping. Must be unique\n     */\n    readonly name: string;\n\n    /**\n     * Compute a value for the given event. Return undefined\n     * if we don't find a mapped value.\n     * Return DoNotSetAnyGoals (null) to shortcut evaluation of the present set of rules,\n     * terminating evaluation and guarantee the return of undefined if we've reached this point.\n     * Only do so if you are sure\n     * that this evaluation must be short circuited if it has reached this point.\n     * If a previous rule has matched, it will still be used.\n     * The value may be static\n     * or computed on demand, depending on the implementation.\n     */\n    mapping: Mapper<F, V>;\n}\n\nexport type PredicateMapping<F> = Mapping<F, boolean>;\n\nexport function isMapping(a: any): a is Mapping<any, any> {\n    const maybe = a as Mapping<any, any>;\n    return !!maybe.name && !!maybe.mapping;\n}\n"]}