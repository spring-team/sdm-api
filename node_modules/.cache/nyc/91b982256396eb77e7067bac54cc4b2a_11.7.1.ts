"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_1jxc5q8muc=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/deploy/pcf/CommandLineCloudFoundryDeployer.ts",hash="76476fb8e7dc7a0f17268c4cc0384ba38b28e008",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/deploy/pcf/CommandLineCloudFoundryDeployer.ts",statementMap:{"0":{start:{line:17,column:16},end:{line:24,column:1}},"1":{start:{line:18,column:4},end:{line:23,column:7}},"2":{start:{line:19,column:36},end:{line:19,column:97}},"3":{start:{line:19,column:42},end:{line:19,column:70}},"4":{start:{line:19,column:85},end:{line:19,column:95}},"5":{start:{line:20,column:35},end:{line:20,column:100}},"6":{start:{line:20,column:41},end:{line:20,column:73}},"7":{start:{line:20,column:88},end:{line:20,column:98}},"8":{start:{line:21,column:32},end:{line:21,column:149}},"9":{start:{line:21,column:97},end:{line:21,column:119}},"10":{start:{line:22,column:8},end:{line:22,column:78}},"11":{start:{line:25,column:0},end:{line:25,column:62}},"12":{start:{line:26,column:28},end:{line:26,column:65}},"13":{start:{line:27,column:22},end:{line:27,column:82}},"14":{start:{line:28,column:24},end:{line:28,column:48}},"15":{start:{line:29,column:18},end:{line:29,column:58}},"16":{start:{line:30,column:45},end:{line:30,column:103}},"17":{start:{line:31,column:20},end:{line:31,column:64}},"18":{start:{line:32,column:32},end:{line:32,column:66}},"19":{start:{line:33,column:29},end:{line:33,column:60}},"20":{start:{line:40,column:8},end:{line:40,column:43}},"21":{start:{line:43,column:8},end:{line:90,column:11}},"22":{start:{line:44,column:12},end:{line:44,column:109}},"23":{start:{line:47,column:12},end:{line:89,column:16}},"24":{start:{line:47,column:112},end:{line:89,column:14}},"25":{start:{line:48,column:37},end:{line:48,column:106}},"26":{start:{line:49,column:16},end:{line:51,column:17}},"27":{start:{line:50,column:20},end:{line:50,column:115}},"28":{start:{line:52,column:29},end:{line:52,column:73}},"29":{start:{line:54,column:16},end:{line:54,column:149}},"30":{start:{line:55,column:16},end:{line:55,column:96}},"31":{start:{line:57,column:16},end:{line:57,column:91}},"32":{start:{line:58,column:37},end:{line:71,column:17}},"33":{start:{line:72,column:16},end:{line:72,column:156}},"34":{start:{line:73,column:37},end:{line:73,column:105}},"35":{start:{line:74,column:44},end:{line:74,column:130}},"36":{start:{line:75,column:16},end:{line:75,column:99}},"37":{start:{line:75,column:55},end:{line:75,column:97}},"38":{start:{line:76,column:16},end:{line:76,column:99}},"39":{start:{line:76,column:55},end:{line:76,column:97}},"40":{start:{line:77,column:16},end:{line:88,column:24}},"41":{start:{line:78,column:24},end:{line:86,column:27}},"42":{start:{line:79,column:28},end:{line:81,column:29}},"43":{start:{line:80,column:32},end:{line:80,column:62}},"44":{start:{line:82,column:28},end:{line:85,column:31}},"45":{start:{line:87,column:24},end:{line:87,column:66}},"46":{start:{line:93,column:8},end:{line:101,column:11}},"47":{start:{line:95,column:12},end:{line:100,column:16}},"48":{start:{line:95,column:102},end:{line:100,column:14}},"49":{start:{line:96,column:28},end:{line:96,column:61}},"50":{start:{line:97,column:32},end:{line:97,column:54}},"51":{start:{line:98,column:27},end:{line:98,column:68}},"52":{start:{line:99,column:16},end:{line:99,column:50}},"53":{start:{line:104,column:8},end:{line:107,column:11}},"54":{start:{line:105,column:12},end:{line:105,column:173}},"55":{start:{line:106,column:12},end:{line:106,column:113}},"56":{start:{line:110,column:8},end:{line:113,column:10}},"57":{start:{line:116,column:0},end:{line:116,column:74}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:44},end:{line:17,column:45}},loc:{start:{line:17,column:89},end:{line:24,column:1}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:36},end:{line:18,column:37}},loc:{start:{line:18,column:63},end:{line:23,column:5}},line:18},"2":{name:"fulfilled",decl:{start:{line:19,column:17},end:{line:19,column:26}},loc:{start:{line:19,column:34},end:{line:19,column:99}},line:19},"3":{name:"rejected",decl:{start:{line:20,column:17},end:{line:20,column:25}},loc:{start:{line:20,column:33},end:{line:20,column:102}},line:20},"4":{name:"step",decl:{start:{line:21,column:17},end:{line:21,column:21}},loc:{start:{line:21,column:30},end:{line:21,column:151}},line:21},"5":{name:"(anonymous_5)",decl:{start:{line:21,column:76},end:{line:21,column:77}},loc:{start:{line:21,column:95},end:{line:21,column:121}},line:21},"6":{name:"(anonymous_6)",decl:{start:{line:39,column:4},end:{line:39,column:5}},loc:{start:{line:39,column:31},end:{line:41,column:5}},line:39},"7":{name:"(anonymous_7)",decl:{start:{line:42,column:4},end:{line:42,column:5}},loc:{start:{line:42,column:38},end:{line:91,column:5}},line:42},"8":{name:"(anonymous_8)",decl:{start:{line:43,column:47},end:{line:43,column:48}},loc:{start:{line:43,column:60},end:{line:90,column:9}},line:43},"9":{name:"(anonymous_9)",decl:{start:{line:47,column:99},end:{line:47,column:100}},loc:{start:{line:47,column:112},end:{line:89,column:14}},line:47},"10":{name:"(anonymous_10)",decl:{start:{line:47,column:144},end:{line:47,column:145}},loc:{start:{line:47,column:157},end:{line:89,column:13}},line:47},"11":{name:"(anonymous_11)",decl:{start:{line:75,column:47},end:{line:75,column:48}},loc:{start:{line:75,column:55},end:{line:75,column:97}},line:75},"12":{name:"(anonymous_12)",decl:{start:{line:76,column:47},end:{line:76,column:48}},loc:{start:{line:76,column:55},end:{line:76,column:97}},line:76},"13":{name:"(anonymous_13)",decl:{start:{line:77,column:42},end:{line:77,column:43}},loc:{start:{line:77,column:63},end:{line:88,column:21}},line:77},"14":{name:"(anonymous_14)",decl:{start:{line:78,column:57},end:{line:78,column:58}},loc:{start:{line:78,column:75},end:{line:86,column:25}},line:78},"15":{name:"(anonymous_15)",decl:{start:{line:92,column:4},end:{line:92,column:5}},loc:{start:{line:92,column:41},end:{line:102,column:5}},line:92},"16":{name:"(anonymous_16)",decl:{start:{line:93,column:47},end:{line:93,column:48}},loc:{start:{line:93,column:60},end:{line:101,column:9}},line:93},"17":{name:"(anonymous_17)",decl:{start:{line:95,column:89},end:{line:95,column:90}},loc:{start:{line:95,column:102},end:{line:100,column:14}},line:95},"18":{name:"(anonymous_18)",decl:{start:{line:95,column:134},end:{line:95,column:135}},loc:{start:{line:95,column:147},end:{line:100,column:13}},line:95},"19":{name:"(anonymous_19)",decl:{start:{line:103,column:4},end:{line:103,column:5}},loc:{start:{line:103,column:35},end:{line:108,column:5}},line:103},"20":{name:"(anonymous_20)",decl:{start:{line:104,column:47},end:{line:104,column:48}},loc:{start:{line:104,column:60},end:{line:107,column:9}},line:104},"21":{name:"(anonymous_21)",decl:{start:{line:109,column:4},end:{line:109,column:5}},loc:{start:{line:109,column:24},end:{line:114,column:5}},line:109}},branchMap:{"0":{loc:{start:{line:17,column:16},end:{line:24,column:1}},type:"binary-expr",locations:[{start:{line:17,column:17},end:{line:17,column:21}},{start:{line:17,column:25},end:{line:17,column:39}},{start:{line:17,column:44},end:{line:24,column:1}}],line:17},"1":{loc:{start:{line:18,column:16},end:{line:18,column:34}},type:"binary-expr",locations:[{start:{line:18,column:16},end:{line:18,column:17}},{start:{line:18,column:22},end:{line:18,column:33}}],line:18},"2":{loc:{start:{line:21,column:32},end:{line:21,column:148}},type:"cond-expr",locations:[{start:{line:21,column:46},end:{line:21,column:67}},{start:{line:21,column:70},end:{line:21,column:148}}],line:21},"3":{loc:{start:{line:22,column:51},end:{line:22,column:67}},type:"binary-expr",locations:[{start:{line:22,column:51},end:{line:22,column:61}},{start:{line:22,column:65},end:{line:22,column:67}}],line:22},"4":{loc:{start:{line:49,column:16},end:{line:51,column:17}},type:"if",locations:[{start:{line:49,column:16},end:{line:51,column:17}},{start:{line:49,column:16},end:{line:51,column:17}}],line:49},"5":{loc:{start:{line:49,column:20},end:{line:49,column:74}},type:"binary-expr",locations:[{start:{line:49,column:20},end:{line:49,column:28}},{start:{line:49,column:32},end:{line:49,column:40}},{start:{line:49,column:44},end:{line:49,column:57}},{start:{line:49,column:61},end:{line:49,column:74}}],line:49},"6":{loc:{start:{line:52,column:36},end:{line:52,column:71}},type:"cond-expr",locations:[{start:{line:52,column:47},end:{line:52,column:53}},{start:{line:52,column:56},end:{line:52,column:71}}],line:52},"7":{loc:{start:{line:67,column:32},end:{line:70,column:26}},type:"cond-expr",locations:[{start:{line:68,column:24},end:{line:69,column:40}},{start:{line:70,column:24},end:{line:70,column:26}}],line:67},"8":{loc:{start:{line:79,column:28},end:{line:81,column:29}},type:"if",locations:[{start:{line:79,column:28},end:{line:81,column:29}},{start:{line:79,column:28},end:{line:81,column:29}}],line:79}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var __awaiter=(cov_1jxc5q8muc.s[0]++,(cov_1jxc5q8muc.b[0][0]++,this)&&(cov_1jxc5q8muc.b[0][1]++,this.__awaiter)||(cov_1jxc5q8muc.b[0][2]++,function(thisArg,_arguments,P,generator){cov_1jxc5q8muc.f[0]++;cov_1jxc5q8muc.s[1]++;return new((cov_1jxc5q8muc.b[1][0]++,P)||(cov_1jxc5q8muc.b[1][1]++,P=Promise))(function(resolve,reject){cov_1jxc5q8muc.f[1]++;function fulfilled(value){cov_1jxc5q8muc.f[2]++;cov_1jxc5q8muc.s[2]++;try{cov_1jxc5q8muc.s[3]++;step(generator.next(value));}catch(e){cov_1jxc5q8muc.s[4]++;reject(e);}}function rejected(value){cov_1jxc5q8muc.f[3]++;cov_1jxc5q8muc.s[5]++;try{cov_1jxc5q8muc.s[6]++;step(generator["throw"](value));}catch(e){cov_1jxc5q8muc.s[7]++;reject(e);}}function step(result){cov_1jxc5q8muc.f[4]++;cov_1jxc5q8muc.s[8]++;result.done?(cov_1jxc5q8muc.b[2][0]++,resolve(result.value)):(cov_1jxc5q8muc.b[2][1]++,new P(function(resolve){cov_1jxc5q8muc.f[5]++;cov_1jxc5q8muc.s[9]++;resolve(result.value);}).then(fulfilled,rejected));}cov_1jxc5q8muc.s[10]++;step((generator=generator.apply(thisArg,(cov_1jxc5q8muc.b[3][0]++,_arguments)||(cov_1jxc5q8muc.b[3][1]++,[]))).next());});}));cov_1jxc5q8muc.s[11]++;Object.defineProperty(exports,"__esModule",{value:true});const automation_client_1=(cov_1jxc5q8muc.s[12]++,require("@atomist/automation-client"));const commandLine_1=(cov_1jxc5q8muc.s[13]++,require("@atomist/automation-client/action/cli/commandLine"));const child_process_1=(cov_1jxc5q8muc.s[14]++,require("child_process"));const spawned_1=(cov_1jxc5q8muc.s[15]++,require("../../../../util/misc/spawned"));const DelimitedWriteProgressLogDecorator_1=(cov_1jxc5q8muc.s[16]++,require("../../../log/DelimitedWriteProgressLogDecorator"));const pomParser_1=(cov_1jxc5q8muc.s[17]++,require("../../build/local/maven/pomParser"));const cloudFoundryLogParser_1=(cov_1jxc5q8muc.s[18]++,require("./cloudFoundryLogParser"));const CloudFoundryTarget_1=(cov_1jxc5q8muc.s[19]++,require("./CloudFoundryTarget"));/**
 * Spawn a new process to use the Cloud Foundry CLI to push.
 * Note that this isn't thread safe concerning multiple logins or spaces.
 */class CommandLineCloudFoundryDeployer{constructor(projectLoader){cov_1jxc5q8muc.f[6]++;cov_1jxc5q8muc.s[20]++;this.projectLoader=projectLoader;}deploy(da,cfi,log,credentials){cov_1jxc5q8muc.f[7]++;cov_1jxc5q8muc.s[21]++;return __awaiter(this,void 0,void 0,function*(){cov_1jxc5q8muc.f[8]++;cov_1jxc5q8muc.s[22]++;automation_client_1.logger.info("Deploying app [%j] to Cloud Foundry [%s]",da,cfi.description);// We need the Cloud Foundry manifest. If it's not found, we can't deploy
// We want a fresh version unless we need it build
cov_1jxc5q8muc.s[23]++;return this.projectLoader.doWithProject({credentials,id:da.id,readOnly:!da.cwd},project=>{cov_1jxc5q8muc.f[9]++;cov_1jxc5q8muc.s[24]++;return __awaiter(this,void 0,void 0,function*(){cov_1jxc5q8muc.f[10]++;const manifestFile=(cov_1jxc5q8muc.s[25]++,yield project.findFile(CloudFoundryTarget_1.CloudFoundryManifestPath));cov_1jxc5q8muc.s[26]++;if((cov_1jxc5q8muc.b[5][0]++,!cfi.api)||(cov_1jxc5q8muc.b[5][1]++,!cfi.org)||(cov_1jxc5q8muc.b[5][2]++,!cfi.username)||(cov_1jxc5q8muc.b[5][3]++,!cfi.password)){cov_1jxc5q8muc.b[4][0]++;cov_1jxc5q8muc.s[27]++;throw new Error("Cloud foundry authentication information missing. See CloudFoundryTarget.ts");}else{cov_1jxc5q8muc.b[4][1]++;}const opts=(cov_1jxc5q8muc.s[28]++,{cwd:!!da.cwd?(cov_1jxc5q8muc.b[6][0]++,da.cwd):(cov_1jxc5q8muc.b[6][1]++,project.baseDir)});// Note: if the password is wrong, things hangs forever waiting for input.
cov_1jxc5q8muc.s[29]++;yield commandLine_1.runCommand(`cf login -a ${cfi.api} -o ${cfi.org} -u ${cfi.username} -p '${cfi.password}' -s ${cfi.space}`,opts);cov_1jxc5q8muc.s[30]++;automation_client_1.logger.debug("Successfully selected space [%s]",cfi.space);// Turn off color so we don't have unpleasant escape codes in stream
cov_1jxc5q8muc.s[31]++;yield commandLine_1.runCommand("cf config --color false",{cwd:da.cwd});const spawnCommand=(cov_1jxc5q8muc.s[32]++,{command:"cf",args:["push",da.name,"-f",project.baseDir+"/"+manifestFile.path,"--random-route"].concat(!!da.filename?(cov_1jxc5q8muc.b[7][0]++,["-p",da.filename]):(cov_1jxc5q8muc.b[7][1]++,[]))});cov_1jxc5q8muc.s[33]++;automation_client_1.logger.info("About to issue Cloud Foundry command %s: options=%j",spawned_1.stringifySpawnCommand(spawnCommand),opts);const childProcess=(cov_1jxc5q8muc.s[34]++,child_process_1.spawn(spawnCommand.command,spawnCommand.args,opts));const newLineDelimitedLog=(cov_1jxc5q8muc.s[35]++,new DelimitedWriteProgressLogDecorator_1.DelimitedWriteProgressLogDecorator(log,"\n"));cov_1jxc5q8muc.s[36]++;childProcess.stdout.on("data",what=>{cov_1jxc5q8muc.f[11]++;cov_1jxc5q8muc.s[37]++;return newLineDelimitedLog.write(what.toString());});cov_1jxc5q8muc.s[38]++;childProcess.stderr.on("data",what=>{cov_1jxc5q8muc.f[12]++;cov_1jxc5q8muc.s[39]++;return newLineDelimitedLog.write(what.toString());});cov_1jxc5q8muc.s[40]++;return[yield new Promise((resolve,reject)=>{cov_1jxc5q8muc.f[13]++;cov_1jxc5q8muc.s[41]++;childProcess.addListener("exit",(code,signal)=>{cov_1jxc5q8muc.f[14]++;cov_1jxc5q8muc.s[42]++;if(code!==0){cov_1jxc5q8muc.b[8][0]++;cov_1jxc5q8muc.s[43]++;reject(`Error: code ${code}`);}else{cov_1jxc5q8muc.b[8][1]++;}cov_1jxc5q8muc.s[44]++;resolve({endpoint:cloudFoundryLogParser_1.parseCloudFoundryLogForEndpoint(log.log),appName:da.name});});cov_1jxc5q8muc.s[45]++;childProcess.addListener("error",reject);})];});});});}findDeployments(id,ti,credentials){cov_1jxc5q8muc.f[15]++;cov_1jxc5q8muc.s[46]++;return __awaiter(this,void 0,void 0,function*(){cov_1jxc5q8muc.f[16]++;cov_1jxc5q8muc.s[47]++;// This may or may not be deployed. For now, let's guess that it is.
return this.projectLoader.doWithProject({credentials,id,readOnly:true},project=>{cov_1jxc5q8muc.f[17]++;cov_1jxc5q8muc.s[48]++;return __awaiter(this,void 0,void 0,function*(){cov_1jxc5q8muc.f[18]++;const pom=(cov_1jxc5q8muc.s[49]++,yield project.findFile("pom.xml"));const content=(cov_1jxc5q8muc.s[50]++,yield pom.getContent());const va=(cov_1jxc5q8muc.s[51]++,yield pomParser_1.identification(content));cov_1jxc5q8muc.s[52]++;return[{appName:va.artifact}];});});});}undeploy(cfi,deployment,log){cov_1jxc5q8muc.f[19]++;cov_1jxc5q8muc.s[53]++;return __awaiter(this,void 0,void 0,function*(){cov_1jxc5q8muc.f[20]++;cov_1jxc5q8muc.s[54]++;yield spawned_1.spawnAndWatch(spawned_1.asSpawnCommand(`cf login -a ${cfi.api} -o ${cfi.org} -u ${cfi.username} -p '${cfi.password}' -s ${cfi.space}`),{},log);cov_1jxc5q8muc.s[55]++;return spawned_1.spawnAndWatch(spawned_1.asSpawnCommand(`cf delete ${deployment.appName}`),{},log);});}logInterpreter(log){cov_1jxc5q8muc.f[21]++;cov_1jxc5q8muc.s[56]++;return{relevantPart:"",message:"Deploy failed"};}}cov_1jxc5q8muc.s[57]++;exports.CommandLineCloudFoundryDeployer=CommandLineCloudFoundryDeployer;//# sourceMappingURL=data:application/json;charset=utf-8;base64,