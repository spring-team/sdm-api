{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/listener/PushMapping.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/listener/PushMapping.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAMH;;;GAGG;AACU,QAAA,gBAAgB,GAAe,IAAI,CAAC;AA6BjD,uBAA8B,CAAM;IAChC,MAAM,KAAK,GAAG,CAAqB,CAAC;IACpC,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC;AAChD,CAAC;AAHD,sCAGC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PushListenerInvocation } from \"./PushListener\";\n\nexport type NeverMatch = null;\n\n/**\n * Constant to indicate we should never match\n * @type {any}\n */\nexport const DoNotSetAnyGoals: NeverMatch = null;\n\n/**\n * Mapping from push to value, id it can be resolved.\n * This is a central interface used throughout the SDM.\n */\nexport interface PushMapping<V> {\n\n    /**\n     * Name of the PushMapping. Must be unique\n     */\n    readonly name: string;\n\n    /**\n     * Compute a value for the given push. Return undefined\n     * if we don't find a mapped value.\n     * Return DoNotSetAnyGoals (null) to shortcut evaluation of the present set of rules,\n     * terminating evaluation and guarantee the return of undefined if we've reached this point.\n     * Only do so if you are sure\n     * that this evaluation must be short circuited if it has reached this point.\n     * If a previous rule has matched, it will still be used.\n     * The value may be static\n     * or computed on demand, depending on the implementation.\n     * @param {PushListenerInvocation} p\n     * @return {Promise<V | undefined | NeverMatch>}\n     */\n    valueForPush(p: PushListenerInvocation): Promise<V | undefined | NeverMatch>;\n}\n\nexport function isPushMapping(a: any): a is PushMapping<any> {\n    const maybe = a as PushMapping<any>;\n    return !!maybe.name && !!maybe.valueForPush;\n}\n"]}