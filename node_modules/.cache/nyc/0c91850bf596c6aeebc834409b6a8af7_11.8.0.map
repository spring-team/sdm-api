{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/handlers/events/delivery/verify/approvalGate.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/handlers/events/delivery/verify/approvalGate.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAQU,QAAA,iBAAiB,GAAG,sBAAsB,CAAC;AAExD;;;;GAIG;AACH,qBAA4B,GAAW;IACnC,OAAO,GAAG;QACN,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QAC/B,yBAAiB,CAAC;AAC1B,CAAC;AAJD,kCAIC;AAED,0BAAiC,GAAiB;IAC9C,OAAO,GAAG,CAAC,SAAS,IAAI,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,yBAAiB,CAAC,CAAC;AACtE,CAAC;AAFD,4CAEC;AAED,2BAAkC,GAAW;IACzC,IAAI,CAAC,GAAG,EAAE;QACN,OAAO,GAAG,CAAC;KACd;IACD,OAAO,GAAG,CAAC,OAAO,CAAE,IAAI,MAAM,CAAC,QAAQ,GAAG,yBAAiB,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;AAC5E,CAAC;AALD,8CAKC","sourcesContent":["/*\n * Copyright © 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**˚\n * Added to end of URL of a status to fire manual approval step\n * @type {string}\n */\nimport { GitHubStatus } from \"../../../../common/delivery/goals/support/github/gitHubContext\";\n\nexport const ApprovalGateParam = \"atomist:approve=true\";\n\n/**\n * Return a form of this URL for approval\n * @param {string} url\n * @return {string}\n */\nexport function forApproval(url: string): string {\n    return url +\n        (url.includes(\"?\") ? \"&\" : \"?\") +\n        ApprovalGateParam;\n}\n\nexport function requiresApproval(ghs: GitHubStatus) {\n    return ghs.targetUrl && ghs.targetUrl.endsWith(ApprovalGateParam);\n}\n\nexport function disregardApproval(url: string): string {\n    if (!url) {\n        return url;\n    }\n    return url.replace( new RegExp(\"[\\?&]?\" + ApprovalGateParam + \"$\"), \"\");\n}\n"]}