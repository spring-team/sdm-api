"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_2l3ukrsvyo=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/handlers/events/delivery/goals/FulfillGoalOnRequested.ts",hash="5f7dd910cc6681753da7b6bbd33ddf89c2bc0186",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/handlers/events/delivery/goals/FulfillGoalOnRequested.ts",statementMap:{"0":{start:{line:17,column:16},end:{line:24,column:1}},"1":{start:{line:18,column:4},end:{line:23,column:7}},"2":{start:{line:19,column:36},end:{line:19,column:97}},"3":{start:{line:19,column:42},end:{line:19,column:70}},"4":{start:{line:19,column:85},end:{line:19,column:95}},"5":{start:{line:20,column:35},end:{line:20,column:100}},"6":{start:{line:20,column:41},end:{line:20,column:73}},"7":{start:{line:20,column:88},end:{line:20,column:98}},"8":{start:{line:21,column:32},end:{line:21,column:149}},"9":{start:{line:21,column:97},end:{line:21,column:119}},"10":{start:{line:22,column:8},end:{line:22,column:78}},"11":{start:{line:25,column:0},end:{line:25,column:62}},"12":{start:{line:26,column:28},end:{line:26,column:65}},"13":{start:{line:27,column:18},end:{line:27,column:69}},"14":{start:{line:28,column:30},end:{line:28,column:94}},"15":{start:{line:29,column:29},end:{line:29,column:100}},"16":{start:{line:30,column:29},end:{line:30,column:81}},"17":{start:{line:31,column:32},end:{line:31,column:87}},"18":{start:{line:32,column:26},end:{line:32,column:77}},"19":{start:{line:33,column:18},end:{line:33,column:57}},"20":{start:{line:34,column:25},end:{line:34,column:74}},"21":{start:{line:35,column:22},end:{line:35,column:46}},"22":{start:{line:41,column:8},end:{line:41,column:57}},"23":{start:{line:42,column:8},end:{line:42,column:43}},"24":{start:{line:43,column:8},end:{line:43,column:37}},"25":{start:{line:45,column:8},end:{line:45,column:79}},"26":{start:{line:46,column:35},end:{line:46,column:48}},"27":{start:{line:47,column:8},end:{line:47,column:56}},"28":{start:{line:48,column:8},end:{line:49,column:70}},"29":{start:{line:50,column:8},end:{line:50,column:65}},"30":{start:{line:51,column:8},end:{line:51,column:78}},"31":{start:{line:54,column:8},end:{line:90,column:11}},"32":{start:{line:55,column:28},end:{line:55,column:49}},"33":{start:{line:56,column:27},end:{line:56,column:89}},"34":{start:{line:57,column:27},end:{line:57,column:57}},"35":{start:{line:59,column:12},end:{line:62,column:13}},"36":{start:{line:60,column:16},end:{line:60,column:153}},"37":{start:{line:61,column:16},end:{line:61,column:51}},"38":{start:{line:63,column:12},end:{line:66,column:13}},"39":{start:{line:64,column:16},end:{line:64,column:148}},"40":{start:{line:65,column:16},end:{line:65,column:51}},"41":{start:{line:67,column:12},end:{line:67,column:116}},"42":{start:{line:68,column:59},end:{line:68,column:121}},"43":{start:{line:69,column:24},end:{line:69,column:59}},"44":{start:{line:70,column:32},end:{line:70,column:168}},"45":{start:{line:71,column:36},end:{line:71,column:90}},"46":{start:{line:72,column:23},end:{line:72,column:128}},"47":{start:{line:73,column:32},end:{line:73,column:61}},"48":{start:{line:74,column:25},end:{line:74,column:96}},"49":{start:{line:75,column:41},end:{line:75,column:92}},"50":{start:{line:76,column:12},end:{line:89,column:13}},"51":{start:{line:77,column:16},end:{line:77,column:71}},"52":{start:{line:80,column:16},end:{line:80,column:34}},"53":{start:{line:81,column:16},end:{line:88,column:20}},"54":{start:{line:82,column:35},end:{line:85,column:18}},"55":{start:{line:83,column:20},end:{line:83,column:46}},"56":{start:{line:84,column:20},end:{line:84,column:31}},"57":{start:{line:85,column:29},end:{line:88,column:18}},"58":{start:{line:86,column:20},end:{line:86,column:46}},"59":{start:{line:87,column:20},end:{line:87,column:30}},"60":{start:{line:93,column:0},end:{line:93,column:56}},"61":{start:{line:95,column:4},end:{line:101,column:6}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:44},end:{line:17,column:45}},loc:{start:{line:17,column:89},end:{line:24,column:1}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:36},end:{line:18,column:37}},loc:{start:{line:18,column:63},end:{line:23,column:5}},line:18},"2":{name:"fulfilled",decl:{start:{line:19,column:17},end:{line:19,column:26}},loc:{start:{line:19,column:34},end:{line:19,column:99}},line:19},"3":{name:"rejected",decl:{start:{line:20,column:17},end:{line:20,column:25}},loc:{start:{line:20,column:33},end:{line:20,column:102}},line:20},"4":{name:"step",decl:{start:{line:21,column:17},end:{line:21,column:21}},loc:{start:{line:21,column:30},end:{line:21,column:151}},line:21},"5":{name:"(anonymous_5)",decl:{start:{line:21,column:76},end:{line:21,column:77}},loc:{start:{line:21,column:95},end:{line:21,column:121}},line:21},"6":{name:"(anonymous_6)",decl:{start:{line:40,column:4},end:{line:40,column:5}},loc:{start:{line:40,column:65},end:{line:52,column:5}},line:40},"7":{name:"(anonymous_7)",decl:{start:{line:53,column:4},end:{line:53,column:5}},loc:{start:{line:53,column:31},end:{line:91,column:5}},line:53},"8":{name:"(anonymous_8)",decl:{start:{line:54,column:47},end:{line:54,column:48}},loc:{start:{line:54,column:60},end:{line:90,column:9}},line:54},"9":{name:"(anonymous_9)",decl:{start:{line:82,column:26},end:{line:82,column:27}},loc:{start:{line:82,column:35},end:{line:85,column:18}},line:82},"10":{name:"(anonymous_10)",decl:{start:{line:82,column:67},end:{line:82,column:68}},loc:{start:{line:82,column:80},end:{line:85,column:17}},line:82},"11":{name:"(anonymous_11)",decl:{start:{line:85,column:20},end:{line:85,column:21}},loc:{start:{line:85,column:29},end:{line:88,column:18}},line:85},"12":{name:"(anonymous_12)",decl:{start:{line:85,column:61},end:{line:85,column:62}},loc:{start:{line:85,column:74},end:{line:88,column:17}},line:85},"13":{name:"convertForNow",decl:{start:{line:94,column:9},end:{line:94,column:22}},loc:{start:{line:94,column:40},end:{line:102,column:1}},line:94}},branchMap:{"0":{loc:{start:{line:17,column:16},end:{line:24,column:1}},type:"binary-expr",locations:[{start:{line:17,column:17},end:{line:17,column:21}},{start:{line:17,column:25},end:{line:17,column:39}},{start:{line:17,column:44},end:{line:24,column:1}}],line:17},"1":{loc:{start:{line:18,column:16},end:{line:18,column:34}},type:"binary-expr",locations:[{start:{line:18,column:16},end:{line:18,column:17}},{start:{line:18,column:22},end:{line:18,column:33}}],line:18},"2":{loc:{start:{line:21,column:32},end:{line:21,column:148}},type:"cond-expr",locations:[{start:{line:21,column:46},end:{line:21,column:67}},{start:{line:21,column:70},end:{line:21,column:148}}],line:21},"3":{loc:{start:{line:22,column:51},end:{line:22,column:67}},type:"binary-expr",locations:[{start:{line:22,column:51},end:{line:22,column:61}},{start:{line:22,column:65},end:{line:22,column:67}}],line:22},"4":{loc:{start:{line:59,column:12},end:{line:62,column:13}},type:"if",locations:[{start:{line:59,column:12},end:{line:62,column:13}},{start:{line:59,column:12},end:{line:62,column:13}}],line:59},"5":{loc:{start:{line:63,column:12},end:{line:66,column:13}},type:"if",locations:[{start:{line:63,column:12},end:{line:66,column:13}},{start:{line:63,column:12},end:{line:66,column:13}}],line:63},"6":{loc:{start:{line:76,column:12},end:{line:89,column:13}},type:"if",locations:[{start:{line:76,column:12},end:{line:89,column:13}},{start:{line:76,column:12},end:{line:89,column:13}}],line:76},"7":{loc:{start:{line:76,column:16},end:{line:76,column:102}},type:"binary-expr",locations:[{start:{line:76,column:16},end:{line:76,column:40}},{start:{line:76,column:44},end:{line:76,column:78}},{start:{line:76,column:82},end:{line:76,column:102}}],line:76}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var __awaiter=(cov_2l3ukrsvyo.s[0]++,(cov_2l3ukrsvyo.b[0][0]++,this)&&(cov_2l3ukrsvyo.b[0][1]++,this.__awaiter)||(cov_2l3ukrsvyo.b[0][2]++,function(thisArg,_arguments,P,generator){cov_2l3ukrsvyo.f[0]++;cov_2l3ukrsvyo.s[1]++;return new((cov_2l3ukrsvyo.b[1][0]++,P)||(cov_2l3ukrsvyo.b[1][1]++,P=Promise))(function(resolve,reject){cov_2l3ukrsvyo.f[1]++;function fulfilled(value){cov_2l3ukrsvyo.f[2]++;cov_2l3ukrsvyo.s[2]++;try{cov_2l3ukrsvyo.s[3]++;step(generator.next(value));}catch(e){cov_2l3ukrsvyo.s[4]++;reject(e);}}function rejected(value){cov_2l3ukrsvyo.f[3]++;cov_2l3ukrsvyo.s[5]++;try{cov_2l3ukrsvyo.s[6]++;step(generator["throw"](value));}catch(e){cov_2l3ukrsvyo.s[7]++;reject(e);}}function step(result){cov_2l3ukrsvyo.f[4]++;cov_2l3ukrsvyo.s[8]++;result.done?(cov_2l3ukrsvyo.b[2][0]++,resolve(result.value)):(cov_2l3ukrsvyo.b[2][1]++,new P(function(resolve){cov_2l3ukrsvyo.f[5]++;cov_2l3ukrsvyo.s[9]++;resolve(result.value);}).then(fulfilled,rejected));}cov_2l3ukrsvyo.s[10]++;step((generator=generator.apply(thisArg,(cov_2l3ukrsvyo.b[3][0]++,_arguments)||(cov_2l3ukrsvyo.b[3][1]++,[]))).next());});}));cov_2l3ukrsvyo.s[11]++;Object.defineProperty(exports,"__esModule",{value:true});const automation_client_1=(cov_2l3ukrsvyo.s[12]++,require("@atomist/automation-client"));const graphQL_1=(cov_2l3ukrsvyo.s[13]++,require("@atomist/automation-client/graph/graphQL"));const gitHubStatusSetters_1=(cov_2l3ukrsvyo.s[14]++,require("../../../../common/delivery/goals/gitHubStatusSetters"));const fetchGoalsOnCommit_1=(cov_2l3ukrsvyo.s[15]++,require("../../../../common/delivery/goals/support/fetchGoalsOnCommit"));const LoggingProgressLog_1=(cov_2l3ukrsvyo.s[16]++,require("../../../../common/log/LoggingProgressLog"));const WriteToAllProgressLog_1=(cov_2l3ukrsvyo.s[17]++,require("../../../../common/log/WriteToAllProgressLog"));const addressChannels_1=(cov_2l3ukrsvyo.s[18]++,require("../../../../common/slack/addressChannels"));const repoRef_1=(cov_2l3ukrsvyo.s[19]++,require("../../../../util/git/repoRef"));const gitHubProvider_1=(cov_2l3ukrsvyo.s[20]++,require("../../../../util/github/gitHubProvider"));const executeGoal_1=(cov_2l3ukrsvyo.s[21]++,require("./executeGoal"));/**
 * Handle an SDM request goal. Used for many implementation types.
 */class FulfillGoalOnRequested{constructor(implementationMapper,projectLoader,logFactory){cov_2l3ukrsvyo.f[6]++;cov_2l3ukrsvyo.s[22]++;this.implementationMapper=implementationMapper;cov_2l3ukrsvyo.s[23]++;this.projectLoader=projectLoader;cov_2l3ukrsvyo.s[24]++;this.logFactory=logFactory;// public secrets = [{name: "githubToken", uri: Secrets.OrgToken}];
cov_2l3ukrsvyo.s[25]++;this.values=[{path:"token",name:"githubToken",required:true}];const implementationName=(cov_2l3ukrsvyo.s[26]++,"FulfillGoal");cov_2l3ukrsvyo.s[27]++;this.subscriptionName="OnAnyRequestedSdmGoal";cov_2l3ukrsvyo.s[28]++;this.subscription=graphQL_1.subscription({name:"OnAnyRequestedSdmGoal"});cov_2l3ukrsvyo.s[29]++;this.name=implementationName+"OnAnyRequestedSdmGoal";cov_2l3ukrsvyo.s[30]++;this.description=`Fulfill a goal when it reaches 'requested' state`;}handle(event,ctx,params){cov_2l3ukrsvyo.f[7]++;cov_2l3ukrsvyo.s[31]++;return __awaiter(this,void 0,void 0,function*(){cov_2l3ukrsvyo.f[8]++;const sdmGoal=(cov_2l3ukrsvyo.s[32]++,event.data.SdmGoal[0]);const commit=(cov_2l3ukrsvyo.s[33]++,yield fetchGoalsOnCommit_1.fetchCommitForSdmGoal(ctx,sdmGoal));const status=(cov_2l3ukrsvyo.s[34]++,convertForNow(sdmGoal,commit));// this should not happen but it does: automation-api#395
cov_2l3ukrsvyo.s[35]++;if(sdmGoal.state!=="requested"){cov_2l3ukrsvyo.b[4][0]++;cov_2l3ukrsvyo.s[36]++;automation_client_1.logger.warn(`Goal ${sdmGoal.name}: Received '${sdmGoal.state}' on ${status.context}, while looking for 'requested'`);cov_2l3ukrsvyo.s[37]++;return automation_client_1.Success;}else{cov_2l3ukrsvyo.b[4][1]++;}cov_2l3ukrsvyo.s[38]++;if(sdmGoal.fulfillment.method!=="SDM fulfill on requested"){cov_2l3ukrsvyo.b[5][0]++;cov_2l3ukrsvyo.s[39]++;automation_client_1.logger.info("Goal %s: Implementation method is '%s'; not fulfilling",sdmGoal.name,sdmGoal.fulfillment.method);cov_2l3ukrsvyo.s[40]++;return automation_client_1.Success;}else{cov_2l3ukrsvyo.b[5][1]++;}cov_2l3ukrsvyo.s[41]++;automation_client_1.logger.info("Executing FulfillGoalOnRequested with '%s'",sdmGoal.fulfillment.name);// take this out when automation-api#395 is fixed
const{goal,goalExecutor,logInterpreter}=(cov_2l3ukrsvyo.s[42]++,this.implementationMapper.findImplementationBySdmGoal(sdmGoal));const log=(cov_2l3ukrsvyo.s[43]++,yield this.logFactory(ctx,sdmGoal));const progressLog=(cov_2l3ukrsvyo.s[44]++,new WriteToAllProgressLog_1.WriteToAllProgressLog(sdmGoal.name,new LoggingProgressLog_1.LoggingProgressLog(sdmGoal.name,"debug"),log));const addressChannels=(cov_2l3ukrsvyo.s[45]++,addressChannels_1.addressChannelsFor(commit.repo,ctx));const id=(cov_2l3ukrsvyo.s[46]++,repoRef_1.repoRefFromSdmGoal(sdmGoal,(yield gitHubProvider_1.fetchProvider(ctx,sdmGoal.repo.providerId))));const credentials=(cov_2l3ukrsvyo.s[47]++,{token:params.githubToken});const rwlc=(cov_2l3ukrsvyo.s[48]++,{status,progressLog,context:ctx,addressChannels,id,credentials});const isolatedGoalLauncher=(cov_2l3ukrsvyo.s[49]++,this.implementationMapper.getIsolatedGoalLauncher());cov_2l3ukrsvyo.s[50]++;if((cov_2l3ukrsvyo.b[7][0]++,goal.definition.isolated)&&(cov_2l3ukrsvyo.b[7][1]++,!process.env.ATOMIST_ISOLATED_GOAL)&&(cov_2l3ukrsvyo.b[7][2]++,isolatedGoalLauncher)){cov_2l3ukrsvyo.b[6][0]++;cov_2l3ukrsvyo.s[51]++;return isolatedGoalLauncher(sdmGoal,ctx,progressLog);}else{cov_2l3ukrsvyo.b[6][1]++;cov_2l3ukrsvyo.s[52]++;delete sdmGoal.id;cov_2l3ukrsvyo.s[53]++;return executeGoal_1.executeGoal({projectLoader:params.projectLoader},goalExecutor,rwlc,sdmGoal,goal,logInterpreter).then(res=>{cov_2l3ukrsvyo.f[9]++;cov_2l3ukrsvyo.s[54]++;return __awaiter(this,void 0,void 0,function*(){cov_2l3ukrsvyo.f[10]++;cov_2l3ukrsvyo.s[55]++;yield progressLog.close();cov_2l3ukrsvyo.s[56]++;return res;});},err=>{cov_2l3ukrsvyo.f[11]++;cov_2l3ukrsvyo.s[57]++;return __awaiter(this,void 0,void 0,function*(){cov_2l3ukrsvyo.f[12]++;cov_2l3ukrsvyo.s[58]++;yield progressLog.close();cov_2l3ukrsvyo.s[59]++;throw err;});});}});}}cov_2l3ukrsvyo.s[60]++;exports.FulfillGoalOnRequested=FulfillGoalOnRequested;function convertForNow(sdmGoal,commit){cov_2l3ukrsvyo.f[13]++;cov_2l3ukrsvyo.s[61]++;return{commit,state:gitHubStatusSetters_1.sdmGoalStateToGitHubStatusState(sdmGoal.state),targetUrl:sdmGoal.url,context:sdmGoal.externalKey,description:sdmGoal.description};}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2hhbmRsZXJzL2V2ZW50cy9kZWxpdmVyeS9nb2Fscy9GdWxmaWxsR29hbE9uUmVxdWVzdGVkLnRzIiwic291cmNlcyI6WyIvVXNlcnMvcm9kam9obnNvbi9zZm9yemFuZG8tZGV2L2lkZWEtcHJvamVjdHMvbXktZmxvdy9zcmMvaGFuZGxlcnMvZXZlbnRzL2RlbGl2ZXJ5L2dvYWxzL0Z1bGZpbGxHb2FsT25SZXF1ZXN0ZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7OztHQWNHOzs7Ozs7Ozs7O0FBRUgsa0VBT29DO0FBQ3BDLHNFQUF3RTtBQU14RSwrRkFBd0c7QUFFeEcscUdBQXFHO0FBRXJHLGtGQUErRTtBQUMvRSx3RkFBcUY7QUFFckYsOEVBQThFO0FBVzlFLDBEQUFrRTtBQUNsRSwyRUFBdUU7QUFDdkUsK0NBQTRDO0FBRTVDOztHQUVHO0FBQ0g7SUFZSSxZQUE2QixvQkFBaUQsRUFDakQsYUFBNEIsRUFDNUIsVUFBOEI7UUFGOUIseUJBQW9CLEdBQXBCLG9CQUFvQixDQUE2QjtRQUNqRCxrQkFBYSxHQUFiLGFBQWEsQ0FBZTtRQUM1QixlQUFVLEdBQVYsVUFBVSxDQUFvQjtRQVAzRCxtRUFBbUU7UUFDNUQsV0FBTSxHQUFHLENBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxhQUFhLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFnQyxDQUFDO1FBT3BHLE1BQU0sa0JBQWtCLEdBQUcsYUFBYSxDQUFDO1FBQ3pDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyx1QkFBdUIsQ0FBQztRQUNoRCxJQUFJLENBQUMsWUFBWTtZQUNiLHNCQUFZLENBQUMsRUFBQyxJQUFJLEVBQUUsdUJBQXVCLEVBQUMsQ0FBQyxDQUFDO1FBQ2xELElBQUksQ0FBQyxJQUFJLEdBQUcsa0JBQWtCLEdBQUcsdUJBQXVCLENB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QUFFLENBQUM7b0JBQzFCLE9BQU8sR0FBRyxDQUFDO2dCQUNmLENBQUMsQ0FBQSxFQUFFLENBQU0sR0FBRyxFQUFDLEVBQUU7b0JBQ1gsTUFBTSxXQUFXLENBQUMsS0FBSyxFQUFFLENBQUM7b0JBQzFCLE1BQU0sR0FBRyxDQUFDO2dCQUNkLENBQUMsQ0FBQSxDQUFDLENBQUM7YUFDVjtRQUNMLENBQUM7S0FBQTtDQUNKO0FBdEVELHdEQXNFQztBQUVELHVCQUF1QixPQUErQixFQUFFLE1BQStCO0lBQ25GLE9BQU87UUFDSCxNQUFNO1FBQ04sS0FBSyxFQUFFLHFEQUErQixDQUFDLE9BQU8sQ0FBQyxLQUFxQixDQUFDO1FBQ3JFLFNBQVMsRUFBRSxPQUFPLENBQUMsR0FBRztRQUN0QixPQUFPLEVBQUUsT0FBTyxDQUFDLFdBQVc7UUFDNUIsV0FBVyxFQUFFLE9BQU8sQ0FBQyxXQUFXO0tBQ25DLENBQUM7QUFDTixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCDCqSAyMDE4IEF0b21pc3QsIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHtcbiAgICBFdmVudEZpcmVkLFxuICAgIEhhbmRsZUV2ZW50LFxuICAgIEhhbmRsZXJDb250ZXh0LFxuICAgIEhhbmRsZXJSZXN1bHQsXG4gICAgbG9nZ2VyLFxuICAgIFN1Y2Nlc3MsXG59IGZyb20gXCJAYXRvbWlzdC9hdXRvbWF0aW9uLWNsaWVudFwiO1xuaW1wb3J0IHsgc3Vic2NyaXB0aW9uIH0gZnJvbSBcIkBhdG9taXN0L2F1dG9tYXRpb24tY2xpZW50L2dyYXBoL2dyYXBoUUxcIjtcbmltcG9ydCB7XG4gICAgRXZlbnRIYW5kbGVyTWV0YWRhdGEsXG4gICAgVmFsdWVEZWNsYXJhdGlvbixcbn0gZnJvbSBcIkBhdG9taXN0L2F1dG9tYXRpb24tY2xpZW50L21ldGFkYXRhL2F1dG9tYXRpb25NZXRhZGF0YVwiO1xuaW1wb3J0IHsgUHJvZ3Jlc3NMb2dGYWN0b3J5IH0gZnJvbSBcIi4uLy4uLy4uLy4uXCI7XG5pbXBvcnQgeyBzZG1Hb2FsU3RhdGVUb0dpdEh1YlN0YXR1c1N0YXRlIH0gZnJvbSBcIi4uLy4uLy4uLy4uL2NvbW1vbi9kZWxpdmVyeS9nb2Fscy9naXRIdWJTdGF0dXNTZXR0ZXJzXCI7XG5pbXBvcnQgeyBTZG1Hb2FsSW1wbGVtZW50YXRpb25NYXBwZXIgfSBmcm9tIFwiLi4vLi4vLi4vLi4vY29tbW9uL2RlbGl2ZXJ5L2dvYWxzL1NkbUdvYWxJbXBsZW1lbnRhdGlvbk1hcHBlclwiO1xuaW1wb3J0IHsgZmV0Y2hDb21taXRGb3JTZG1Hb2FsIH0gZnJvbSBcIi4uLy4uLy4uLy4uL2NvbW1vbi9kZWxpdmVyeS9nb2Fscy9zdXBwb3J0L2ZldGNoR29hbHNPbkNvbW1pdFwiO1xuaW1wb3J0IHsgUnVuV2l0aExvZ0NvbnRleHQgfSBmcm9tIFwiLi4vLi4vLi4vLi4vY29tbW9uL2RlbGl2ZXJ5L2dvYWxzL3N1cHBvcnQvcmVwb3J0R29hbEVycm9yXCI7XG5pbXBvcnQgeyBMb2dnaW5nUHJvZ3Jlc3NMb2cgfSBmcm9tIFwiLi4vLi4vLi4vLi4vY29tbW9uL2xvZy9Mb2dnaW5nUHJvZ3Jlc3NMb2dcIjtcbmltcG9ydCB7IFdyaXRlVG9BbGxQcm9ncmVzc0xvZyB9IGZyb20gXCIuLi8uLi8uLi8uLi9jb21tb24vbG9nL1dyaXRlVG9BbGxQcm9ncmVzc0xvZ1wiO1xuaW1wb3J0IHsgUHJvamVjdExvYWRlciB9IGZyb20gXCIuLi8uLi8uLi8uLi9jb21tb24vcmVwby9Qcm9qZWN0TG9hZGVyXCI7XG5pbXBvcnQgeyBhZGRyZXNzQ2hhbm5lbHNGb3IgfSBmcm9tIFwiLi4vLi4vLi4vLi4vY29tbW9uL3NsYWNrL2FkZHJlc3NDaGFubmVsc1wiO1xuaW1wb3J0IHtcbiAgICBTZG1Hb2FsLFxuICAgIFNkbUdvYWxTdGF0ZSxcbn0gZnJvbSBcIi4uLy4uLy4uLy4uL2luZ2VzdGVycy9zZG1Hb2FsSW5nZXN0ZXJcIjtcbmltcG9ydCB7XG4gICAgQ29tbWl0Rm9yU2RtR29hbCxcbiAgICBPbkFueVJlcXVlc3RlZFNkbUdvYWwsXG4gICAgU2RtR29hbEZpZWxkcyxcbiAgICBTdGF0dXNGb3JFeGVjdXRlR29hbCxcbn0gZnJvbSBcIi4uLy4uLy4uLy4uL3R5cGluZ3MvdHlwZXNcIjtcbmltcG9ydCB7IHJlcG9SZWZGcm9tU2RtR29hbCB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlsL2dpdC9yZXBvUmVmXCI7XG5pbXBvcnQgeyBmZXRjaFByb3ZpZGVyIH0gZnJvbSBcIi4uLy4uLy4uLy4uL3V0aWwvZ2l0aHViL2dpdEh1YlByb3ZpZGVyXCI7XG5pbXBvcnQgeyBleGVjdXRlR29hbCB9IGZyb20gXCIuL2V4ZWN1dGVHb2FsXCI7XG5cbi8qKlxuICogSGFuZGxlIGFuIFNETSByZXF1ZXN0IGdvYWwuIFVzZWQgZm9yIG1hbnkgaW1wbGVtZW50YXRpb24gdHlwZXMuXG4gKi9cbmV4cG9ydCBjbGFzcyBGdWxmaWxsR29hbE9uUmVxdWVzdGVkIGltcGxlbWVudHMgSGFuZGxlRXZlbnQ8T25BbnlSZXF1ZXN0ZWRTZG1Hb2FsLlN1YnNjcmlwdGlvbj4sXG4gICAgRXZlbnRIYW5kbGVyTWV0YWRhdGEge1xuXG4gICAgcHVibGljIHN1YnNjcmlwdGlvbk5hbWU6IHN0cmluZztcbiAgICBwdWJsaWMgc3Vic2NyaXB0aW9uOiBzdHJpbmc7XG4gICAgcHVibGljIG5hbWU6IHN0cmluZztcbiAgICBwdWJsaWMgZGVzY3JpcHRpb246IHN0cmluZztcbiAgICAvLyBwdWJsaWMgc2VjcmV0cyA9IFt7bmFtZTogXCJnaXRodWJUb2tlblwiLCB1cmk6IFNlY3JldHMuT3JnVG9rZW59XTtcbiAgICBwdWJsaWMgdmFsdWVzID0gW3sgcGF0aDogXCJ0b2tlblwiLCBuYW1lOiBcImdpdGh1YlRva2VuXCIsIHJlcXVpcmVkOiB0cnVlIH1dIGFzIGFueVtdIGFzIFZhbHVlRGVjbGFyYXRpb25bXTtcblxuICAgIHB1YmxpYyBnaXRodWJUb2tlbjogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBpbXBsZW1lbnRhdGlvbk1hcHBlcjogU2RtR29hbEltcGxlbWVudGF0aW9uTWFwcGVyLFxuICAgICAgICAgICAgICAgIHByaXZhdGUgcmVhZG9ubHkgcHJvamVjdExvYWRlcjogUHJvamVjdExvYWRlcixcbiAgICAgICAgICAgICAgICBwcml2YXRlIHJlYWRvbmx5IGxvZ0ZhY3Rvcnk6IFByb2dyZXNzTG9nRmFjdG9yeSkge1xuICAgICAgICBjb25zdCBpbXBsZW1lbnRhdGlvbk5hbWUgPSBcIkZ1bGZpbGxHb2FsXCI7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uTmFtZSA9IFwiT25BbnlSZXF1ZXN0ZWRTZG1Hb2FsXCI7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uID1cbiAgICAgICAgICAgIHN1YnNjcmlwdGlvbih7bmFtZTogXCJPbkFueVJlcXVlc3RlZFNkbUdvYWxcIn0pO1xuICAgICAgICB0aGlzLm5hbWUgPSBpbXBsZW1lbnRhdGlvbk5hbWUgKyBcIk9uQW55UmVxdWVzdGVkU2RtR29hbFwiO1xuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gYEZ1bGZpbGwgYSBnb2FsIHdoZW4gaXQgcmVhY2hlcyAncmVxdWVzdGVkJyBzdGF0ZWA7XG4gICAgfVxuXG4gICAgcHVibGljIGFzeW5jIGhhbmRsZShldmVudDogRXZlbnRGaXJlZDxPbkFueVJlcXVlc3RlZFNkbUdvYWwuU3Vic2NyaXB0aW9uPixcbiAgICAgICAgICAgICAgICAgICAgICAgIGN0eDogSGFuZGxlckNvbnRleHQsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHRoaXMpOiBQcm9taXNlPEhhbmRsZXJSZXN1bHQ+IHtcbiAgICAgICAgY29uc3Qgc2RtR29hbCA9IGV2ZW50LmRhdGEuU2RtR29hbFswXSBhcyBTZG1Hb2FsO1xuICAgICAgICBjb25zdCBjb21taXQgPSBhd2FpdCBmZXRjaENvbW1pdEZvclNkbUdvYWwoY3R4LCBzZG1Hb2FsKTtcblxuICAgICAgICBjb25zdCBzdGF0dXM6IFN0YXR1c0ZvckV4ZWN1dGVHb2FsLkZyYWdtZW50ID0gY29udmVydEZvck5vdyhzZG1Hb2FsLCBjb21taXQpO1xuXG4gICAgICAgIC8vIHRoaXMgc2hvdWxkIG5vdCBoYXBwZW4gYnV0IGl0IGRvZXM6IGF1dG9tYXRpb24tYXBpIzM5NVxuICAgICAgICBpZiAoc2RtR29hbC5zdGF0ZSAhPT0gXCJyZXF1ZXN0ZWRcIikge1xuICAgICAgICAgICAgbG9nZ2VyLndhcm4oYEdvYWwgJHtzZG1Hb2FsLm5hbWV9OiBSZWNlaXZlZCAnJHtzZG1Hb2FsLnN0YXRlfScgb24gJHtzdGF0dXMuY29udGV4dH0sIHdoaWxlIGxvb2tpbmcgZm9yICdyZXF1ZXN0ZWQnYCk7XG4gICAgICAgICAgICByZXR1cm4gU3VjY2VzcztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChzZG1Hb2FsLmZ1bGZpbGxtZW50Lm1ldGhvZCAhPT0gXCJTRE0gZnVsZmlsbCBvbiByZXF1ZXN0ZWRcIikge1xuICAgICAgICAgICAgbG9nZ2VyLmluZm8oXCJHb2FsICVzOiBJbXBsZW1lbnRhdGlvbiBtZXRob2QgaXMgJyVzJzsgbm90IGZ1bGZpbGxpbmdcIiwgc2RtR29hbC5uYW1lLCBzZG1Hb2FsLmZ1bGZpbGxtZW50Lm1ldGhvZCk7XG4gICAgICAgICAgICByZXR1cm4gU3VjY2VzcztcbiAgICAgICAgfVxuXG4gICAgICAgIGxvZ2dlci5pbmZvKFwiRXhlY3V0aW5nIEZ1bGZpbGxHb2FsT25SZXF1ZXN0ZWQgd2l0aCAnJXMnXCIsIHNkbUdvYWwuZnVsZmlsbG1lbnQubmFtZSk7IC8vIHRha2UgdGhpcyBvdXQgd2hlbiBhdXRvbWF0aW9uLWFwaSMzOTUgaXMgZml4ZWRcblxuICAgICAgICBjb25zdCB7Z29hbCwgZ29hbEV4ZWN1dG9yLCBsb2dJbnRlcnByZXRlcn0gPSB0aGlzLmltcGxlbWVudGF0aW9uTWFwcGVyLmZpbmRJbXBsZW1lbnRhdGlvbkJ5U2RtR29hbChzZG1Hb2FsKTtcblxuICAgICAgICBjb25zdCBsb2cgPSBhd2FpdCB0aGlzLmxvZ0ZhY3RvcnkoY3R4LCBzZG1Hb2FsKTtcbiAgICAgICAgY29uc3QgcHJvZ3Jlc3NMb2cgPSBuZXcgV3JpdGVUb0FsbFByb2dyZXNzTG9nKHNkbUdvYWwubmFtZSwgbmV3IExvZ2dpbmdQcm9ncmVzc0xvZyhzZG1Hb2FsLm5hbWUsIFwiZGVidWdcIiksIGxvZyk7XG4gICAgICAgIGNvbnN0IGFkZHJlc3NDaGFubmVscyA9IGFkZHJlc3NDaGFubmVsc0Zvcihjb21taXQucmVwbywgY3R4KTtcbiAgICAgICAgY29uc3QgaWQgPSByZXBvUmVmRnJvbVNkbUdvYWwoc2RtR29hbCwgYXdhaXQgZmV0Y2hQcm92aWRlcihjdHgsIHNkbUdvYWwucmVwby5wcm92aWRlcklkKSk7XG4gICAgICAgIGNvbnN0IGNyZWRlbnRpYWxzID0ge3Rva2VuOiBwYXJhbXMuZ2l0aHViVG9rZW59O1xuICAgICAgICBjb25zdCByd2xjOiBSdW5XaXRoTG9nQ29udGV4dCA9IHtzdGF0dXMsIHByb2dyZXNzTG9nLCBjb250ZXh0OiBjdHgsIGFkZHJlc3NDaGFubmVscywgaWQsIGNyZWRlbnRpYWxzfTtcblxuICAgICAgICBjb25zdCBpc29sYXRlZEdvYWxMYXVuY2hlciA9IHRoaXMuaW1wbGVtZW50YXRpb25NYXBwZXIuZ2V0SXNvbGF0ZWRHb2FsTGF1bmNoZXIoKTtcblxuICAgICAgICBpZiAoZ29hbC5kZWZpbml0aW9uLmlzb2xhdGVkICYmICFwcm9jZXNzLmVudi5BVE9NSVNUX0lTT0xBVEVEX0dPQUwgJiYgaXNvbGF0ZWRHb2FsTGF1bmNoZXIpIHtcbiAgICAgICAgICAgIHJldHVybiBpc29sYXRlZEdvYWxMYXVuY2hlcihzZG1Hb2FsLCBjdHgsIHByb2dyZXNzTG9nKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGRlbGV0ZSAoc2RtR29hbCBhcyBhbnkpLmlkO1xuICAgICAgICAgICAgcmV0dXJuIGV4ZWN1dGVHb2FsKHtwcm9qZWN0TG9hZGVyOiBwYXJhbXMucHJvamVjdExvYWRlcn0sXG4gICAgICAgICAgICAgICAgZ29hbEV4ZWN1dG9yLCByd2xjLCBzZG1Hb2FsLCBnb2FsLCBsb2dJbnRlcnByZXRlcilcbiAgICAgICAgICAgICAgICAudGhlbihhc3luYyByZXMgPT4ge1xuICAgICAgICAgICAgICAgICAgICBhd2FpdCBwcm9ncmVzc0xvZy5jbG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzO1xuICAgICAgICAgICAgICAgIH0sIGFzeW5jIGVyciA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IHByb2dyZXNzTG9nLmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZnVuY3Rpb24gY29udmVydEZvck5vdyhzZG1Hb2FsOiBTZG1Hb2FsRmllbGRzLkZyYWdtZW50LCBjb21taXQ6IENvbW1pdEZvclNkbUdvYWwuQ29tbWl0KTogU3RhdHVzRm9yRXhlY3V0ZUdvYWwuRnJhZ21lbnQge1xuICAgIHJldHVybiB7XG4gICAgICAgIGNvbW1pdCxcbiAgICAgICAgc3RhdGU6IHNkbUdvYWxTdGF0ZVRvR2l0SHViU3RhdHVzU3RhdGUoc2RtR29hbC5zdGF0ZSBhcyBTZG1Hb2FsU3RhdGUpLFxuICAgICAgICB0YXJnZXRVcmw6IHNkbUdvYWwudXJsLCAvLyBub3QgaGFuZGxpbmcgYXBwcm92YWwgd2VpcmRuZXNzXG4gICAgICAgIGNvbnRleHQ6IHNkbUdvYWwuZXh0ZXJuYWxLZXksXG4gICAgICAgIGRlc2NyaXB0aW9uOiBzZG1Hb2FsLmRlc2NyaXB0aW9uLFxuICAgIH07XG59XG4iXX0=