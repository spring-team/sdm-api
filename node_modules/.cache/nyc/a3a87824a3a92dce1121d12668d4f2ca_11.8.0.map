{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/blueprint/support/AbstractSoftwareDeliveryMachine.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/blueprint/support/AbstractSoftwareDeliveryMachine.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH,kEAAgF;AAEhF,4BAA4B;AAC5B,2EAAwE;AAExE,8EAA2E;AAC3E,kFAA+E;AAG/E,yFAA8F;AAE9F,iHAA8G;AAK9G,uEAAoE;AACpE,4FAAiF;AAEjF,+EAAmF;AACnF,2EAAwE;AACxE,uEAA8E;AAC9E,8GAA2G;AAC3G,wHAAqH;AACrH,4GAAuG;AACvG,2HAAwH;AACxH,yFAAsF;AACtF,wGAAqG;AACrG,wFAAuG;AACvG,kIAA+H;AAC/H,gFAAoF;AACpF,0GAAuG;AACvG,wFAAqF;AACrF,4HAAyH;AACzH,uGAAqH;AACrH,iHAA8G;AAC9G,uFAAoF;AACpF,iFAA8E;AAC9E,yFAAsF;AACtF,4EAAyE;AACzE,oFAAiF;AACjF,4EAAyE;AACzE,8EAA2E;AAC3E,gFAA6E;AAC7E,4DAAyD;AACzD,0FAAuF;AAGvF,sDAAwE;AAIxE,sDAAqH;AACrH,+EAA4E;AAE5E;;GAEG;AACH,qCAAsD,SAAQ,yDAA2B;IA6VrF;;;;;OAKG;IACH,YAAsC,IAAY,EACZ,OAAuC;QACzE,KAAK,EAAE,CAAC;QAF0B,SAAI,GAAJ,IAAI,CAAQ;QACZ,YAAO,GAAP,OAAO,CAAgC;QAlWrE,eAAU,GAAgC,EAAE,CAAC;QAE9C,YAAO,GAAgC,EAAE,CAAC;QAE1C,uBAAkB,GAAgC,EAAE,CAAC;QAErD,qBAAgB,GAAmC,EAAE,CAAC;QAEtD,oBAAe,GAAqB,EAAE,CAAC;QAEvC,gBAAW,GAAiB,EAAE,CAAC;QAErB,wBAAmB,GAAiB,EAAE,CAAC;QAExD,wDAAwD;QAChD,gBAAW,GAAY,KAAK,CAAC;QAwBrC;;WAEG;QACa,0BAAqB,GAAG,IAAI,yDAA2B;QACnE,6CAA6C;QAC7C,OAAO,CAAC,GAAG,CAAC,qBAAqB,KAAK,YAAY,CAAC,CAAC,CAAC,6CAA8B,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,qBAAqB;QAkG1G,mBAAc,GAAG,GAAG,EAAE,CAAC,IAAI,qDAAyB,CACjE,6BAAY,EACZ,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,IAAI,CAAC,6BAA6B,EAClC,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAA;QA4BpB,oBAAe,GAC5B,GAAG,EAAE,CAAC,IAAI,iDAAsB,CAAC,CAAC,0BAAS,EAAE,8BAAa,CAAC,CAAC,CAAA;IAoLhE,CAAC;IAnVD;;;;OAIG;IACH,IAAI,WAAW;QACX,OAAO,IAAI,qBAAS,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1D,CAAC;IAED;;;;;OAKG;IACH,IAAI,YAAY;QACZ,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC,oBAAoB,CAAC,MAAM,KAAK,CAAC,CAAC;IAClD,CAAC;IASD;;;;;;;;;;;OAWG;IACI,qBAAqB,CAAC,kBAA0B,EAC1B,IAAU,EACV,YAAgC,EAChC,OAGE;QAC3B,MAAM,SAAS,mBACX,QAAQ,EAAE,yBAAO,EACjB,cAAc,EAAE,yCAAuB,CAAC,kBAAkB,EAAE,EAAE,CAAC,IAC5D,OAAO,CACb,CAAC;QACF,MAAM,cAAc,GAAG;YACnB,kBAAkB,EAAE,IAAI,EAAE,YAAY;YACtC,QAAQ,EAAE,SAAS,CAAC,QAAQ;YAC5B,cAAc,EAAE,SAAS,CAAC,cAAc;SAC3C,CAAC;QACF,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;QAC7D,OAAO,IAAI,CAAC;IAChB,CAAC;IAES,uBAAuB;QAC7B,MAAM,mBAAmB,GAAoB;YACzC,SAAS,EAAE,IAAI,CAAC,6BAA6B;YAC7C,YAAY,EAAE,oCAAmB;YACjC,eAAe,EAAE,IAAI;SACxB,CAAC;QACF,OAAO,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,EAC/C,oCAAmB,EACnB,6CAAqB,CAAC,mBAAmB,CAAC,CAAC,CAAC;IACpD,CAAC;IAEM,gBAAgB,CAAC,GAAG,WAAyB;QAChD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAC;QAC9C,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,IAAY,cAAc;QACtB,OAAO,IAAI,CAAC,qBAAqB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC1C,GAAG,EAAE,CAAC,IAAI,+BAAc,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACxF,SAAS,CAAC;IAClB,CAAC;IAED,IAAY,iBAAiB;QACzB,OAAO,IAAI,CAAC,sBAAsB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC3C,GAAG,EAAE,CAAC,IAAI,qCAAiB,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC5F,SAAS,CAAC;IAClB,CAAC;IAED,IAAY,mBAAmB;QAC3B,OAAO,IAAI,CAAC,8BAA8B,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACnD,GAAG,EAAE,CAAC,IAAI,mEAAgC,CAAC,IAAI,CAAC,8BAA8B,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACnH,SAAS,CAAC;IAClB,CAAC;IAED,IAAY,WAAW;QACnB,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;YAC/B,0BAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC/B,OAAO,oCAAmB,CAAC;SAC9B;QACD,OAAO;YACH,aAAa,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,+BAAc,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAC/D,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,EACxC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;YAClE,eAAe,EAAE,CAAC,GAAG,EAAE,CAAC,8BAAiB,CAAC;oBACtC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;oBACzC,cAAc,EAAE,IAAI,CAAC,iBAAiB;oBACtC,WAAW,EAAE,IAAI,CAAC,WAAW;oBAC7B,qBAAqB,EAAE,IAAI,CAAC,qBAAqB;iBACpD,CAAC,CAAC;SACN,CAAC;IACN,CAAC;IAED,IAAY,gBAAgB;QACxB,OAAO;YACH,aAAa,EAAE;gBACX,GAAG,EAAE,CAAC,IAAI,mEAAgC,EAAE;gBAC5C,GAAG,EAAE,CAAC,IAAI,yEAAmC,CAAC,IAAI,CAAC,qBAAqB,CAAC;gBACzE,GAAG,EAAE,CAAC,IAAI,iDAAuB,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAC9D,IAAI,CAAC,uBAAuB,CAAC;aAAC;YACtC,eAAe,EAAE,EAAE;SACtB,CAAC;IACN,CAAC;IASD,IAAY,cAAc;QACtB,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACxC,GAAG,EAAE,CAAC,IAAI,+BAAc,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACtF,SAAS,CAAC;IAClB,CAAC;IAED,IAAY,gBAAgB;QACxB,OAAO,IAAI,CAAC,2BAA2B,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAChD,GAAG,EAAE,CAAC,IAAI,uDAA0B,CAAC,IAAI,CAAC,2BAA2B,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC1G,SAAS,CAAC;IAClB,CAAC;IAED,IAAY,QAAQ;QAChB,OAAO;YACH,eAAe,EAAE;gBACb,GAAG,EAAE,CAAC,+BAAc,CAAC;oBACjB,WAAW,EAAE,IAAI,CAAC,mBAAmB;oBACrC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;oBACzC,cAAc,EAAE,IAAI,CAAC,iBAAiB;oBACtC,qBAAqB,EAAE,IAAI,CAAC,qBAAqB;iBACpD,CAAC;gBACF,0CAAuB;aAAC;YAC5B,aAAa,EAAE,EAAE;SACpB,CAAC;IACN,CAAC;IAKD,IAAI,YAAY;QACZ,OAAO,GAAG,EAAE;YACR,OAAO,qCAAsB,EAAE,CAAC;QACpC,CAAC,CAAC;IACN,CAAC;IAED,IAAY,kBAAkB;QAC1B,OAAO,IAAI,CAAC,eAAe;aACtB,MAAM,CAAC;YACJ,IAAI,CAAC,WAAW;YAChB,IAAI,CAAC,gBAAgB;YACrB,IAAI,CAAC,QAAQ;SAChB,CAAC,CAAC;IACX,CAAC;IAED,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,gBAAgB;aACvB,MAAM,CAAC,GAAG,EAAE,CAAC,IAAI,+CAAsB,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;aACzH,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;aACtE,MAAM,CAAC;YACJ,IAAI,CAAC,2BAA2B,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACzC,GAAG,EAAE,CAAC,IAAI,2CAAoB,CAAC,IAAI,CAAC,2BAA2B,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBACpG,SAAS;YACb,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAC5B,GAAG,EAAE,CAAC,IAAI,+DAA8B,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBACjG,SAAS;YACb,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,aAAK,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,SAAS;YAC/G,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,iCAAe,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,SAAS;YACnI,IAAI,CAAC,qBAAqB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACnC,GAAG,EAAE,CAAC,IAAI,yCAAmB,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBAC7F,SAAS;YACb,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAClC,GAAG,EAAE,CAAC,IAAI,uCAAkB,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBAC3F,SAAS;YACb,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAClC,GAAG,EAAE,CAAC,IAAI,6BAAa,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBAClH,SAAS;YACb,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAClC,GAAG,EAAE,CAAC,IAAI,6BAAa,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,oBAAoB,EACzE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,SAAS;YACrD,IAAI,CAAC,uBAAuB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACrC,GAAG,EAAE,CAAC,IAAI,iCAAe,CAAC,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBAC3F,SAAS;YACb,IAAI,CAAC,cAAc;YACnB,IAAI,CAAC,iBAAiB;YACtB,IAAI,CAAC,mBAAmB;YACxB,IAAI,CAAC,eAAe;YACpB,IAAI,CAAC,cAAc;YACnB,IAAI,CAAC,gBAAgB;YACrB,IAAI,CAAC,cAAc;SACtB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;IAED,IAAI,eAAe;QACf,OAAO,IAAI,CAAC,UAAU;aACjB,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC;aACxE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;aACpB,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC;aAC/B,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAC3B,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC;IAEM,aAAa,CAAC,GAAG,CAA8B;QAClD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC5C,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,UAAU,CAAC,GAAG,CAA8B;QAC/C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACtC,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,qBAAqB,CAAC,GAAG,CAA8B;QAC1D,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACnC,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,mBAAmB,CAAC,GAAG,CAAiC;QAC3D,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,kBAAkB,CAAC,GAAG,GAAqB;QAC9C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,aAAa,CAAC,GAAG,KAA0D;QAC9E,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CACzB,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,IAAI,EAAE,0BAAS,EACxC,2BAAY,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC,KAAK,CAAC,EACjD;YACI,QAAQ,EAAE,CAAC,CAAC,QAAQ;YACpB,cAAc,EAAE,CAAC,CAAC,KAAK,CAAC,cAAc;SACzC,CAAC;aACD,qBAAqB,CAAC,CAAC,CAAC,IAAI,EAAE,8BAAa,EACxC,2BAAY,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC,KAAK,CAAC,EACjD;YACI,QAAQ,EAAE,CAAC,CAAC,QAAQ;YACpB,cAAc,EACd,CAAC,CAAC,KAAK,CAAC,cAAc;SACzB,CACJ,CAAC,CAAC;QACX,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,cAAc,CAAC,GAAG,KAA0E;QAC/F,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACzB,SAAS;YACT,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,EAAE,6BAAa,CAChE,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,CAAC,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,KAAK,CAAC,EAC9B;gBACI,QAAQ,EAAE,CAAC,CAAC,QAAQ;gBACpB,cAAc,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,cAAc;aAClD,CACJ,CAAC;YACF,WAAW;YACX,IAAI,CAAC,eAAe,CAChB,CAAC,CAAC,KAAK,CAAC,YAAY,EACpB,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;YAC/C,WAAW;YACX,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,YAAY,EAAE,iCAAe,CAAC,CAAC,CAAC,KAAK,CAAC,EAC7E;gBACI,QAAQ,EAAE,CAAC,CAAC,QAAQ;gBACpB,cAAc,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,cAAc;aAClD,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;;;;OAQG;IACI,eAAe,CAAC,IAAU,EAAE,cAAsB,EAClC,WAAqB,yBAAO;QAC/C,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC;YACrC,IAAI;YACJ,cAAc,EAAE,QAAQ;SAC3B,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACI,eAAe,CAAC,GAAG,WAAgD;QACtE,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;YAClC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;SAC9B;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,SAAS,CAAC,UAA6C;QAC1D,0BAAM,CAAC,IAAI,CAAC,0CAA0C,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;QACzE,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC;IAChB,CAAC;CAaJ;AAxWD,0EAwWC","sourcesContent":["/*\n * Copyright © 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HandleCommand, HandleEvent, logger } from \"@atomist/automation-client\";\nimport { Maker } from \"@atomist/automation-client/util/constructionUtils\";\nimport * as _ from \"lodash\";\nimport { executeBuild } from \"../../common/delivery/build/executeBuild\";\nimport { Target } from \"../../common/delivery/deploy/deploy\";\nimport { executeDeploy } from \"../../common/delivery/deploy/executeDeploy\";\nimport { executeUndeploy } from \"../../common/delivery/deploy/executeUndeploy\";\nimport { Goal } from \"../../common/delivery/goals/Goal\";\nimport { Goals } from \"../../common/delivery/goals/Goals\";\nimport { lastLinesLogInterpreter } from \"../../common/delivery/goals/support/logInterpreters\";\nimport { ExecuteGoalWithLog } from \"../../common/delivery/goals/support/reportGoalError\";\nimport { SdmGoalImplementationMapper } from \"../../common/delivery/goals/support/SdmGoalImplementationMapper\";\nimport { GoalSetter } from \"../../common/listener/GoalSetter\";\nimport { PushMapping } from \"../../common/listener/PushMapping\";\nimport { PushTest } from \"../../common/listener/PushTest\";\nimport { PushRule } from \"../../common/listener/support/PushRule\";\nimport { PushRules } from \"../../common/listener/support/PushRules\";\nimport { AnyPush } from \"../../common/listener/support/pushtest/commonPushTests\";\nimport { StaticPushMapping } from \"../../common/listener/support/StaticPushMapping\";\nimport { deleteRepositoryCommand } from \"../../handlers/commands/deleteRepository\";\nimport { disposeCommand } from \"../../handlers/commands/disposeCommand\";\nimport { displayBuildLogHandler } from \"../../handlers/commands/ShowBuildLog\";\nimport { FindArtifactOnImageLinked } from \"../../handlers/events/delivery/build/FindArtifactOnImageLinked\";\nimport { InvokeListenersOnBuildComplete } from \"../../handlers/events/delivery/build/InvokeListenersOnBuildComplete\";\nimport { SetGoalOnBuildComplete } from \"../../handlers/events/delivery/build/SetStatusOnBuildComplete\";\nimport { ReactToSemanticDiffsOnPushImpact } from \"../../handlers/events/delivery/code/ReactToSemanticDiffsOnPushImpact\";\nimport { OnDeployStatus } from \"../../handlers/events/delivery/deploy/OnDeployStatus\";\nimport { FulfillGoalOnRequested } from \"../../handlers/events/delivery/goals/FulfillGoalOnRequested\";\nimport { KubernetesIsolatedGoalLauncher } from \"../../handlers/events/delivery/goals/k8s/launchGoalK8\";\nimport { RequestDownstreamGoalsOnGoalSuccess } from \"../../handlers/events/delivery/goals/RequestDownstreamGoalsOnGoalSuccess\";\nimport { resetGoalsCommand } from \"../../handlers/events/delivery/goals/resetGoals\";\nimport { RespondOnGoalCompletion } from \"../../handlers/events/delivery/goals/RespondOnGoalCompletion\";\nimport { SetGoalsOnPush } from \"../../handlers/events/delivery/goals/SetGoalsOnPush\";\nimport { SkipDownstreamGoalsOnGoalFailure } from \"../../handlers/events/delivery/goals/SkipDownstreamGoalsOnGoalFailure\";\nimport { executeVerifyEndpoint, SdmVerification } from \"../../handlers/events/delivery/verify/executeVerifyEndpoint\";\nimport { OnVerifiedDeploymentStatus } from \"../../handlers/events/delivery/verify/OnVerifiedDeploymentStatus\";\nimport { ClosedIssueHandler } from \"../../handlers/events/issue/ClosedIssueHandler\";\nimport { NewIssueHandler } from \"../../handlers/events/issue/NewIssueHandler\";\nimport { UpdatedIssueHandler } from \"../../handlers/events/issue/UpdatedIssueHandler\";\nimport { OnChannelLink } from \"../../handlers/events/repo/OnChannelLink\";\nimport { OnFirstPushToRepo } from \"../../handlers/events/repo/OnFirstPushToRepo\";\nimport { OnPullRequest } from \"../../handlers/events/repo/OnPullRequest\";\nimport { OnRepoCreation } from \"../../handlers/events/repo/OnRepoCreation\";\nimport { OnRepoOnboarded } from \"../../handlers/events/repo/OnRepoOnboarded\";\nimport { OnTag } from \"../../handlers/events/repo/OnTag\";\nimport { OnUserJoiningChannel } from \"../../handlers/events/repo/OnUserJoiningChannel\";\nimport { Builder } from \"../../spi/build/Builder\";\nimport { InterpretLog } from \"../../spi/log/InterpretedLog\";\nimport { EmptyFunctionalUnit, FunctionalUnit } from \"../FunctionalUnit\";\nimport { SoftwareDeliveryMachine } from \"../SoftwareDeliveryMachine\";\nimport { SoftwareDeliveryMachineConfigurer } from \"../SoftwareDeliveryMachineConfigurer\";\nimport { SoftwareDeliveryMachineOptions } from \"../SoftwareDeliveryMachineOptions\";\nimport { ArtifactGoal, BuildGoal, JustBuildGoal, StagingEndpointGoal, StagingVerifiedGoal } from \"../wellKnownGoals\";\nimport { ListenerRegistrationSupport } from \"./ListenerRegistrationSupport\";\n\n/**\n * Abstract software delivery machine\n */\nexport abstract class AbstractSoftwareDeliveryMachine extends ListenerRegistrationSupport implements SoftwareDeliveryMachine {\n\n    private generators: Array<Maker<HandleCommand>> = [];\n\n    public editors: Array<Maker<HandleCommand>> = [];\n\n    public supportingCommands: Array<Maker<HandleCommand>> = [];\n\n    public supportingEvents: Array<Maker<HandleEvent<any>>> = [];\n\n    public functionalUnits: FunctionalUnit[] = [];\n\n    public goalSetters: GoalSetter[] = [];\n\n    private readonly disposalGoalSetters: GoalSetter[] = [];\n\n    // Maintained depending on whether this SDM might mutate\n    private mightMutate: boolean = false;\n\n    /**\n     * Return the PushMapping that will be used on pushes.\n     * Useful in testing goal setting.\n     * @return {PushMapping<Goals>}\n     */\n    get pushMapping(): PushMapping<Goals> {\n        return new PushRules(\"Goal setter\", this.goalSetters);\n    }\n\n    /**\n     * Return if this SDM purely observes, rather than changes an org.\n     * Note that this cannot be 100% reliable, as arbitrary event handlers\n     * could be making commits, initiating deployments etc.\n     * @return {boolean}\n     */\n    get observesOnly(): boolean {\n        if (this.mightMutate) {\n            return false;\n        }\n        return this.autofixRegistrations.length === 0;\n    }\n\n    /*\n     * Store all the implementations we know\n     */\n    public readonly goalFulfillmentMapper = new SdmGoalImplementationMapper(\n        // For now we only support kube or in process\n        process.env.ATOMIST_GOAL_LAUNCHER === \"kubernetes\" ? KubernetesIsolatedGoalLauncher : undefined); // public for testing\n\n    /**\n     * Provide the implementation for a goal.\n     * The SDM will run it as soon as the goal is ready (all preconditions are met).\n     * If you provide a PushTest, then the SDM can assign different implementations\n     * to the same goal based on the code in the project.\n     * @param {string} implementationName\n     * @param {Goal} goal\n     * @param {ExecuteGoalWithLog} goalExecutor\n     * @param options PushTest to narrow matching & InterpretLog that can handle\n     * the log from the goalExecutor function\n     * @return {this}\n     */\n    public addGoalImplementation(implementationName: string,\n                                 goal: Goal,\n                                 goalExecutor: ExecuteGoalWithLog,\n                                 options?: Partial<{\n                                     pushTest: PushTest,\n                                     logInterpreter: InterpretLog,\n                                 }>): this {\n        const optsToUse = {\n            pushTest: AnyPush,\n            logInterpreter: lastLinesLogInterpreter(implementationName, 10),\n            ...options,\n        };\n        const implementation = {\n            implementationName, goal, goalExecutor,\n            pushTest: optsToUse.pushTest,\n            logInterpreter: optsToUse.logInterpreter,\n        };\n        this.goalFulfillmentMapper.addImplementation(implementation);\n        return this;\n    }\n\n    protected addVerifyImplementation(): this {\n        const stagingVerification: SdmVerification = {\n            verifiers: this.endpointVerificationListeners,\n            endpointGoal: StagingEndpointGoal,\n            requestApproval: true,\n        };\n        return this.addGoalImplementation(\"VerifyInStaging\",\n            StagingVerifiedGoal,\n            executeVerifyEndpoint(stagingVerification));\n    }\n\n    public addDisposalRules(...goalSetters: GoalSetter[]): this {\n        this.disposalGoalSetters.push(...goalSetters);\n        return this;\n    }\n\n    private get onRepoCreation(): Maker<OnRepoCreation> {\n        return this.repoCreationListeners.length > 0 ?\n            () => new OnRepoCreation(this.repoCreationListeners, this.options.credentialsResolver) :\n            undefined;\n    }\n\n    private get onNewRepoWithCode(): Maker<OnFirstPushToRepo> {\n        return this.newRepoWithCodeActions.length > 0 ?\n            () => new OnFirstPushToRepo(this.newRepoWithCodeActions, this.options.credentialsResolver) :\n            undefined;\n    }\n\n    private get semanticDiffReactor(): Maker<ReactToSemanticDiffsOnPushImpact> {\n        return this.fingerprintDifferenceListeners.length > 0 ?\n            () => new ReactToSemanticDiffsOnPushImpact(this.fingerprintDifferenceListeners, this.options.credentialsResolver) :\n            undefined;\n    }\n\n    private get goalSetting(): FunctionalUnit {\n        if (this.goalSetters.length === 0) {\n            logger.warn(\"No goal setters\");\n            return EmptyFunctionalUnit;\n        }\n        return {\n            eventHandlers: [() => new SetGoalsOnPush(this.options.projectLoader,\n                this.goalSetters, this.goalsSetListeners,\n                this.goalFulfillmentMapper, this.options.credentialsResolver)],\n            commandHandlers: [() => resetGoalsCommand({\n                projectLoader: this.options.projectLoader,\n                goalsListeners: this.goalsSetListeners,\n                goalSetters: this.goalSetters,\n                implementationMapping: this.goalFulfillmentMapper,\n            })],\n        };\n    }\n\n    private get goalConsequences(): FunctionalUnit {\n        return {\n            eventHandlers: [\n                () => new SkipDownstreamGoalsOnGoalFailure(),\n                () => new RequestDownstreamGoalsOnGoalSuccess(this.goalFulfillmentMapper),\n                () => new RespondOnGoalCompletion(this.options.credentialsResolver,\n                    this.goalCompletionListeners)],\n            commandHandlers: [],\n        };\n    }\n\n    private readonly artifactFinder = () => new FindArtifactOnImageLinked(\n        ArtifactGoal,\n        this.options.artifactStore,\n        this.artifactListenerRegistrations,\n        this.options.projectLoader,\n        this.options.credentialsResolver)\n\n    private get notifyOnDeploy(): Maker<OnDeployStatus> {\n        return this.deploymentListeners.length > 0 ?\n            () => new OnDeployStatus(this.deploymentListeners, this.options.credentialsResolver) :\n            undefined;\n    }\n\n    private get onVerifiedStatus(): Maker<OnVerifiedDeploymentStatus> {\n        return this.verifiedDeploymentListeners.length > 0 ?\n            () => new OnVerifiedDeploymentStatus(this.verifiedDeploymentListeners, this.options.credentialsResolver) :\n            undefined;\n    }\n\n    private get disposal(): FunctionalUnit {\n        return {\n            commandHandlers: [\n                () => disposeCommand({\n                    goalSetters: this.disposalGoalSetters,\n                    projectLoader: this.options.projectLoader,\n                    goalsListeners: this.goalsSetListeners,\n                    implementationMapping: this.goalFulfillmentMapper,\n                }),\n                deleteRepositoryCommand],\n            eventHandlers: [],\n        };\n    }\n\n    private readonly onBuildComplete: Maker<SetGoalOnBuildComplete> =\n        () => new SetGoalOnBuildComplete([BuildGoal, JustBuildGoal])\n\n    get showBuildLog(): Maker<HandleCommand> {\n        return () => {\n            return displayBuildLogHandler();\n        };\n    }\n\n    private get allFunctionalUnits(): FunctionalUnit[] {\n        return this.functionalUnits\n            .concat([\n                this.goalSetting,\n                this.goalConsequences,\n                this.disposal,\n            ]);\n    }\n\n    get eventHandlers(): Array<Maker<HandleEvent<any>>> {\n        return this.supportingEvents\n            .concat(() => new FulfillGoalOnRequested(this.goalFulfillmentMapper, this.options.projectLoader, this.options.logFactory))\n            .concat(_.flatten(this.allFunctionalUnits.map(fu => fu.eventHandlers)))\n            .concat([\n                this.userJoiningChannelListeners.length > 0 ?\n                    () => new OnUserJoiningChannel(this.userJoiningChannelListeners, this.options.credentialsResolver) :\n                    undefined,\n                this.buildListeners.length > 0 ?\n                    () => new InvokeListenersOnBuildComplete(this.buildListeners, this.options.credentialsResolver) :\n                    undefined,\n                this.tagListeners.length > 0 ? () => new OnTag(this.tagListeners, this.options.credentialsResolver) : undefined,\n                this.newIssueListeners.length > 0 ? () => new NewIssueHandler(this.newIssueListeners, this.options.credentialsResolver) : undefined,\n                this.updatedIssueListeners.length > 0 ?\n                    () => new UpdatedIssueHandler(this.updatedIssueListeners, this.options.credentialsResolver) :\n                    undefined,\n                this.closedIssueListeners.length > 0 ?\n                    () => new ClosedIssueHandler(this.closedIssueListeners, this.options.credentialsResolver) :\n                    undefined,\n                this.channelLinkListeners.length > 0 ?\n                    () => new OnChannelLink(this.options.projectLoader, this.channelLinkListeners, this.options.credentialsResolver) :\n                    undefined,\n                this.pullRequestListeners.length > 0 ?\n                    () => new OnPullRequest(this.options.projectLoader, this.pullRequestListeners,\n                        this.options.credentialsResolver) : undefined,\n                this.repoOnboardingListeners.length > 0 ?\n                    () => new OnRepoOnboarded(this.repoOnboardingListeners, this.options.credentialsResolver) :\n                    undefined,\n                this.onRepoCreation,\n                this.onNewRepoWithCode,\n                this.semanticDiffReactor,\n                this.onBuildComplete,\n                this.notifyOnDeploy,\n                this.onVerifiedStatus,\n                this.artifactFinder,\n            ]).filter(m => !!m);\n    }\n\n    get commandHandlers(): Array<Maker<HandleCommand>> {\n        return this.generators\n            .concat(_.flatten(this.allFunctionalUnits.map(fu => fu.commandHandlers)))\n            .concat(this.editors)\n            .concat(this.supportingCommands)\n            .concat([this.showBuildLog])\n            .filter(m => !!m);\n    }\n\n    public addGenerators(...g: Array<Maker<HandleCommand>>): this {\n        this.generators = this.generators.concat(g);\n        return this;\n    }\n\n    public addEditors(...e: Array<Maker<HandleCommand>>): this {\n        this.editors = this.editors.concat(e);\n        return this;\n    }\n\n    public addSupportingCommands(...e: Array<Maker<HandleCommand>>): this {\n        this.supportingCommands.push(...e);\n        return this;\n    }\n\n    public addSupportingEvents(...e: Array<Maker<HandleEvent<any>>>): this {\n        this.supportingEvents.push(...e);\n        return this;\n    }\n\n    public addFunctionalUnits(...fus: FunctionalUnit[]): this {\n        this.functionalUnits.push(...fus);\n        return this;\n    }\n\n    public addBuildRules(...rules: Array<PushRule<Builder> | Array<PushRule<Builder>>>): this {\n        this.mightMutate = rules.length > 0;\n        _.flatten(rules).forEach(r =>\n            this.addGoalImplementation(r.name, BuildGoal,\n                executeBuild(this.options.projectLoader, r.value),\n                {\n                    pushTest: r.pushTest,\n                    logInterpreter: r.value.logInterpreter,\n                })\n                .addGoalImplementation(r.name, JustBuildGoal,\n                    executeBuild(this.options.projectLoader, r.value),\n                    {\n                        pushTest: r.pushTest,\n                        logInterpreter:\n                        r.value.logInterpreter,\n                    },\n                ));\n        return this;\n    }\n\n    public addDeployRules(...rules: Array<StaticPushMapping<Target> | Array<StaticPushMapping<Target>>>): this {\n        this.mightMutate = rules.length > 0;\n        _.flatten(rules).forEach(r => {\n            // deploy\n            this.addGoalImplementation(r.name, r.value.deployGoal, executeDeploy(\n                this.options.artifactStore,\n                r.value.endpointGoal, r.value),\n                {\n                    pushTest: r.pushTest,\n                    logInterpreter: r.value.deployer.logInterpreter,\n                },\n            );\n            // endpoint\n            this.knownSideEffect(\n                r.value.endpointGoal,\n                r.value.deployGoal.definition.displayName);\n            // undeploy\n            this.addGoalImplementation(r.name, r.value.undeployGoal, executeUndeploy(r.value),\n                {\n                    pushTest: r.pushTest,\n                    logInterpreter: r.value.deployer.logInterpreter,\n                },\n            );\n        });\n        return this;\n    }\n\n    /**\n     * Declare that a goal will become successful based on something outside.\n     * For instance, ArtifactGoal succeeds because of an ImageLink event.\n     * This tells the SDM that it does not need to run anything when this\n     * goal becomes ready.\n     * @param {Goal} goal\n     * @param {string} sideEffectName\n     * @param {PushTest} pushTest\n     */\n    public knownSideEffect(goal: Goal, sideEffectName: string,\n                           pushTest: PushTest = AnyPush) {\n        this.goalFulfillmentMapper.addSideEffect({\n            goal,\n            sideEffectName, pushTest,\n        });\n    }\n\n    /**\n     * Add the given capabilities from these configurers\n     * @param {SoftwareDeliveryMachineConfigurer} configurers\n     * @return {this}\n     */\n    public addCapabilities(...configurers: SoftwareDeliveryMachineConfigurer[]): this {\n        for (const configurer of configurers) {\n            this.configure(configurer);\n        }\n        return this;\n    }\n\n    public configure(configurer: SoftwareDeliveryMachineConfigurer): this {\n        logger.info(\"Adding capabilities from configurer '%s'\", configurer.name);\n        configurer.configure(this);\n        return this;\n    }\n\n    /**\n     * Construct a new software delivery machine, with zero or\n     * more goal setters.\n     * @param {string} name\n     * @param {SoftwareDeliveryMachineOptions} options\n     */\n    protected constructor(public readonly name: string,\n                          public readonly options: SoftwareDeliveryMachineOptions) {\n        super();\n    }\n\n}\n"]}