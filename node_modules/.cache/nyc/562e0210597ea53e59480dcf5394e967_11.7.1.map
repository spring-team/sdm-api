{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/handlers/common/GitHubCredentialsResolver.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/handlers/common/GitHubCredentialsResolver.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;AAEH,kEAA6D;AAI7D;IAKW,uBAAuB;QAC1B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACnB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;SACxD;QACD,OAAO,EAAC,KAAK,EAAE,IAAI,CAAC,WAAW,EAAC,CAAC;IACrC,CAAC;IAEM,yBAAyB;QAC5B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACnB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;SACxD;QACD,OAAO,EAAC,KAAK,EAAE,IAAI,CAAC,WAAW,EAAC,CAAC;IACrC,CAAC;CAEJ;AAhBG;IADC,0BAAM,CAAC,2BAAO,CAAC,QAAQ,CAAC;;8DACY;AAHzC,8DAmBC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Secret, Secrets } from \"@atomist/automation-client\";\nimport { ProjectOperationCredentials } from \"@atomist/automation-client/operations/common/ProjectOperationCredentials\";\nimport { CredentialsResolver } from \"./CredentialsResolver\";\n\nexport class GitHubCredentialsResolver implements CredentialsResolver {\n\n    @Secret(Secrets.OrgToken)\n    private readonly githubToken: string;\n\n    public eventHandlerCredentials(): ProjectOperationCredentials {\n        if (!this.githubToken) {\n            throw new Error(\"githubToken has not been injected\");\n        }\n        return {token: this.githubToken};\n    }\n\n    public commandHandlerCredentials(): ProjectOperationCredentials {\n        if (!this.githubToken) {\n            throw new Error(\"githubToken has not been injected\");\n        }\n        return {token: this.githubToken};\n    }\n\n}\n"]}