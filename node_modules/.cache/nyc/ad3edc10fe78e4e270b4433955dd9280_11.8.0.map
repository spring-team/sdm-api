{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/util/test/fakeContext.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/util/test/fakeContext.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH,kEAAoE;AACpE,iDAAiD;AAEjD;;;;;GAKG;AACH,qBAA4B,SAAiB,MAAM;IAC/C,OAAO;QACH,MAAM;QACN,aAAa,EAAE;YACX,OAAO,CAAC,CAAC;gBACL,0BAAM,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;gBAC9B,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAC/B,CAAC;YACD,IAAI,CAAC,KAAK;gBACN,0BAAM,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC3C,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAC/B,CAAC;SACJ;QACD,aAAa,EAAE,KAAK;QACpB,OAAO,EAAE,EAAC,IAAI,EAAE,iBAAiB,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,eAAe,EAAE;KAC1D,CAAC;AAC/B,CAAC;AAhBD,kCAgBC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HandlerContext, logger } from \"@atomist/automation-client\";\nimport * as stringify from \"json-stringify-safe\";\n\n/**\n * Convenient function to allow creating fake contexts.\n * Useful for testing\n * @param {string} teamId\n * @return {any}\n */\nexport function fakeContext(teamId: string = \"T123\"): HandlerContext {\n    return {\n        teamId,\n        messageClient: {\n            respond(m) {\n                logger.info(\"respond > \" + m);\n                return Promise.resolve({});\n            },\n            send(event) {\n                logger.debug(\"send > \" + stringify(event));\n                return Promise.resolve({});\n            },\n        },\n        correlationId: \"foo\",\n        context: {name: \"fakeContextName\", version: \"v0.0\", operation: \"fakeOperation\" },\n    } as any as HandlerContext;\n}\n"]}