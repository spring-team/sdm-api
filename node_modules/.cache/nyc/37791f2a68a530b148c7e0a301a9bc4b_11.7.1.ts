"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_hzvpf2haw=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/code/autofix/spawnedCommandAutofix.ts",hash="4df85b9cb3c1b036efa9e41be9688ba578ee98ed",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/code/autofix/spawnedCommandAutofix.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:25},end:{line:18,column:74}},"2":{start:{line:19,column:30},end:{line:19,column:62}},"3":{start:{line:25,column:4},end:{line:30,column:7}},"4":{start:{line:32,column:0},end:{line:32,column:54}}},fnMap:{"0":{name:"spawnedCommandAutofix",decl:{start:{line:24,column:9},end:{line:24,column:30}},loc:{start:{line:24,column:89},end:{line:31,column:1}},line:24}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0},f:{"0":0},b:{},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_hzvpf2haw.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const editorWrappers_1=(cov_hzvpf2haw.s[1]++,require("../../../command/editor/editorWrappers"));const AutofixRegistration_1=(cov_hzvpf2haw.s[2]++,require("./AutofixRegistration"));/**
 * Register an autofix based on spawned local shell commands.
 * For example, could wrap a linter
 */function spawnedCommandAutofix(name,pushTest,options,command1,...additionalCommands){cov_hzvpf2haw.f[0]++;cov_hzvpf2haw.s[3]++;return AutofixRegistration_1.editorAutofixRegistration({name,editor:editorWrappers_1.localCommandsEditor([command1].concat(additionalCommands)),pushTest,options});}cov_hzvpf2haw.s[4]++;exports.spawnedCommandAutofix=spawnedCommandAutofix;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2NvbW1vbi9kZWxpdmVyeS9jb2RlL2F1dG9maXgvc3Bhd25lZENvbW1hbmRBdXRvZml4LnRzIiwic291cmNlcyI6WyIvVXNlcnMvcm9kam9obnNvbi9zZm9yemFuZG8tZGV2L2lkZWEtcHJvamVjdHMvbXktZmxvdy9zcmMvY29tbW9uL2RlbGl2ZXJ5L2NvZGUvYXV0b2ZpeC9zcGF3bmVkQ29tbWFuZEF1dG9maXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7OztHQWNHOztBQUdILDJFQUE2RTtBQUU3RSwrREFBbUg7QUFFbkg7OztHQUdHO0FBQ0gsK0JBQXNDLElBQVksRUFDWixRQUFrQixFQUNsQixPQUFtQyxFQUNuQyxRQUFzQixFQUN0QixHQUFHLGtCQUFrQztJQUN2RSxPQUFPLCtDQUF5QixDQUFDO1FBQzdCLElBQUk7UUFDSixNQUFNLEVBQUUsb0NBQW1CLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxNQUFNLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUNsRSxRQUFRO1FBQ1IsT0FBTztLQUNWLENBQUMsQ0FBQztBQUNQLENBQUM7QUFYRCxzREFXQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgwqkgMjAxOCBBdG9taXN0LCBJbmMuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IFNwYXduQ29tbWFuZCB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlsL21pc2Mvc3Bhd25lZFwiO1xuaW1wb3J0IHsgbG9jYWxDb21tYW5kc0VkaXRvciB9IGZyb20gXCIuLi8uLi8uLi9jb21tYW5kL2VkaXRvci9lZGl0b3JXcmFwcGVyc1wiO1xuaW1wb3J0IHsgUHVzaFRlc3QgfSBmcm9tIFwiLi4vLi4vLi4vbGlzdGVuZXIvUHVzaFRlc3RcIjtcbmltcG9ydCB7IEF1dG9maXhSZWdpc3RyYXRpb24sIEF1dG9maXhSZWdpc3RyYXRpb25PcHRpb25zLCBlZGl0b3JBdXRvZml4UmVnaXN0cmF0aW9uIH0gZnJvbSBcIi4vQXV0b2ZpeFJlZ2lzdHJhdGlvblwiO1xuXG4vKipcbiAqIFJlZ2lzdGVyIGFuIGF1dG9maXggYmFzZWQgb24gc3Bhd25lZCBsb2NhbCBzaGVsbCBjb21tYW5kcy5cbiAqIEZvciBleGFtcGxlLCBjb3VsZCB3cmFwIGEgbGludGVyXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzcGF3bmVkQ29tbWFuZEF1dG9maXgobmFtZTogc3RyaW5nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwdXNoVGVzdDogUHVzaFRlc3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnM6IEF1dG9maXhSZWdpc3RyYXRpb25PcHRpb25zLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21tYW5kMTogU3Bhd25Db21tYW5kLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuLi5hZGRpdGlvbmFsQ29tbWFuZHM6IFNwYXduQ29tbWFuZFtdKTogQXV0b2ZpeFJlZ2lzdHJhdGlvbiB7XG4gICAgcmV0dXJuIGVkaXRvckF1dG9maXhSZWdpc3RyYXRpb24oe1xuICAgICAgICBuYW1lLFxuICAgICAgICBlZGl0b3I6IGxvY2FsQ29tbWFuZHNFZGl0b3IoW2NvbW1hbmQxXS5jb25jYXQoYWRkaXRpb25hbENvbW1hbmRzKSksXG4gICAgICAgIHB1c2hUZXN0LFxuICAgICAgICBvcHRpb25zLFxuICAgIH0pO1xufVxuIl19