{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/goals/common/commonGoals.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/goals/common/commonGoals.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH,yEAA8F;AAC9F,kCAAqD;AACrD,oCAAiC;AACjC,mEAAuG;AAE1F,QAAA,WAAW,GAAG,IAAI,WAAI,CAAC;IAChC,UAAU,EAAE,SAAS;IACrB,WAAW,EAAE,wCAAwB;IACrC,WAAW,EAAE,aAAa;IAC1B,kBAAkB,EAAE,gCAAgC;IACpD,oBAAoB,EAAE,WAAW;CACpC,CAAC,CAAC;AAEU,QAAA,eAAe,GAAG,IAAI,2BAAoB,CAAC;IACpD,UAAU,EAAE,aAAa;IACzB,WAAW,EAAE,wCAAwB;IACrC,WAAW,EAAE,UAAU;IACvB,WAAW,EAAE,cAAc;IAC3B,kBAAkB,EAAE,yBAAyB;IAC7C,oBAAoB,EAAE,yBAAyB;IAC/C,iBAAiB,EAAE,8BAA8B;IACjD,QAAQ,EAAE,IAAI;CACjB,EAAE,0BAAS,CAAC,CAAC;AAED,QAAA,OAAO,GAAG,IAAI,2BAAoB,CAAC;IAC5C,UAAU,EAAE,KAAK;IACjB,WAAW,EAAE,wCAAwB;IACrC,WAAW,EAAE,OAAO;IACpB,WAAW,EAAE,KAAK;IAClB,kBAAkB,EAAE,YAAY;IAChC,oBAAoB,EAAE,QAAQ;IAC9B,iBAAiB,EAAE,sBAAsB;CAC5C,EAAE,uBAAe,EAAE,0BAAS,CAAC,CAAC;AAElB,QAAA,uBAAuB,GAAG,IAAI,WAAI,CAAC;IAC5C,UAAU,EAAE,kBAAkB;IAC9B,WAAW,EAAE,0CAA0B;IACvC,WAAW,EAAE,oBAAoB;IACjC,WAAW,EAAE,oBAAoB;IACjC,oBAAoB,EAAE,sBAAsB;CAC/C,CAAC,CAAC;AAEU,QAAA,qBAAqB,GAAG,IAAI,WAAI,CAAC;IAC1C,UAAU,EAAE,cAAc;IAC1B,WAAW,EAAE,0CAA0B;IACvC,WAAW,EAAE,oBAAoB;IACjC,iBAAiB,EAAE,0BAA0B;IAC7C,oBAAoB,EAAE,sBAAsB;CAC/C,CAAC,CAAC;AAEH,8DAA8D;AACjD,QAAA,iBAAiB,GAAG,IAAI,2BAAoB,CAAC;IACtD,UAAU,EAAE,mBAAmB;IAC/B,WAAW,EAAE,wCAAwB;IACrC,WAAW,EAAE,YAAY;IACzB,WAAW,EAAE,+BAA+B;IAC5C,oBAAoB,EAAE,oCAAoC;CAE7D,EAAE,oCAAmB,CAAC,CAAC;AAExB;;;;GAIG;AACU,QAAA,OAAO,GAAG,IAAI,aAAK,CAC5B,kBAAkB,EAClB,uBAAM,CAAC,CAAC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BuildGoal, LocalDeploymentGoal, NoGoal } from \"../../../../blueprint/wellKnownGoals\";\nimport { Goal, GoalWithPrecondition } from \"../Goal\";\nimport { Goals } from \"../Goals\";\nimport { IndependentOfEnvironment, ProjectDisposalEnvironment } from \"../support/github/gitHubContext\";\n\nexport const VersionGoal = new Goal({\n    uniqueName: \"Version\",\n    environment: IndependentOfEnvironment,\n    orderedName: \"0.1-version\",\n    workingDescription: \"Calculating project version...\",\n    completedDescription: \"Versioned\",\n});\n\nexport const DockerBuildGoal = new GoalWithPrecondition({\n    uniqueName: \"DockerBuild\",\n    environment: IndependentOfEnvironment,\n    orderedName: \"3-docker\",\n    displayName: \"docker build\",\n    workingDescription: \"Running Docker build...\",\n    completedDescription: \"Docker build successful\",\n    failedDescription: \"Failed to build Docker image\",\n    isolated: true,\n}, BuildGoal);\n\nexport const TagGoal = new GoalWithPrecondition({\n    uniqueName: \"Tag\",\n    environment: IndependentOfEnvironment,\n    orderedName: \"4-tag\",\n    displayName: \"tag\",\n    workingDescription: \"Tagging...\",\n    completedDescription: \"Tagged\",\n    failedDescription: \"Failed to create Tag\",\n}, DockerBuildGoal, BuildGoal);\n\nexport const StagingUndeploymentGoal = new Goal({\n    uniqueName: \"UndeployFromTest\",\n    environment: ProjectDisposalEnvironment,\n    orderedName: \"2-staging-undeploy\",\n    displayName: \"undeploy from test\",\n    completedDescription: \"not deployed in test\",\n});\n\nexport const LocalUndeploymentGoal = new Goal({\n    uniqueName: \"UndeployHere\",\n    environment: ProjectDisposalEnvironment,\n    orderedName: \"1-undeploy-locally\",\n    failedDescription: \"Failed at local undeploy\",\n    completedDescription: \"not deployed locally\",\n});\n\n// not an enforced precondition, but it's real enough to graph\nexport const LocalEndpointGoal = new GoalWithPrecondition({\n    uniqueName: \"FindLocalEndpoint\",\n    environment: IndependentOfEnvironment,\n    orderedName: \"2-endpoint\",\n    displayName: \"locate local service endpoint\",\n    completedDescription: \"Here is the local service endpoint\",\n\n}, LocalDeploymentGoal);\n\n/**\n * Special Goals object to be returned if changes are immaterial.\n * The identity of this object is important.\n * @type {Goals}\n */\nexport const NoGoals = new Goals(\n    \"No action needed\",\n    NoGoal);\n"]}