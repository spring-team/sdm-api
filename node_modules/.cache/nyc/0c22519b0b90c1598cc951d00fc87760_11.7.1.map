{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/blueprint/dsl/whenPushSatisfiesTest.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/blueprint/dsl/whenPushSatisfiesTest.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assert from \"power-assert\";\nimport { HttpServiceGoals, whenPushSatisfies } from \"../../../src\";\nimport { FalsePushTest, TruePushTest } from \"../../common/listener/support/pushTestUtilsTest\";\nimport { fakePush } from \"./decisionTreeTest\";\n\ndescribe(\"whenPushSatisfies\", () => {\n\n    it(\"should satisfy true\", async () => {\n        const test = whenPushSatisfies(true).itMeans(\"war\").setGoals(HttpServiceGoals);\n        assert.equal(await test.valueForPush(fakePush()), HttpServiceGoals);\n    });\n\n    it(\"should not satisfy false\", async () => {\n        const test = whenPushSatisfies(false).itMeans(\"war\").setGoals(HttpServiceGoals);\n        assert.equal(await test.valueForPush(fakePush()), undefined);\n    });\n\n    it(\"should satisfy function returning true\", async () => {\n        const test = whenPushSatisfies(() => true).itMeans(\"war\").setGoals(HttpServiceGoals);\n        assert.equal(await test.valueForPush(fakePush()), HttpServiceGoals);\n    });\n\n    it(\"should not satisfy function returning false\", async () => {\n        const test = whenPushSatisfies(() => false).itMeans(\"war\").setGoals(HttpServiceGoals);\n        assert.equal(await test.valueForPush(fakePush()), undefined);\n    });\n\n    it(\"should satisfy function returning promise true\", async () => {\n        const test = whenPushSatisfies(async () => true).itMeans(\"war\").setGoals(HttpServiceGoals);\n        assert.equal(await test.valueForPush(fakePush()), HttpServiceGoals);\n    });\n\n    it(\"should not satisfy function returning promise false\", async () => {\n        const test = whenPushSatisfies(async () => false).itMeans(\"war\").setGoals(HttpServiceGoals);\n        assert.equal(await test.valueForPush(fakePush()), undefined);\n    });\n\n    it(\"should default name with one\", async () => {\n        const test = whenPushSatisfies(TruePushTest).setGoals(HttpServiceGoals);\n        assert.equal(test.name, TruePushTest.name);\n    });\n\n    it(\"should override name with one\", async () => {\n        const test = whenPushSatisfies(TruePushTest).itMeans(\"something\").setGoals(HttpServiceGoals);\n        assert.equal(test.name, \"something\");\n    });\n\n    it(\"should default name with two\", async () => {\n        const test = whenPushSatisfies(TruePushTest, FalsePushTest).setGoals(HttpServiceGoals);\n        assert.equal(test.name, TruePushTest.name + \" && \" + FalsePushTest.name);\n    });\n});\n"]}