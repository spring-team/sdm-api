{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/log/DashboardDisplayProgressLog.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/log/DashboardDisplayProgressLog.ts"],"names":[],"mappings":";;;;;;;;;;AAIA,yDAAoD;AAEpD;;GAEG;AACH;IAII,YAA6B,gBAAwB,EACzC,YAAoB,EACH,OAAuB,EACvB,OAAgB;QAHhB,qBAAgB,GAAhB,gBAAgB,CAAQ;QAExB,YAAO,GAAP,OAAO,CAAgB;QACvB,YAAO,GAAP,OAAO,CAAS;QACzC,IAAI,CAAC,gBAAgB,GAAG,IAAI,mCAAgB,CAAC,YAAY,EAAE,gBAAgB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;IACnG,CAAC;IAED,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;IACtC,CAAC;IAED,IAAI,GAAG;QACH,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,MAAM,IAAI,GAAG,gBAAgB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1D,OAAO,GAAG,IAAI,CAAC,gBAAgB,cAAc,IAAI,CAAC,CAAC,CAAC,SAAS,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;SAC1F;aAAM;YACH,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC;SACpC;IACL,CAAC;IAEY,WAAW;;YACpB,OAAO,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;QAC/C,CAAC;KAAA;IAEM,KAAK,CAAC,IAAY;QACrB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAEM,KAAK;QACR,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;IACzC,CAAC;IAEM,KAAK;QACR,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;IACzC,CAAC;CAEJ;AAxCD,kEAwCC;AAED,0BAAiC,OAAuB,EAAE,OAAgB;IACtE,OAAO;QACH,OAAO,CAAC,MAAM;QACd,OAAO,CAAC,IAAI,CAAC,KAAK;QAClB,OAAO,CAAC,IAAI,CAAC,IAAI;QACjB,OAAO,CAAC,GAAG;QACX,OAAO,CAAC,WAAW;QACnB,OAAO,CAAC,IAAI;QACZ,OAAO,CAAC,SAAS;QACjB,OAAO,CAAC,aAAa;KACxB,CAAC;AACN,CAAC;AAXD,4CAWC","sourcesContent":["\nimport {HandlerContext} from \"@atomist/automation-client\";\nimport {SdmGoal} from \"../../ingesters/sdmGoalIngester\";\nimport {ProgressLog} from \"../../spi/log/ProgressLog\";\nimport {RolarProgressLog} from \"./RolarProgressLog\";\n\n/**\n * Persistent Rolar log that displays in the Dashboard\n */\nexport class DashboardDisplayProgressLog implements ProgressLog {\n\n    private readonly rolarProgressLog: RolarProgressLog;\n\n    constructor(private readonly dashboardBaseUrl: string,\n                rolarBaseUrl: string,\n                private readonly context: HandlerContext,\n                private readonly sdmGoal: SdmGoal) {\n        this.rolarProgressLog = new RolarProgressLog(rolarBaseUrl, constructLogPath(context, sdmGoal));\n    }\n\n    get name() {\n        return this.rolarProgressLog.name;\n    }\n\n    get url() {\n        if (this.dashboardBaseUrl) {\n            const path = constructLogPath(this.context, this.sdmGoal);\n            return `${this.dashboardBaseUrl}/workspace/${path[0]}/logs/${path.slice(1).join(\"/\")}`;\n        } else {\n            return this.rolarProgressLog.url;\n        }\n    }\n\n    public async isAvailable(): Promise<boolean> {\n        return this.rolarProgressLog.isAvailable();\n    }\n\n    public write(what: string) {\n        this.rolarProgressLog.write(what);\n    }\n\n    public flush(): Promise<any> {\n        return this.rolarProgressLog.flush();\n    }\n\n    public close(): Promise<any> {\n        return this.rolarProgressLog.close();\n    }\n\n}\n\nexport function constructLogPath(context: HandlerContext, sdmGoal: SdmGoal): string[] {\n    return [\n        context.teamId,\n        sdmGoal.repo.owner,\n        sdmGoal.repo.name,\n        sdmGoal.sha,\n        sdmGoal.environment,\n        sdmGoal.name,\n        sdmGoal.goalSetId,\n        context.correlationId,\n    ];\n}\n"]}