"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_1q95n1r8yy=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/blueprint/dsl/goalDsl.ts",hash="8f79b4ecc336e067cfdffeca56e58d7ae35ef506",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/blueprint/dsl/goalDsl.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:16},end:{line:18,column:60}},"2":{start:{line:19,column:31},end:{line:19,column:92}},"3":{start:{line:20,column:19},end:{line:20,column:68}},"4":{start:{line:21,column:26},end:{line:21,column:91}},"5":{start:{line:24,column:8},end:{line:24,column:38}},"6":{start:{line:27,column:8},end:{line:29,column:9}},"7":{start:{line:28,column:12},end:{line:28,column:35}},"8":{start:{line:30,column:8},end:{line:30,column:107}},"9":{start:{line:33,column:0},end:{line:33,column:48}},"10":{start:{line:41,column:4},end:{line:41,column:140}},"11":{start:{line:43,column:0},end:{line:43,column:46}},"12":{start:{line:48,column:0},end:{line:48,column:89}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:23,column:4},end:{line:23,column:5}},loc:{start:{line:23,column:40},end:{line:25,column:5}},line:23},"1":{name:"(anonymous_1)",decl:{start:{line:26,column:4},end:{line:26,column:5}},loc:{start:{line:26,column:20},end:{line:31,column:5}},line:26},"2":{name:"whenPushSatisfies",decl:{start:{line:40,column:9},end:{line:40,column:26}},loc:{start:{line:40,column:46},end:{line:42,column:1}},line:40}},branchMap:{"0":{loc:{start:{line:27,column:8},end:{line:29,column:9}},type:"if",locations:[{start:{line:27,column:8},end:{line:29,column:9}},{start:{line:27,column:8},end:{line:29,column:9}}],line:27},"1":{loc:{start:{line:30,column:24},end:{line:30,column:105}},type:"cond-expr",locations:[{start:{line:30,column:49},end:{line:30,column:54}},{start:{line:30,column:57},end:{line:30,column:105}}],line:30}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_1q95n1r8yy.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const Goals_1=(cov_1q95n1r8yy.s[1]++,require("../../common/delivery/goals/Goals"));const PredicateMappingTerm_1=(cov_1q95n1r8yy.s[2]++,require("../../common/listener/support/PredicateMappingTerm"));const PushRule_1=(cov_1q95n1r8yy.s[3]++,require("../../common/listener/support/PushRule"));const commonPushTests_1=(cov_1q95n1r8yy.s[4]++,require("../../common/listener/support/pushtest/commonPushTests"));class GoalSetterPushRule extends(PushRule_1.PushRule){constructor(guard1,guards,reason){cov_1q95n1r8yy.f[0]++;cov_1q95n1r8yy.s[5]++;super(guard1,guards,reason);}setGoals(goals){cov_1q95n1r8yy.f[1]++;cov_1q95n1r8yy.s[6]++;if(!goals){cov_1q95n1r8yy.b[0][0]++;cov_1q95n1r8yy.s[7]++;return this.set(goals);}else{cov_1q95n1r8yy.b[0][1]++;}cov_1q95n1r8yy.s[8]++;return this.set(Goals_1.isGoals(goals)?(cov_1q95n1r8yy.b[1][0]++,goals):(cov_1q95n1r8yy.b[1][1]++,new Goals_1.Goals("Solely "+goals.name,goals)));}}cov_1q95n1r8yy.s[9]++;exports.GoalSetterPushRule=GoalSetterPushRule;/**
 * Simple GoalSetter DSL. Allows use of booleans and functions
 * returning boolean in predicate expressions
 * @param {PushTest} guard1
 * @param {PushTest} guards
 */function whenPushSatisfies(guard1,...guards){cov_1q95n1r8yy.f[2]++;cov_1q95n1r8yy.s[10]++;return new GoalSetterPushRule(PredicateMappingTerm_1.toPredicateMapping(guard1),guards.map(PredicateMappingTerm_1.toPredicateMapping));}cov_1q95n1r8yy.s[11]++;exports.whenPushSatisfies=whenPushSatisfies;/**
 * PushRule that matches every push
 * @type {GoalSetterPushRule}
 */cov_1q95n1r8yy.s[12]++;exports.onAnyPush=new GoalSetterPushRule(commonPushTests_1.AnyPush,[],"On any push");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2JsdWVwcmludC9kc2wvZ29hbERzbC50cyIsInNvdXJjZXMiOlsiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2JsdWVwcmludC9kc2wvZ29hbERzbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7O0dBY0c7O0FBR0gsNkRBQW1FO0FBR25FLDZGQUE4RztBQUM5RyxxRUFBa0U7QUFDbEUsNEZBQWlGO0FBRWpGLHdCQUFnQyxTQUFRLG1CQUFlO0lBRW5ELFlBQVksTUFBZ0IsRUFBRSxNQUFrQixFQUFFLE1BQWU7UUFDN0QsS0FBSyxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVNLFFBQVEsQ0FBQyxLQUFtQjtRQUMvQixJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ1IsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQWMsQ0FBQyxDQUFDO1NBQ25DO1FBQ0QsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLGVBQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLGFBQUssQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQ3ZGLENBQUM7Q0FFSjtBQWJELGdEQWFDO0FBRUQ7Ozs7O0dBS0c7QUFDSCwyQkFDSSxNQUFvRCxFQUNwRCxHQUFHLE1BQTJEO0lBQzlELE9BQU8sSUFBSSxrQkFBa0IsQ0FBQyx5Q0FBa0IsQ0FBQyxNQUFNLENBQUMsRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLHlDQUFrQixDQUFDLENBQUMsQ0FBQztBQUM5RixDQUFDO0FBSkQsOENBSUM7QUFFRDs7O0dBR0c7QUFDVSxRQUFBLFNBQVMsR0FBRyxJQUFJLGtCQUFrQixDQUFDLHlCQUFPLEVBQUUsRUFBRSxFQUFFLGFBQWEsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCDCqSAyMDE4IEF0b21pc3QsIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgR29hbCB9IGZyb20gXCIuLi8uLi9jb21tb24vZGVsaXZlcnkvZ29hbHMvR29hbFwiO1xuaW1wb3J0IHsgR29hbHMsIGlzR29hbHMgfSBmcm9tIFwiLi4vLi4vY29tbW9uL2RlbGl2ZXJ5L2dvYWxzL0dvYWxzXCI7XG5pbXBvcnQgeyBQdXNoTGlzdGVuZXJJbnZvY2F0aW9uIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9saXN0ZW5lci9QdXNoTGlzdGVuZXJcIjtcbmltcG9ydCB7IFB1c2hUZXN0IH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9saXN0ZW5lci9QdXNoVGVzdFwiO1xuaW1wb3J0IHsgUHJlZGljYXRlTWFwcGluZ1Rlcm0sIHRvUHJlZGljYXRlTWFwcGluZyB9IGZyb20gXCIuLi8uLi9jb21tb24vbGlzdGVuZXIvc3VwcG9ydC9QcmVkaWNhdGVNYXBwaW5nVGVybVwiO1xuaW1wb3J0IHsgUHVzaFJ1bGUgfSBmcm9tIFwiLi4vLi4vY29tbW9uL2xpc3RlbmVyL3N1cHBvcnQvUHVzaFJ1bGVcIjtcbmltcG9ydCB7IEFueVB1c2ggfSBmcm9tIFwiLi4vLi4vY29tbW9uL2xpc3RlbmVyL3N1cHBvcnQvcHVzaHRlc3QvY29tbW9uUHVzaFRlc3RzXCI7XG5cbmV4cG9ydCBjbGFzcyBHb2FsU2V0dGVyUHVzaFJ1bGUgZXh0ZW5kcyBQdXNoUnVsZTxHb2Fscz4ge1xuXG4gICAgY29uc3RydWN0b3IoZ3VhcmQxOiBQdXNoVGVzdCwgZ3VhcmRzOiBQdXNoVGVzdFtdLCByZWFzb24/OiBzdHJpbmcpIHtcbiAgICAgICAgc3VwZXIoZ3VhcmQxLCBndWFyZHMsIHJlYXNvbik7XG4gICAgfVxuXG4gICAgcHVibGljIHNldEdvYWxzKGdvYWxzOiBHb2FscyB8IEdvYWwpOiB0aGlzIHtcbiAgICAgICAgaWYgKCFnb2Fscykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2V0KGdvYWxzIGFzIEdvYWxzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5zZXQoaXNHb2Fscyhnb2FscykgPyBnb2FscyA6IG5ldyBHb2FscyhcIlNvbGVseSBcIiArIGdvYWxzLm5hbWUsIGdvYWxzKSk7XG4gICAgfVxuXG59XG5cbi8qKlxuICogU2ltcGxlIEdvYWxTZXR0ZXIgRFNMLiBBbGxvd3MgdXNlIG9mIGJvb2xlYW5zIGFuZCBmdW5jdGlvbnNcbiAqIHJldHVybmluZyBib29sZWFuIGluIHByZWRpY2F0ZSBleHByZXNzaW9uc1xuICogQHBhcmFtIHtQdXNoVGVzdH0gZ3VhcmQxXG4gKiBAcGFyYW0ge1B1c2hUZXN0fSBndWFyZHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHdoZW5QdXNoU2F0aXNmaWVzKFxuICAgIGd1YXJkMTogUHJlZGljYXRlTWFwcGluZ1Rlcm08UHVzaExpc3RlbmVySW52b2NhdGlvbj4sXG4gICAgLi4uZ3VhcmRzOiBBcnJheTxQcmVkaWNhdGVNYXBwaW5nVGVybTxQdXNoTGlzdGVuZXJJbnZvY2F0aW9uPj4pOiBHb2FsU2V0dGVyUHVzaFJ1bGUge1xuICAgIHJldHVybiBuZXcgR29hbFNldHRlclB1c2hSdWxlKHRvUHJlZGljYXRlTWFwcGluZyhndWFyZDEpLCBndWFyZHMubWFwKHRvUHJlZGljYXRlTWFwcGluZykpO1xufVxuXG4vKipcbiAqIFB1c2hSdWxlIHRoYXQgbWF0Y2hlcyBldmVyeSBwdXNoXG4gKiBAdHlwZSB7R29hbFNldHRlclB1c2hSdWxlfVxuICovXG5leHBvcnQgY29uc3Qgb25BbnlQdXNoID0gbmV3IEdvYWxTZXR0ZXJQdXNoUnVsZShBbnlQdXNoLCBbXSwgXCJPbiBhbnkgcHVzaFwiKTtcbiJdfQ==