{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/goals/support/storeGoals.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/goals/support/storeGoals.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AutomationContextAware, HandlerContext, logger } from \"@atomist/automation-client\";\nimport { RemoteRepoRef } from \"@atomist/automation-client/operations/common/RepoId\";\nimport { addressEvent } from \"@atomist/automation-client/spi/message/MessageClient\";\nimport * as _ from \"lodash\";\nimport { sprintf } from \"sprintf-js\";\nimport { disregardApproval } from \"../../../../handlers/events/delivery/verify/approvalGate\";\nimport {\n    GoalRootType, SdmGoal, SdmGoalFulfillment, SdmGoalKey, SdmGoalState,\n    SdmProvenance,\n} from \"../../../../ingesters/sdmGoalIngester\";\nimport { Goal, hasPreconditions } from \"../Goal\";\nimport { GoalImplementation } from \"./SdmGoalImplementationMapper\";\n\nexport function environmentFromGoal(goal: Goal) {\n    return goal.definition.environment.replace(/\\/$/, \"\"); // remove trailing slash at least\n}\n\nexport interface UpdateSdmGoalParams {\n    state: SdmGoalState;\n    description: string;\n    url?: string;\n    approved?: boolean;\n    error?: Error;\n    data?: string;\n}\n\nexport function updateGoal(ctx: HandlerContext, before: SdmGoal, params: UpdateSdmGoalParams) {\n    const description = params.description;\n    const approval = params.approved ? constructProvenance(ctx) :\n        !!before ? before.approval : undefined;\n    const data = params.data ?\n        params.data :\n        !!before ? before.data : undefined;\n    const sdmGoal = {\n        ...before,\n        state: params.state === \"success\" && !!before && before.approvalRequired ? \"waiting_for_approval\" : params.state,\n        description,\n        url: params.url,\n        approval,\n        ts: Date.now(),\n        provenance: [constructProvenance(ctx)].concat(!!before ? before.provenance : []),\n        error: _.get(params, \"error.message\"),\n        data,\n    };\n    logger.debug(\"Updating SdmGoal %s to %s: %j\", sdmGoal.externalKey, sdmGoal.state, sdmGoal);\n    return ctx.messageClient.send(sdmGoal, addressEvent(GoalRootType));\n}\n\nexport function goalCorrespondsToSdmGoal(goal: Goal, sdmGoal: SdmGoal): boolean {\n    return goal.name === sdmGoal.name && environmentFromGoal(goal) === sdmGoal.environment;\n}\n\nexport function constructSdmGoalImplementation(gi: GoalImplementation): SdmGoalFulfillment {\n    return {\n        method: \"SDM fulfill on requested\",\n        name: gi.implementationName,\n    };\n}\n\nexport function constructSdmGoal(ctx: HandlerContext, parameters: {\n    goalSet: string,\n    goalSetId: string,\n    goal: Goal,\n    state: SdmGoalState,\n    id: RemoteRepoRef,\n    providerId: string\n    url?: string,\n    fulfillment?: SdmGoalFulfillment,\n}): SdmGoal {\n    const {goalSet, goal, goalSetId, state, id, providerId, url} = parameters;\n    const fulfillment = parameters.fulfillment || {method: \"other\", name: \"unspecified\"};\n\n    if (!id.branch) {\n        throw new Error(sprintf(\"Please provide a branch in the RemoteRepoRef %j\", parameters));\n    }\n    if (!id.sha) {\n        throw new Error(sprintf(\"Please provide a sha in the RemoteRepoRef %j\", parameters));\n    }\n\n    const preConditions: SdmGoalKey[] = [];\n    const description = descriptionFromState(goal, state);\n    const environment = environmentFromGoal(goal);\n    if (hasPreconditions(goal)) {\n        preConditions.push(...goal.dependsOn.map(d => ({\n            goalSet,\n            name: d.name,\n            environment: environmentFromGoal(d),\n        })));\n    }\n\n    return {\n        goalSet,\n        goalSetId,\n        name: goal.name,\n        uniqueName: goal.definition.uniqueName,\n        environment,\n        fulfillment,\n        sha: id.sha,\n        branch: id.branch,\n        repo: {\n            name: id.repo,\n            owner: id.owner,\n            providerId,\n        },\n        state,\n        description,\n        url: disregardApproval(url), // when we use goals in lifecycle this can go\n        externalKey: goal.context,\n        ts: Date.now(),\n        approvalRequired: goal.definition.approvalRequired ? goal.definition.approvalRequired : false,\n        provenance: [constructProvenance(ctx)],\n        preConditions,\n    };\n}\n\nexport function storeGoal(ctx: HandlerContext, sdmGoal: SdmGoal) {\n    logger.info(\"Storing goal: %j\", sdmGoal);\n    return ctx.messageClient.send(sdmGoal, addressEvent(GoalRootType))\n        .then(() => sdmGoal);\n}\n\nfunction constructProvenance(ctx: HandlerContext): SdmProvenance {\n    return {\n        registration: (ctx as any as AutomationContextAware).context.name,\n        version: (ctx as any as AutomationContextAware).context.version,\n        name: (ctx as any as AutomationContextAware).context.operation,\n        correlationId: ctx.correlationId,\n        ts: Date.now(),\n    };\n}\n\nexport function descriptionFromState(goal: Goal, state: SdmGoalState): string {\n    switch (state) {\n        case \"planned\":\n        case \"requested\":\n            return goal.requestedDescription;\n        case \"in_process\":\n            return goal.inProcessDescription;\n        case \"waiting_for_approval\":\n            return goal.waitingForApprovalDescription;\n        case \"success\":\n            return goal.successDescription;\n        case \"failure\":\n            return goal.failureDescription;\n        case \"skipped\":\n            return \"Skipped\"; // you probably want to use something that describes the reason instead. but don't error.\n        default:\n            throw new Error(\"Unknown goal state \" + state);\n    }\n}\n"]}