{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/build/local/npm/npmLogInterpreter.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/build/local/npm/npmLogInterpreter.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { logger } from \"@atomist/automation-client\";\nimport * as strip_ansi from \"strip-ansi\";\nimport { InterpretLog } from \"../../../../../spi/log/InterpretedLog\";\n\nexport const NpmLogInterpreter: InterpretLog = log => {\n    if (!log) {\n        return undefined;\n    }\n    const lines = removeBlanksFromEnd(\n        removeNpmFooter(\n        log.split(\"\\n\")\n        .map(strip_ansi)\n        .map(stripLogPrefix)));\n\n    const defaultMessage = lastOccurrenceOf(/^ERROR:/, lines) || \"Error\";\n    const defaultLines = lines.slice(-15);\n\n    const recognizedInterpretation: RecognizedLog =\n        recognizeMochaTest(lines) ||\n        recognizeNpmRunError(lines) ||\n        {};\n\n    const relevantLines: string[] = recognizedInterpretation.relevantLines || defaultLines;\n\n    return {\n        message: recognizedInterpretation.message || defaultMessage,\n        relevantPart: \"```\\n\" + relevantLines.join(\"\\n\") + \"\\n```\",\n    };\n};\n\nconst LogPrefix = /^.*\\[(info |error|warn |debug)\\] /;\nconst NpmFooterPrefix = /^npm ERR!/;\nconst StackTraceLine = /^\\W*at /;\nconst BeginMochaFailingTests = /^\\W*\\d* failing$/;\n\ninterface RecognizedLog { message?: string; relevantLines?: string[]; }\n\nfunction recognizeNpmRunError(lines: string[]): RecognizedLog {\n    const reversedLines = lines.slice().reverse();\n    const lastBreakBeforeCommand = findTwoBlankLinesIndex(reversedLines);\n    if (lastBreakBeforeCommand < 0) {\n        return undefined;\n    }\n    return { relevantLines: lines.slice(- Math.min(lastBreakBeforeCommand, 20))};\n}\n\nfunction recognizeMochaTest(lines: string[]): RecognizedLog | undefined {\n    const begin = lines.findIndex(s => BeginMochaFailingTests.test(s));\n    if (begin < 0) {\n        logger.debug(\"No mocha test detected\");\n        return undefined;\n    }\n    logger.debug(\"Mocha test detected, beginning at %d: %s\", begin, lines[begin]);\n    const fromBeginning = lines.slice(begin);\n    const end = findTwoBlankLinesIndex(fromBeginning) || fromBeginning.length;\n\n    const fromFailingCountToTwoBlankLines = fromBeginning.slice(0, end);\n    return {\n        message: \"Tests: \" + lines[begin].trim(),\n        relevantLines: fromFailingCountToTwoBlankLines.filter(s => !StackTraceLine.test(s)),\n    };\n}\n\nfunction stripLogPrefix(line: string): string {\n    return line.replace(LogPrefix, \"\");\n}\n\nfunction removeNpmFooter(lines: string[]) {\n    if (lines.includes(\"npm ERR! This is probably not a problem with npm. There is likely additional logging output above.\")) {\n        logger.info(\"Filtering npm error footer\");\n        return lines.filter(s => !NpmFooterPrefix.test(s));\n    }\n    return lines;\n}\n\nfunction findTwoBlankLinesIndex(lines: string[]) {\n    return lines.findIndex((s, i) => s === \"\" && lines[i + 1] === \"\");\n}\n\nfunction lastOccurrenceOf(re: RegExp, lines: string[]) {\n    const reversedLines = lines.slice().reverse(); // is there a better way tto make a copy? reverse() is in-place. >:-(\n    return reversedLines.find(s => re.test(s));\n}\n\nfunction removeBlanksFromEnd(lines: string[]) {\n    let w = lines.length - 1;\n    while (lines[w].trim() === \"\") {\n        w--;\n    }\n    return lines.slice(0, w + 1);\n}\n"]}