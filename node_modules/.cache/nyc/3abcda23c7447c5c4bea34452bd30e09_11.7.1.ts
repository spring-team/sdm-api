"use strict";var cov_15zzveaul=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/command/AbstractRemoteRepoRef.ts",hash="e94e8c064b2bc182afd5ab431c9b23a625dbb568",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/command/AbstractRemoteRepoRef.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:31},end:{line:3,column:107}},"2":{start:{line:4,column:38},end:{line:4,column:121}},"3":{start:{line:23,column:8},end:{line:23,column:41}},"4":{start:{line:24,column:8},end:{line:24,column:27}},"5":{start:{line:25,column:8},end:{line:25,column:25}},"6":{start:{line:26,column:8},end:{line:26,column:23}},"7":{start:{line:27,column:8},end:{line:27,column:25}},"8":{start:{line:28,column:8},end:{line:30,column:9}},"9":{start:{line:29,column:12},end:{line:29,column:77}},"10":{start:{line:32,column:23},end:{line:32,column:51}},"11":{start:{line:33,column:8},end:{line:33,column:76}},"12":{start:{line:34,column:8},end:{line:34,column:57}},"13":{start:{line:35,column:8},end:{line:35,column:60}},"14":{start:{line:38,column:8},end:{line:38,column:77}},"15":{start:{line:41,column:8},end:{line:44,column:9}},"16":{start:{line:42,column:12},end:{line:43,column:63}},"17":{start:{line:45,column:8},end:{line:47,column:9}},"18":{start:{line:46,column:12},end:{line:46,column:66}},"19":{start:{line:48,column:8},end:{line:48,column:105}},"20":{start:{line:51,column:8},end:{line:51,column:44}},"21":{start:{line:54,column:0},end:{line:54,column:54}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:22,column:4},end:{line:22,column:5}},loc:{start:{line:22,column:76},end:{line:36,column:5}},line:22},"1":{name:"(anonymous_1)",decl:{start:{line:37,column:4},end:{line:37,column:5}},loc:{start:{line:37,column:14},end:{line:39,column:5}},line:37},"2":{name:"(anonymous_2)",decl:{start:{line:40,column:4},end:{line:40,column:5}},loc:{start:{line:40,column:20},end:{line:49,column:5}},line:40},"3":{name:"(anonymous_3)",decl:{start:{line:50,column:4},end:{line:50,column:5}},loc:{start:{line:50,column:24},end:{line:52,column:5}},line:50}},branchMap:{"0":{loc:{start:{line:22,column:54},end:{line:22,column:68}},type:"default-arg",locations:[{start:{line:22,column:60},end:{line:22,column:68}}],line:22},"1":{loc:{start:{line:28,column:8},end:{line:30,column:9}},type:"if",locations:[{start:{line:28,column:8},end:{line:30,column:9}},{start:{line:28,column:8},end:{line:30,column:9}}],line:28},"2":{loc:{start:{line:33,column:22},end:{line:33,column:75}},type:"cond-expr",locations:[{start:{line:33,column:53},end:{line:33,column:62}},{start:{line:33,column:65},end:{line:33,column:75}}],line:33},"3":{loc:{start:{line:41,column:8},end:{line:44,column:9}},type:"if",locations:[{start:{line:41,column:8},end:{line:44,column:9}},{start:{line:41,column:8},end:{line:44,column:9}}],line:41},"4":{loc:{start:{line:45,column:8},end:{line:47,column:9}},type:"if",locations:[{start:{line:45,column:8},end:{line:47,column:9}},{start:{line:45,column:8},end:{line:47,column:9}}],line:45}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_15zzveaul.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const BasicAuthCredentials_1=(cov_15zzveaul.s[1]++,require("@atomist/automation-client/operations/common/BasicAuthCredentials"));const ProjectOperationCredentials_1=(cov_15zzveaul.s[2]++,require("@atomist/automation-client/operations/common/ProjectOperationCredentials"));/**
 * Superclass for RemoteRepoRef implementations.
 * Handles parsing remote base
 *
 * This should ultimately move down to automation-client-ts and replace AbstractRepoRef.
 */class AbstractRemoteRepoRef{/**
     * Construct a new RemoteRepoRef
     * @param {ProviderType} providerType
     * @param {string} rawRemote remote url. Should start with a scheme.
     * May have a trailing slash, which will be stripped
     * @param {string} owner
     * @param {string} repo
     * @param {string} sha
     * @param {string} path
     */constructor(providerType,rawRemote,owner,repo,sha=(cov_15zzveaul.b[0][0]++,"master"),path){cov_15zzveaul.f[0]++;cov_15zzveaul.s[3]++;this.providerType=providerType;cov_15zzveaul.s[4]++;this.owner=owner;cov_15zzveaul.s[5]++;this.repo=repo;cov_15zzveaul.s[6]++;this.sha=sha;cov_15zzveaul.s[7]++;this.path=path;cov_15zzveaul.s[8]++;if(!rawRemote.startsWith("http")){cov_15zzveaul.b[1][0]++;cov_15zzveaul.s[9]++;throw new Error(`Scheme required in remoteBase: '${rawRemote}'`);}else{cov_15zzveaul.b[1][1]++;}// Strip any trailing /
const remote=(cov_15zzveaul.s[10]++,rawRemote.replace(/\/$/,""));cov_15zzveaul.s[11]++;this.scheme=remote.startsWith("http://")?(cov_15zzveaul.b[2][0]++,"http://"):(cov_15zzveaul.b[2][1]++,"https://");cov_15zzveaul.s[12]++;this.apiBase=remote.substr(this.scheme.length);cov_15zzveaul.s[13]++;this.remoteBase=remote.substr(this.scheme.length);}get url(){cov_15zzveaul.f[1]++;cov_15zzveaul.s[14]++;return`${this.scheme}${this.remoteBase}/${this.owner}/${this.repo}`;}cloneUrl(creds){cov_15zzveaul.f[2]++;cov_15zzveaul.s[15]++;if(BasicAuthCredentials_1.isBasicAuthCredentials(creds)){cov_15zzveaul.b[3][0]++;cov_15zzveaul.s[16]++;return`${this.scheme}${encodeURIComponent(creds.username)}:${encodeURIComponent(creds.password)}@`+`${this.remoteBase}/${this.pathComponent}.git`;}else{cov_15zzveaul.b[3][1]++;}cov_15zzveaul.s[17]++;if(!ProjectOperationCredentials_1.isTokenCredentials(creds)){cov_15zzveaul.b[4][0]++;cov_15zzveaul.s[18]++;throw new Error("Only token or basic auth supported");}else{cov_15zzveaul.b[4][1]++;}cov_15zzveaul.s[19]++;return`${this.scheme}${creds.token}:x-oauth-basic@${this.remoteBase}/${this.pathComponent}.git`;}get pathComponent(){cov_15zzveaul.f[3]++;cov_15zzveaul.s[20]++;return this.owner+"/"+this.repo;}}cov_15zzveaul.s[21]++;exports.AbstractRemoteRepoRef=AbstractRemoteRepoRef;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2NvbW1vbi9jb21tYW5kL0Fic3RyYWN0UmVtb3RlUmVwb1JlZi50cyIsInNvdXJjZXMiOlsiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2NvbW1vbi9jb21tYW5kL0Fic3RyYWN0UmVtb3RlUmVwb1JlZi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLDRHQUEyRztBQUMzRywwSEFBMkk7QUFJM0k7Ozs7O0dBS0c7QUFDSDtJQWFJOzs7Ozs7Ozs7T0FTRztJQUNILFlBQXNDLFlBQTBCLEVBQzFDLFNBQWlCLEVBQ0QsS0FBYSxFQUNiLElBQVksRUFDWixNQUFjLFFBQVEsRUFDdEIsSUFBYTtRQUxiLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBRTFCLFVBQUssR0FBTCxLQUFLLENBQVE7UUFDYixTQUFJLEdBQUosSUFBSSxDQUFRO1FBQ1osUUFBRyxHQUFILEdBQUcsQ0FBbUI7UUFDdEIsU0FBSSxHQUFKLElBQUksQ0FBUztRQUMvQyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUMvQixNQUFNLElBQUksS0FBSyxDQUFDLG1DQUFtQyxTQUFTLEdBQUcsQ0FBQyxDQUFDO1NBQ3BFO1FBQ0QsdUJBQXVCO1FBQ3ZCLE1BQU0sTUFBTSxHQUFHLFNBQVMsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQzVDLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUM7UUFDcEUsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDakQsSUFBSSxDQUFDLFVBQVUsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUVELElBQUksR0FBRztRQUNILE9BQU8sR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDekUsQ0FBQztJQUVNLFFBQVEsQ0FBQyxLQUFrQztRQUM5QyxJQUFJLDZDQUFzQixDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQy9CLE9BQU8sR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLGtCQUFrQixDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsSUFBSSxrQkFBa0IsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLEdBQUc7Z0JBQy9GLEdBQUcsSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsYUFBYSxNQUFNLENBQUM7U0FDdEQ7UUFDRCxJQUFJLENBQUMsZ0RBQWtCLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDNUIsTUFBTSxJQUFJLEtBQUssQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO1NBQ3pEO1FBQ0QsT0FBTyxHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDLEtBQUssa0JBQWtCLElBQUksQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDLGFBQWEsTUFBTSxDQUFDO0lBQ3JHLENBQUM7SUFFRCxJQUFJLGFBQWE7UUFDYixPQUFPLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDeEMsQ0FBQztDQVVKO0FBbEVELHNEQWtFQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFjdGlvblJlc3VsdCB9IGZyb20gXCJAYXRvbWlzdC9hdXRvbWF0aW9uLWNsaWVudC9hY3Rpb24vQWN0aW9uUmVzdWx0XCI7XG5pbXBvcnQgeyBpc0Jhc2ljQXV0aENyZWRlbnRpYWxzIH0gZnJvbSBcIkBhdG9taXN0L2F1dG9tYXRpb24tY2xpZW50L29wZXJhdGlvbnMvY29tbW9uL0Jhc2ljQXV0aENyZWRlbnRpYWxzXCI7XG5pbXBvcnQgeyBpc1Rva2VuQ3JlZGVudGlhbHMsIFByb2plY3RPcGVyYXRpb25DcmVkZW50aWFscyB9IGZyb20gXCJAYXRvbWlzdC9hdXRvbWF0aW9uLWNsaWVudC9vcGVyYXRpb25zL2NvbW1vbi9Qcm9qZWN0T3BlcmF0aW9uQ3JlZGVudGlhbHNcIjtcbmltcG9ydCB7IFByb3ZpZGVyVHlwZSwgUmVtb3RlUmVwb1JlZiB9IGZyb20gXCJAYXRvbWlzdC9hdXRvbWF0aW9uLWNsaWVudC9vcGVyYXRpb25zL2NvbW1vbi9SZXBvSWRcIjtcbmltcG9ydCB7IENvbmZpZ3VyYWJsZSB9IGZyb20gXCJAYXRvbWlzdC9hdXRvbWF0aW9uLWNsaWVudC9wcm9qZWN0L2dpdC9Db25maWd1cmFibGVcIjtcblxuLyoqXG4gKiBTdXBlcmNsYXNzIGZvciBSZW1vdGVSZXBvUmVmIGltcGxlbWVudGF0aW9ucy5cbiAqIEhhbmRsZXMgcGFyc2luZyByZW1vdGUgYmFzZVxuICpcbiAqIFRoaXMgc2hvdWxkIHVsdGltYXRlbHkgbW92ZSBkb3duIHRvIGF1dG9tYXRpb24tY2xpZW50LXRzIGFuZCByZXBsYWNlIEFic3RyYWN0UmVwb1JlZi5cbiAqL1xuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEFic3RyYWN0UmVtb3RlUmVwb1JlZiBpbXBsZW1lbnRzIFJlbW90ZVJlcG9SZWYge1xuXG4gICAgcHVibGljIGJyYW5jaD86IHN0cmluZztcblxuICAgIHB1YmxpYyByZWFkb25seSBzY2hlbWU6IFwiaHR0cDovL1wiIHwgXCJodHRwczovL1wiO1xuXG4gICAgcHVibGljIHJlYWRvbmx5IGFwaUJhc2U6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIFJlbW90ZSB1cmwgbm90IGluY2x1ZGluZyBzY2hlbWUgb3IgdHJhaWxpbmcgL1xuICAgICAqL1xuICAgIHB1YmxpYyByZWFkb25seSByZW1vdGVCYXNlOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYSBuZXcgUmVtb3RlUmVwb1JlZlxuICAgICAqIEBwYXJhbSB7UHJvdmlkZXJUeXBlfSBwcm92aWRlclR5cGVcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcmF3UmVtb3RlIHJlbW90ZSB1cmwuIFNob3VsZCBzdGFydCB3aXRoIGEgc2NoZW1lLlxuICAgICAqIE1heSBoYXZlIGEgdHJhaWxpbmcgc2xhc2gsIHdoaWNoIHdpbGwgYmUgc3RyaXBwZWRcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gb3duZXJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcmVwb1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzaGFcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcGF0aFxuICAgICAqL1xuICAgIHByb3RlY3RlZCBjb25zdHJ1Y3RvcihwdWJsaWMgcmVhZG9ubHkgcHJvdmlkZXJUeXBlOiBQcm92aWRlclR5cGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJhd1JlbW90ZTogc3RyaW5nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBwdWJsaWMgcmVhZG9ubHkgb3duZXI6IHN0cmluZyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcHVibGljIHJlYWRvbmx5IHJlcG86IHN0cmluZyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcHVibGljIHJlYWRvbmx5IHNoYTogc3RyaW5nID0gXCJtYXN0ZXJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcHVibGljIHJlYWRvbmx5IHBhdGg/OiBzdHJpbmcpIHtcbiAgICAgICAgaWYgKCFyYXdSZW1vdGUuc3RhcnRzV2l0aChcImh0dHBcIikpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgU2NoZW1lIHJlcXVpcmVkIGluIHJlbW90ZUJhc2U6ICcke3Jhd1JlbW90ZX0nYCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gU3RyaXAgYW55IHRyYWlsaW5nIC9cbiAgICAgICAgY29uc3QgcmVtb3RlID0gcmF3UmVtb3RlLnJlcGxhY2UoL1xcLyQvLCBcIlwiKTtcbiAgICAgICAgdGhpcy5zY2hlbWUgPSByZW1vdGUuc3RhcnRzV2l0aChcImh0dHA6Ly9cIikgPyBcImh0dHA6Ly9cIiA6IFwiaHR0cHM6Ly9cIjtcbiAgICAgICAgdGhpcy5hcGlCYXNlID0gcmVtb3RlLnN1YnN0cih0aGlzLnNjaGVtZS5sZW5ndGgpO1xuICAgICAgICB0aGlzLnJlbW90ZUJhc2UgPSByZW1vdGUuc3Vic3RyKHRoaXMuc2NoZW1lLmxlbmd0aCk7XG4gICAgfVxuXG4gICAgZ2V0IHVybCgpIHtcbiAgICAgICAgcmV0dXJuIGAke3RoaXMuc2NoZW1lfSR7dGhpcy5yZW1vdGVCYXNlfS8ke3RoaXMub3duZXJ9LyR7dGhpcy5yZXBvfWA7XG4gICAgfVxuXG4gICAgcHVibGljIGNsb25lVXJsKGNyZWRzOiBQcm9qZWN0T3BlcmF0aW9uQ3JlZGVudGlhbHMpIHtcbiAgICAgICAgaWYgKGlzQmFzaWNBdXRoQ3JlZGVudGlhbHMoY3JlZHMpKSB7XG4gICAgICAgICAgICByZXR1cm4gYCR7dGhpcy5zY2hlbWV9JHtlbmNvZGVVUklDb21wb25lbnQoY3JlZHMudXNlcm5hbWUpfToke2VuY29kZVVSSUNvbXBvbmVudChjcmVkcy5wYXNzd29yZCl9QGAgK1xuICAgICAgICAgICAgICAgIGAke3RoaXMucmVtb3RlQmFzZX0vJHt0aGlzLnBhdGhDb21wb25lbnR9LmdpdGA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFpc1Rva2VuQ3JlZGVudGlhbHMoY3JlZHMpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJPbmx5IHRva2VuIG9yIGJhc2ljIGF1dGggc3VwcG9ydGVkXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBgJHt0aGlzLnNjaGVtZX0ke2NyZWRzLnRva2VufTp4LW9hdXRoLWJhc2ljQCR7dGhpcy5yZW1vdGVCYXNlfS8ke3RoaXMucGF0aENvbXBvbmVudH0uZ2l0YDtcbiAgICB9XG5cbiAgICBnZXQgcGF0aENvbXBvbmVudCgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5vd25lciArIFwiL1wiICsgdGhpcy5yZXBvO1xuICAgIH1cblxuICAgIHB1YmxpYyBhYnN0cmFjdCBjcmVhdGVSZW1vdGUoY3JlZHM6IFByb2plY3RPcGVyYXRpb25DcmVkZW50aWFscywgZGVzY3JpcHRpb246IHN0cmluZywgdmlzaWJpbGl0eSk6IFByb21pc2U8QWN0aW9uUmVzdWx0PHRoaXM+PjtcblxuICAgIHB1YmxpYyBhYnN0cmFjdCBzZXRVc2VyQ29uZmlnKGNyZWRlbnRpYWxzOiBQcm9qZWN0T3BlcmF0aW9uQ3JlZGVudGlhbHMsIHByb2plY3Q6IENvbmZpZ3VyYWJsZSk6IFByb21pc2U8QWN0aW9uUmVzdWx0PGFueT4+O1xuXG4gICAgcHVibGljIGFic3RyYWN0IHJhaXNlUHVsbFJlcXVlc3QoY3JlZHM6IFByb2plY3RPcGVyYXRpb25DcmVkZW50aWFscyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogc3RyaW5nLCBib2R5OiBzdHJpbmcsIGhlYWQ6IHN0cmluZywgYmFzZTogc3RyaW5nKTogUHJvbWlzZTxBY3Rpb25SZXN1bHQ8dGhpcz4+O1xuXG4gICAgcHVibGljIGFic3RyYWN0IGRlbGV0ZVJlbW90ZShjcmVkczogUHJvamVjdE9wZXJhdGlvbkNyZWRlbnRpYWxzKTogUHJvbWlzZTxBY3Rpb25SZXN1bHQ8dGhpcz4+O1xufVxuIl19