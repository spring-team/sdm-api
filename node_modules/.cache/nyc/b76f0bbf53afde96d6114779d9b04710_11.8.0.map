{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/blueprint/support/DefaultGoalsSoftwareDeliveryMachine.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/blueprint/support/DefaultGoalsSoftwareDeliveryMachine.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH,4BAA4B;AAC5B,sDAS2B;AAC3B,0EAA8E;AAC9E,kFAAsF;AACtF,0FAAuF;AACvF,0FAAuF;AACvF,wGAAqG;AACrG,mFAAgF;AAChF,kFAAuF;AACvF,yFAAoF;AAEpF,uEAA2E;AAC3E,wFAAwF;AAExF,uFAAoF;AAEpF;;GAEG;AACH,yCAAiD,SAAQ,iEAA+B;IAEpF;;;;;;OAMG;IACH,YAAY,IAAY,EACZ,IAAoC,EACpC,GAAG,WAA6C;QACxD,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAC1C,IAAI,CAAC,qBAAqB,CACtB,kCAAmB,CAAC,IAAI,CAAC,EACzB,sCAAqB,CAAC,IAAI,CAAC,EAC3B,8BAAiB,CAAC,IAAI,CAAC,CAC1B,CAAC;QAEF,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE,4BAAW,EAC7C,mCAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,oBAAoB,CAAC,EAAE;YAClE,oDAAoD;YACpD,cAAc,EAAE,+BAAa;SAChC,CAAC;aACD,qBAAqB,CAAC,WAAW,EAAE,uBAAM,EAAE,kCAAiB,CAAC;aAC7D,qBAAqB,CAAC,2BAA2B,EAAE,gCAAe,EAC/D,6CAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,0BAA0B,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;aAC9G,qBAAqB,CAAC,eAAe,EAAE,iCAAgB,EACpD,2CAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC;aACjF,qBAAqB,CAAC,SAAS,EAAE,2BAAU,EACxC,6BAAa,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;aAC5F,uBAAuB,EAAE;aACzB,qBAAqB,CAAC,mBAAmB,EAAE,qCAAoB,EAC5D,yCAAuB,EAAE,CAAC;aAC7B,qBAAqB,CAAC,iCAAiC,EAAE,yCAAwB,EAC9E,yCAAuB,EAAE,CAAC,CAAC;QACnC,IAAI,CAAC,eAAe,CAAC,6BAAY,EAAE,kBAAkB,CAAC,CAAC;IAC3D,CAAC;CAEJ;AAxCD,kFAwCC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as _ from \"lodash\";\nimport {\n    ArtifactGoal,\n    AutofixGoal,\n    DeleteAfterUndeploysGoal,\n    DeleteRepositoryGoal,\n    FingerprintGoal,\n    NoGoal,\n    PushReactionGoal,\n    ReviewGoal,\n} from \"../wellKnownGoals\";\nimport { createRepoHandler } from \"../../common/command/generator/createRepo\";\nimport { listGeneratorsHandler } from \"../../common/command/generator/listGenerators\";\nimport { executeAutofixes } from \"../../common/delivery/code/autofix/executeAutofixes\";\nimport { executePushReactions } from \"../../common/delivery/code/executePushReactions\";\nimport { executeFingerprinting } from \"../../common/delivery/code/fingerprint/executeFingerprinting\";\nimport { executeReview } from \"../../common/delivery/code/review/executeReview\";\nimport { offerToDeleteRepository } from \"../../common/delivery/deploy/executeUndeploy\";\nimport { LogSuppressor } from \"../../common/delivery/goals/support/logInterpreters\";\nimport { GoalSetter } from \"../../common/listener/GoalSetter\";\nimport { selfDescribeHandler } from \"../../handlers/commands/SelfDescribe\";\nimport { executeImmaterial } from \"../../handlers/events/delivery/goals/SetGoalsOnPush\";\nimport { SoftwareDeliveryMachineOptions } from \"../SoftwareDeliveryMachineOptions\";\nimport { AbstractSoftwareDeliveryMachine } from \"./AbstractSoftwareDeliveryMachine\";\n\n/**\n * Add default goals to AbstractSoftwareDeliveryMachine\n */\nexport class DefaultGoalsSoftwareDeliveryMachine extends AbstractSoftwareDeliveryMachine {\n\n    /**\n     * Construct a new software delivery machine, with zero or\n     * more goal setters.\n     * @param {string} name\n     * @param {SoftwareDeliveryMachineOptions} opts\n     * @param {GoalSetter} goalSetters tell me what to do on a push. Hint: start with \"whenPushSatisfies(...)\"\n     */\n    constructor(name: string,\n                opts: SoftwareDeliveryMachineOptions,\n                ...goalSetters: Array<GoalSetter | GoalSetter[]>) {\n        super(name, opts);\n        this.goalSetters = _.flatten(goalSetters);\n        this.addSupportingCommands(\n            selfDescribeHandler(this),\n            listGeneratorsHandler(this),\n            createRepoHandler(this),\n        );\n\n        this.addGoalImplementation(\"Autofix\", AutofixGoal,\n            executeAutofixes(this.opts.projectLoader, this.autofixRegistrations), {\n                // Autofix errors should not be reported to the user\n                logInterpreter: LogSuppressor,\n            })\n            .addGoalImplementation(\"DoNothing\", NoGoal, executeImmaterial)\n            .addGoalImplementation(\"FingerprinterRegistration\", FingerprintGoal,\n                executeFingerprinting(this.opts.projectLoader, this.fingerprinterRegistrations, this.fingerprintListeners))\n            .addGoalImplementation(\"CodeReactions\", PushReactionGoal,\n                executePushReactions(this.opts.projectLoader, this.pushReactionRegistrations))\n            .addGoalImplementation(\"Reviews\", ReviewGoal,\n                executeReview(this.opts.projectLoader, this.reviewerRegistrations, this.reviewListeners))\n            .addVerifyImplementation()\n            .addGoalImplementation(\"OfferToDeleteRepo\", DeleteRepositoryGoal,\n                offerToDeleteRepository())\n            .addGoalImplementation(\"OfferToDeleteRepoAfterUndeploys\", DeleteAfterUndeploysGoal,\n                offerToDeleteRepository());\n        this.knownSideEffect(ArtifactGoal, \"from ImageLinked\");\n    }\n\n}\n"]}