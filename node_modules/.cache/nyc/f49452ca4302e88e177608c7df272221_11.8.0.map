{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/listener/ArtifactListener.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/listener/ArtifactListener.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAkBH,wCAA+C,GAAiC;IAC5E,OAAO,8BAA8B,CAAC,GAAG,CAAC,CAAC,CAAC;QACxC,GAAG,CAAC,CAAC;QACL;YACI,IAAI,EAAE,MAAM;YACZ,MAAM,EAAE,GAAG;SACd,CAAC;AACV,CAAC;AAPD,wEAOC;AAED,wCAAwC,CAA+B;IACnE,MAAM,QAAQ,GAAG,CAAiC,CAAC;IACnD,OAAO,CAAC,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;AAChD,CAAC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DeployableArtifact } from \"../../spi/artifact/ArtifactStore\";\nimport { RepoListenerInvocation, SdmListener } from \"./Listener\";\nimport { PushRegistration } from \"./PushRegistration\";\n\nexport interface ArtifactListenerInvocation extends RepoListenerInvocation {\n\n    deployableArtifact: DeployableArtifact;\n\n}\n\nexport type ArtifactListener = SdmListener<ArtifactListenerInvocation>;\n\nexport type ArtifactListenerRegistration = PushRegistration<ArtifactListener>;\n\nexport type ArtifactListenerRegisterable = ArtifactListener | ArtifactListenerRegistration;\n\nexport function toArtifactListenerRegistration(alr: ArtifactListenerRegisterable): ArtifactListenerRegistration {\n    return isArtifactListenerRegistration(alr) ?\n        alr :\n        {\n            name: \"auto\",\n            action: alr,\n        };\n}\n\nfunction isArtifactListenerRegistration(a: ArtifactListenerRegisterable): a is ArtifactListenerRegistration {\n    const maybeAlr = a as ArtifactListenerRegistration;\n    return !!maybeAlr.action && !!maybeAlr.name;\n}\n"]}