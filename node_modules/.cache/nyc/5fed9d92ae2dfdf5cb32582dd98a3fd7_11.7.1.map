{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/goals/common/commonGoals.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/goals/common/commonGoals.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    IndependentOfEnvironment,\n    ProductionEnvironment, ProjectDisposalEnvironment,\n    StagingEnvironment,\n} from \"../gitHubContext\";\nimport {\n    Goal,\n    GoalWithPrecondition,\n} from \"../Goal\";\nimport { Goals } from \"../Goals\";\n\nexport const FingerprintGoal = new Goal({\n    uniqueName: \"Fingerprint\",\n    environment: IndependentOfEnvironment,\n    orderedName: \"0.1-fingerprint\",\n    completedDescription: \"Fingerprinted\",\n});\n\nexport const AutofixGoal = new Goal({\n    uniqueName: \"Autofix\",\n    environment: IndependentOfEnvironment,\n    orderedName: \"0.2-autofix\",\n    workingDescription: \"Running autofixes...\",\n    completedDescription: \"Autofixed\",\n    failedDescription: \"Fixes made: Don't proceed\",\n});\n\nexport const ReviewGoal = new Goal({\n    uniqueName: \"Review\",\n    environment: IndependentOfEnvironment,\n    orderedName: \"1-review\",\n    workingDescription: \"Running code reviews...\",\n    completedDescription: \"Code review passed\",\n    waitingForApprovalDescription: \"Manual approval needed\",\n});\n\n/**\n * Goal that runs PushReactionRegistrations\n * @type {Goal}\n */\nexport const PushReactionGoal = new Goal({\n    uniqueName: \"CodeReaction\",\n    environment: IndependentOfEnvironment,\n    orderedName: \"1.5-react\",\n    workingDescription: \"Running code reactions...\",\n    completedDescription: \"Code reactions passed\",\n});\n\nexport const VersionGoal = new Goal({\n    uniqueName: \"Version\",\n    environment: IndependentOfEnvironment,\n    orderedName: \"0.1-version\",\n    workingDescription: \"Calculating project version...\",\n    completedDescription: \"Versioned\",\n});\n\n/**\n * Just build, without any checks\n * @type {Goal}\n */\nexport const JustBuildGoal = new Goal({\n    uniqueName: \"JustBuild\",\n    environment: IndependentOfEnvironment,\n    orderedName: \"2-just-build \",\n    displayName: \"build\",\n    workingDescription: \"Building...\",\n    completedDescription: \"Build successful\",\n    failedDescription: \"Build failed\",\n});\n\nexport const BuildGoal = new GoalWithPrecondition({\n    uniqueName: \"Build\",\n    environment: IndependentOfEnvironment,\n    orderedName: \"2-build\",\n    displayName: \"build\",\n    workingDescription: \"Building...\",\n    completedDescription: \"Build successful\",\n    failedDescription: \"Build failed\",\n    isolated: true,\n}, AutofixGoal);\n\nexport const DockerBuildGoal = new GoalWithPrecondition({\n    uniqueName: \"DockerBuild\",\n    environment: IndependentOfEnvironment,\n    orderedName: \"3-docker\",\n    displayName: \"docker build\",\n    workingDescription: \"Running Docker build...\",\n    completedDescription: \"Docker build successful\",\n    failedDescription: \"Failed to build Docker image\",\n    isolated: true,\n}, BuildGoal);\n\nexport const TagGoal = new GoalWithPrecondition({\n    uniqueName: \"Tag\",\n    environment: IndependentOfEnvironment,\n    orderedName: \"4-tag\",\n    displayName: \"tag\",\n    workingDescription: \"Tagging...\",\n    completedDescription: \"Tagged\",\n    failedDescription: \"Failed to create Tag\",\n}, DockerBuildGoal, BuildGoal);\n\n// This one is actually satisfied in an ImageLinked event,\n// which happens to be a result of the build.\nexport const ArtifactGoal = new GoalWithPrecondition({\n    uniqueName: \"Artifact\",\n    environment: IndependentOfEnvironment,\n    orderedName: \"2.5-artifact\",\n    displayName: \"store artifact\",\n    completedDescription: \"Stored artifact\",\n}, BuildGoal);\n\nexport const StagingDeploymentGoal = new GoalWithPrecondition({\n    uniqueName: \"DeployToTest\",\n    environment: StagingEnvironment,\n    orderedName: \"3-deploy\",\n    displayName: \"deploy to Test\",\n    completedDescription: \"Deployed to Test\",\n    failedDescription: \"Test deployment failure\",\n}, ArtifactGoal);\n\nexport const StagingUndeploymentGoal = new Goal({\n    uniqueName: \"UndeployFromTest\",\n    environment: ProjectDisposalEnvironment,\n    orderedName: \"2-staging-undeploy\",\n    displayName: \"undeploy from test\",\n    completedDescription: \"not deployed in test\",\n});\n\n// this one won't be set up to trigger on its precondition;\n// rather, the deploy goal also sets this one, currently.\n// Setting the precondition lets FailDownstream know that this\n// one is never gonna succeed if the deploy failed.\nexport const StagingEndpointGoal = new GoalWithPrecondition({\n    uniqueName: \"FindTestEndpoint\",\n    environment: StagingEnvironment,\n    orderedName: \"4-endpoint\",\n    displayName: \"locate service endpoint in Test\",\n    completedDescription: \"Here is the service endpoint in Test\",\n    failedDescription: \"Couldn't locate service endpoint in Test\",\n}, StagingDeploymentGoal);\n\nexport const StagingVerifiedGoal = new GoalWithPrecondition({\n    uniqueName: \"VerifyTest\",\n    environment: StagingEnvironment,\n    orderedName: \"5-verifyEndpoint\",\n    displayName: \"verify Test deployment\",\n    completedDescription: \"Verified endpoint in Test\",\n    waitingForApprovalDescription: \"Test endpoint verified! Approve for production deploy.\",\n}, StagingEndpointGoal);\n\nexport const ProductionDeploymentGoal = new GoalWithPrecondition({\n        uniqueName: \"DeployToProduction\",\n        environment: ProductionEnvironment,\n        orderedName: \"3-prod-deploy\",\n        displayName: \"deploy to Prod\",\n        completedDescription: \"Deployed to Prod\",\n    },\n    ArtifactGoal, StagingVerifiedGoal);\n\nexport const ProductionUndeploymentGoal = new Goal({\n    uniqueName: \"UndeployFromProduction\",\n    environment: ProjectDisposalEnvironment,\n    orderedName: \"3-prod-undeploy\",\n    displayName: \"undeploy from Prod\",\n    completedDescription: \"not deployed in Prod\",\n});\n\n// this one won't be set up to trigger on its precondition;\n// rather, the deploy goal also sets this one, currently.\n// Setting the precondition lets FailDownstream know that this\n// one is never gonna succeed if the deploy failed.\nexport const ProductionEndpointGoal = new GoalWithPrecondition({\n    uniqueName: \"FindProductionEndpoint\",\n    environment: ProductionEnvironment,\n    orderedName: \"4-endpoint\",\n    displayName: \"locate service endpoint in Prod\",\n    completedDescription: \"Here is the service endpoint in Prod\",\n}, ProductionDeploymentGoal);\n\nexport const LocalDeploymentGoal = new Goal({\n    uniqueName: \"DeployHere\",\n    environment: IndependentOfEnvironment,\n    orderedName: \"1-deploy-locally\",\n    completedDescription: \"Deployed locally\",\n});\n\nexport const LocalUndeploymentGoal = new Goal({\n    uniqueName: \"UndeployHere\",\n    environment: ProjectDisposalEnvironment,\n    orderedName: \"1-undeploy-locally\",\n    failedDescription: \"Failed at local undeploy\",\n    completedDescription: \"not deployed locally\",\n});\n\nexport const DeleteRepositoryGoal = new Goal({\n    uniqueName: \"DeleteRepository\",\n    environment: ProjectDisposalEnvironment,\n    orderedName: \"8-delete-repo\",\n    completedDescription: \"Offered to delete repository\",\n});\n\nexport const DeleteAfterUndeploysGoal = new GoalWithPrecondition({\n    uniqueName: \"DeleteRepositoryAfterUndeployed\",\n    environment: ProjectDisposalEnvironment,\n    orderedName: \"8-delete-repo\",\n    completedDescription: \"Repository deleted\",\n}, ProductionUndeploymentGoal);\n\n// not an enforced precondition, but it's real enough to graph\nexport const LocalEndpointGoal = new GoalWithPrecondition({\n    uniqueName: \"FindLocalEndpoint\",\n    environment: IndependentOfEnvironment,\n    orderedName: \"2-endpoint\",\n    displayName: \"locate local service endpoint\",\n    completedDescription: \"Here is the local service endpoint\",\n\n}, LocalDeploymentGoal);\n\nexport const NoGoal = new Goal({\n    uniqueName: \"Nevermind\",\n    environment: IndependentOfEnvironment,\n    orderedName: \"1-immaterial\",\n    displayName: \"immaterial\",\n    completedDescription: \"No material changes\",\n});\n\nexport const StagingDeploymentContext = StagingDeploymentGoal.context;\nexport const StagingEndpointContext = StagingEndpointGoal.context;\nexport const StagingVerifiedContext = StagingVerifiedGoal.context;\nexport const ProductionDeploymentContext = ProductionDeploymentGoal.context;\nexport const ProductionEndpointContext = ProductionEndpointGoal.context;\nexport const ReviewContext = ReviewGoal.context;\nexport const BuildContext = BuildGoal.context;\n\nexport const ProductionMauve = \"#cf5097\";\n\n/**\n * Special Goals object to be returned if changes are immaterial.\n * The identity of this object is important.\n * @type {Goals}\n */\nexport const NoGoals = new Goals(\n    \"No action needed\",\n    NoGoal);\n"]}