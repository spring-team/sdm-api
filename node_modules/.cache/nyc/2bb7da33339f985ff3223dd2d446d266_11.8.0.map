{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/artifact/local/EphemeralLocalArtifactStore.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/artifact/local/EphemeralLocalArtifactStore.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;AAEH,kEAAoD;AAIpD;;;;;;GAMG;AACH;IAAA;QAEqB,YAAO,GAA4C,EAAE,CAAC;IAgC3E,CAAC;IA9BgB,SAAS,CAAC,OAAgB,EAAE,IAAY;;YACjD,MAAM,KAAK,GAAG;gBACV,OAAO;gBACP,iBAAiB,EAAE,SAAS,GAAG,IAAI;gBACnC,GAAG,EAAE,UAAU,IAAI,IAAI;aAC1B,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACzB,0BAAM,CAAC,IAAI,CAAC,+CAA+C,EAAE,OAAO,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;YACjF,OAAO,KAAK,CAAC,GAAG,CAAC;QACrB,CAAC;KAAA;IAEe,QAAQ,CAAC,GAAW;;YAChC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;QACjD,CAAC;KAAA;IAEY,QAAQ,CAAC,GAAW;;YAC7B,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YAChD,IAAI,CAAC,cAAc,EAAE;gBACjB,0BAAM,CAAC,KAAK,CAAC,uCAAuC,EAAE,GAAG,EACrD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC5C,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC;aACzD;YAED,MAAM,KAAK,qBACJ,cAAc,CAAC,OAAO,EACtB,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAChD,CAAC;YACF,0BAAM,CAAC,IAAI,CAAC,oDAAoD,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;YAC9E,OAAO,KAAK,CAAC;QACjB,CAAC;KAAA;CACJ;AAlCD,kEAkCC;AAED,kBAAkB,SAAiB;IAC3B,4HAA4H;IAChI,MAAM,SAAS,GAAG,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAC7C,MAAM,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;IACjD,MAAM,GAAG,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;IAE9C,0BAAM,CAAC,KAAK,CAAC,sDAAsD,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;IAE/F,OAAO,EAAC,GAAG,EAAE,QAAQ,EAAC,CAAC;AAC3B,CAAC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { logger } from \"@atomist/automation-client\";\nimport { ArtifactStore, DeployableArtifact, StoredArtifact } from \"../../../spi/artifact/ArtifactStore\";\nimport { AppInfo } from \"../../../spi/deploy/Deployment\";\n\n/**\n * Store the artifact on local disk, relying on in memory cache.\n * **This is purely for demo and test use. It is NOT a production\n * quality implementation. It uses fake artifact links in\n * GitHub statuses that may not be honored after the present automation\n * client is shut down.**\n */\nexport class EphemeralLocalArtifactStore implements ArtifactStore {\n\n    private readonly entries: Array<StoredArtifact & { url: string }> = [];\n\n    public async storeFile(appInfo: AppInfo, what: string): Promise<string> {\n        const entry = {\n            appInfo,\n            deploymentUnitUrl: \"http://\" + what,\n            url: `http://${what}/x`,\n        };\n        this.entries.push(entry);\n        logger.info(\"EphemeralLocalArtifactStore: storing %j at %s\", appInfo, entry.url);\n        return entry.url;\n    }\n\n    protected async retrieve(url: string): Promise<StoredArtifact> {\n        return this.entries.find(e => e.url === url);\n    }\n\n    public async checkout(url: string): Promise<DeployableArtifact> {\n        const storedArtifact = await this.retrieve(url);\n        if (!storedArtifact) {\n            logger.error(\"No stored artifact for [%s]: Known=%s\", url,\n                this.entries.map(e => e.url).join(\",\"));\n            return Promise.reject(new Error(\"No artifact found\"));\n        }\n\n        const local: DeployableArtifact = {\n            ...storedArtifact.appInfo,\n            ...parseUrl(storedArtifact.deploymentUnitUrl),\n        };\n        logger.info(\"EphemeralLocalArtifactStore: checking out %s at %j\", url, local);\n        return local;\n    }\n}\n\nfunction parseUrl(targetUrl: string) {\n        // Form is http:///var/folders/86/p817yp991bdddrqr_bdf20gh0000gp/T/tmp-20964EBUrRVIZ077a/target/losgatos1-0.1.0-SNAPSHOT.jar\n    const lastSlash = targetUrl.lastIndexOf(\"/\");\n    const filename = targetUrl.substr(lastSlash + 1);\n    const cwd = targetUrl.substring(7, lastSlash);\n\n    logger.debug(\"Parsing results: url [%s]\\n filename [%s]\\n cwd [%s]\", targetUrl, filename, cwd);\n\n    return {cwd, filename};\n}\n"]}