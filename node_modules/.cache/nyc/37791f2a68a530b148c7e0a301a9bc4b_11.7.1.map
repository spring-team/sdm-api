{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/code/autofix/spawnedCommandAutofix.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/code/autofix/spawnedCommandAutofix.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAGH,2EAA6E;AAE7E,+DAAmH;AAEnH;;;GAGG;AACH,+BAAsC,IAAY,EACZ,QAAkB,EAClB,OAAmC,EACnC,QAAsB,EACtB,GAAG,kBAAkC;IACvE,OAAO,+CAAyB,CAAC;QAC7B,IAAI;QACJ,MAAM,EAAE,oCAAmB,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;QAClE,QAAQ;QACR,OAAO;KACV,CAAC,CAAC;AACP,CAAC;AAXD,sDAWC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpawnCommand } from \"../../../../util/misc/spawned\";\nimport { localCommandsEditor } from \"../../../command/editor/editorWrappers\";\nimport { PushTest } from \"../../../listener/PushTest\";\nimport { AutofixRegistration, AutofixRegistrationOptions, editorAutofixRegistration } from \"./AutofixRegistration\";\n\n/**\n * Register an autofix based on spawned local shell commands.\n * For example, could wrap a linter\n */\nexport function spawnedCommandAutofix(name: string,\n                                      pushTest: PushTest,\n                                      options: AutofixRegistrationOptions,\n                                      command1: SpawnCommand,\n                                      ...additionalCommands: SpawnCommand[]): AutofixRegistration {\n    return editorAutofixRegistration({\n        name,\n        editor: localCommandsEditor([command1].concat(additionalCommands)),\n        pushTest,\n        options,\n    });\n}\n"]}