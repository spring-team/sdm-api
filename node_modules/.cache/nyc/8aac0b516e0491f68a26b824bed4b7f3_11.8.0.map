{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/listener/support/pushtest/node/nodePushTests.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/listener/support/pushtest/node/nodePushTests.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;AAEH,sGAA8F;AAC9F,gDAAyE;AACzE,wDAA6C;AAEhC,QAAA,MAAM,GAAsB,4BAAiB,CAAC,SAAS,EAAE,CAAM,CAAC,EAAC,EAAE;IAC5E,IAAI;QACA,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC3C,MAAM,QAAQ,GAAG,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC;QACtC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACrB,OAAO,IAAI,CAAC;KACf;IAAC,OAAO,GAAG,EAAE;QACV,OAAO,KAAK,CAAC;KAChB;AACL,CAAC,CAAA,CAAC,CAAC;AAEU,QAAA,yBAAyB,GAAG,yBAAO,CAAC,uBAAuB,CAAC,CAAC;AAE7D,QAAA,mBAAmB,GAAG,yBAAO,CAAC,wCAAgB,CAAC,CAAC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AtomistBuildFile } from \"../../../../delivery/build/local/npm/NpmDetectBuildMapping\";\nimport { PredicatePushTest, predicatePushTest } from \"../../../PushTest\";\nimport { hasFile } from \"../commonPushTests\";\n\nexport const IsNode: PredicatePushTest = predicatePushTest(\"Is Node\", async p => {\n    try {\n        const f = await p.findFile(\"package.json\");\n        const contents = await f.getContent();\n        JSON.parse(contents);\n        return true;\n    } catch (err) {\n        return false;\n    }\n});\n\nexport const IsAtomistAutomationClient = hasFile(\"src/atomist.config.ts\");\n\nexport const HasAtomistBuildFile = hasFile(AtomistBuildFile);\n"]}