"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_huhlqwcdc=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/command/editor/allReposInTeam.ts",hash="ab5c18ef3b0034b013c3190a3663110ffe479631",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/command/editor/allReposInTeam.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:26},end:{line:18,column:97}},"2":{start:{line:19,column:10},end:{line:19,column:27}},"3":{start:{line:20,column:18},end:{line:20,column:54}},"4":{start:{line:22,column:17},end:{line:22,column:20}},"5":{start:{line:30,column:4},end:{line:35,column:6}},"6":{start:{line:31,column:8},end:{line:33,column:9}},"7":{start:{line:32,column:12},end:{line:32,column:78}},"8":{start:{line:34,column:8},end:{line:34,column:40}},"9":{start:{line:37,column:0},end:{line:37,column:40}},"10":{start:{line:45,column:4},end:{line:57,column:7}},"11":{start:{line:50,column:8},end:{line:50,column:110}},"12":{start:{line:50,column:57},end:{line:50,column:108}},"13":{start:{line:50,column:75},end:{line:50,column:107}},"14":{start:{line:53,column:8},end:{line:56,column:60}},"15":{start:{line:56,column:35},end:{line:56,column:58}}},fnMap:{"0":{name:"allReposInTeam",decl:{start:{line:29,column:9},end:{line:29,column:23}},loc:{start:{line:29,column:29},end:{line:36,column:1}},line:29},"1":{name:"(anonymous_1)",decl:{start:{line:30,column:11},end:{line:30,column:12}},loc:{start:{line:30,column:24},end:{line:35,column:5}},line:30},"2":{name:"queryForPage",decl:{start:{line:44,column:9},end:{line:44,column:21}},loc:{start:{line:44,column:39},end:{line:58,column:1}},line:44},"3":{name:"(anonymous_3)",decl:{start:{line:49,column:14},end:{line:49,column:15}},loc:{start:{line:49,column:24},end:{line:51,column:5}},line:49},"4":{name:"(anonymous_4)",decl:{start:{line:50,column:50},end:{line:50,column:51}},loc:{start:{line:50,column:57},end:{line:50,column:108}},line:50},"5":{name:"(anonymous_5)",decl:{start:{line:50,column:70},end:{line:50,column:71}},loc:{start:{line:50,column:75},end:{line:50,column:107}},line:50},"6":{name:"(anonymous_6)",decl:{start:{line:52,column:14},end:{line:52,column:15}},loc:{start:{line:52,column:23},end:{line:57,column:5}},line:52},"7":{name:"(anonymous_7)",decl:{start:{line:56,column:22},end:{line:56,column:23}},loc:{start:{line:56,column:35},end:{line:56,column:58}},line:56}},branchMap:{"0":{loc:{start:{line:31,column:8},end:{line:33,column:9}},type:"if",locations:[{start:{line:31,column:8},end:{line:33,column:9}},{start:{line:31,column:8},end:{line:33,column:9}}],line:31},"1":{loc:{start:{line:53,column:15},end:{line:56,column:59}},type:"cond-expr",locations:[{start:{line:54,column:12},end:{line:54,column:17}},{start:{line:55,column:12},end:{line:56,column:59}}],line:53}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_huhlqwcdc.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const localRepoFinder_1=(cov_huhlqwcdc.s[1]++,require("@atomist/automation-client/operations/common/localRepoFinder"));const _=(cov_huhlqwcdc.s[2]++,require("lodash"));const repoRef_1=(cov_huhlqwcdc.s[3]++,require("../../../util/git/repoRef"));// Hard-coded limit in GraphQL queries. Not sure why we can't pass this
const PageSize=(cov_huhlqwcdc.s[4]++,100);/**
 * Use a GraphQL query to find all repos for the current team,
 * or look locally if appropriate, in current working directory
 * @param cwd directory to look in if this is local
 * @constructor
 */function allReposInTeam(cwd){cov_huhlqwcdc.f[0]++;cov_huhlqwcdc.s[5]++;return context=>{cov_huhlqwcdc.f[1]++;cov_huhlqwcdc.s[6]++;if(cwd){cov_huhlqwcdc.b[0][0]++;cov_huhlqwcdc.s[7]++;return localRepoFinder_1.twoTierDirectoryRepoFinder(cwd)(context);}else{cov_huhlqwcdc.b[0][1]++;}cov_huhlqwcdc.s[8]++;return queryForPage(context,0);};}cov_huhlqwcdc.s[9]++;exports.allReposInTeam=allReposInTeam;/**
 * Recursively query for repos from the present offset
 * @param {HandlerContext} context
 * @param {number} offset
 * @return {Promise<RepoRef[]>}
 */function queryForPage(context,offset){cov_huhlqwcdc.f[2]++;cov_huhlqwcdc.s[10]++;return context.graphClient.query({name:"ReposInTeam",variables:{teamId:context.teamId,offset}}).then(result=>{cov_huhlqwcdc.f[3]++;cov_huhlqwcdc.s[11]++;return _.flatMap(result.ChatTeam[0].orgs,org=>{cov_huhlqwcdc.f[4]++;cov_huhlqwcdc.s[12]++;return org.repo.map(r=>{cov_huhlqwcdc.f[5]++;cov_huhlqwcdc.s[13]++;return repoRef_1.toRemoteRepoRef(r,{});});});}).then(repos=>{cov_huhlqwcdc.f[6]++;cov_huhlqwcdc.s[14]++;return repos.length<PageSize?(cov_huhlqwcdc.b[1][0]++,repos):(cov_huhlqwcdc.b[1][1]++,queryForPage(context,offset+PageSize).then(moreRepos=>{cov_huhlqwcdc.f[7]++;cov_huhlqwcdc.s[15]++;return repos.concat(moreRepos);}));});}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2NvbW1vbi9jb21tYW5kL2VkaXRvci9hbGxSZXBvc0luVGVhbS50cyIsInNvdXJjZXMiOlsiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2NvbW1vbi9jb21tYW5kL2VkaXRvci9hbGxSZXBvc0luVGVhbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7O0dBY0c7O0FBR0gsa0dBQTBHO0FBRzFHLDRCQUE0QjtBQUU1Qix1REFBNEQ7QUFFNUQsdUVBQXVFO0FBQ3ZFLE1BQU0sUUFBUSxHQUFHLEdBQUcsQ0FBQztBQUVyQjs7Ozs7R0FLRztBQUNILHdCQUErQixHQUFZO0lBQ3ZDLE9BQU8sQ0FBQyxPQUF1QixFQUFFLEVBQUU7UUFDL0IsSUFBSSxHQUFHLEVBQUU7WUFDTCxPQUFPLDRDQUEwQixDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQ25EO1FBQ0QsT0FBTyxZQUFZLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3BDLENBQUMsQ0FBQztBQUNOLENBQUM7QUFQRCx3Q0FPQztBQUVEOzs7OztHQUtHO0FBQ0gsc0JBQXNCLE9BQXVCLEVBQUUsTUFBYztJQUN6RCxPQUFPLE9BQU8sQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUEyQztRQUN2RSxJQUFJLEVBQUUsYUFBYTtRQUNuQixTQUFTLEVBQUUsRUFBQyxNQUFNLEVBQUUsT0FBTyxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUM7S0FDOUMsQ0FBQztTQUNHLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRTtRQUNYLE9BQU8sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsRUFBRSxDQUM1QyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLHlCQUFlLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNuRCxDQUFDLENBQUM7U0FDRCxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUU7UUFDVixPQUFPLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQzlCLEtBQUssQ0FBQyxDQUFDO1lBQ1AsWUFBWSxDQUFDLE9BQU8sRUFBRSxNQUFNLEdBQUcsUUFBUSxDQUFDO2lCQUNuQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7SUFDeEQsQ0FBQyxDQUFDLENBQUM7QUFDWCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCDCqSAyMDE4IEF0b21pc3QsIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgSGFuZGxlckNvbnRleHQgfSBmcm9tIFwiQGF0b21pc3QvYXV0b21hdGlvbi1jbGllbnRcIjtcbmltcG9ydCB7IHR3b1RpZXJEaXJlY3RvcnlSZXBvRmluZGVyIH0gZnJvbSBcIkBhdG9taXN0L2F1dG9tYXRpb24tY2xpZW50L29wZXJhdGlvbnMvY29tbW9uL2xvY2FsUmVwb0ZpbmRlclwiO1xuaW1wb3J0IHsgUmVwb0ZpbmRlciB9IGZyb20gXCJAYXRvbWlzdC9hdXRvbWF0aW9uLWNsaWVudC9vcGVyYXRpb25zL2NvbW1vbi9yZXBvRmluZGVyXCI7XG5pbXBvcnQgeyBSZW1vdGVSZXBvUmVmIH0gZnJvbSBcIkBhdG9taXN0L2F1dG9tYXRpb24tY2xpZW50L29wZXJhdGlvbnMvY29tbW9uL1JlcG9JZFwiO1xuaW1wb3J0ICogYXMgXyBmcm9tIFwibG9kYXNoXCI7XG5pbXBvcnQgeyBSZXBvc0luVGVhbSB9IGZyb20gXCIuLi8uLi8uLi90eXBpbmdzL3R5cGVzXCI7XG5pbXBvcnQgeyB0b1JlbW90ZVJlcG9SZWYgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbC9naXQvcmVwb1JlZlwiO1xuXG4vLyBIYXJkLWNvZGVkIGxpbWl0IGluIEdyYXBoUUwgcXVlcmllcy4gTm90IHN1cmUgd2h5IHdlIGNhbid0IHBhc3MgdGhpc1xuY29uc3QgUGFnZVNpemUgPSAxMDA7XG5cbi8qKlxuICogVXNlIGEgR3JhcGhRTCBxdWVyeSB0byBmaW5kIGFsbCByZXBvcyBmb3IgdGhlIGN1cnJlbnQgdGVhbSxcbiAqIG9yIGxvb2sgbG9jYWxseSBpZiBhcHByb3ByaWF0ZSwgaW4gY3VycmVudCB3b3JraW5nIGRpcmVjdG9yeVxuICogQHBhcmFtIGN3ZCBkaXJlY3RvcnkgdG8gbG9vayBpbiBpZiB0aGlzIGlzIGxvY2FsXG4gKiBAY29uc3RydWN0b3JcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFsbFJlcG9zSW5UZWFtKGN3ZD86IHN0cmluZyk6IFJlcG9GaW5kZXIge1xuICAgIHJldHVybiAoY29udGV4dDogSGFuZGxlckNvbnRleHQpID0+IHtcbiAgICAgICAgaWYgKGN3ZCkge1xuICAgICAgICAgICAgcmV0dXJuIHR3b1RpZXJEaXJlY3RvcnlSZXBvRmluZGVyKGN3ZCkoY29udGV4dCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHF1ZXJ5Rm9yUGFnZShjb250ZXh0LCAwKTtcbiAgICB9O1xufVxuXG4vKipcbiAqIFJlY3Vyc2l2ZWx5IHF1ZXJ5IGZvciByZXBvcyBmcm9tIHRoZSBwcmVzZW50IG9mZnNldFxuICogQHBhcmFtIHtIYW5kbGVyQ29udGV4dH0gY29udGV4dFxuICogQHBhcmFtIHtudW1iZXJ9IG9mZnNldFxuICogQHJldHVybiB7UHJvbWlzZTxSZXBvUmVmW10+fVxuICovXG5mdW5jdGlvbiBxdWVyeUZvclBhZ2UoY29udGV4dDogSGFuZGxlckNvbnRleHQsIG9mZnNldDogbnVtYmVyKTogUHJvbWlzZTxSZW1vdGVSZXBvUmVmW10+IHtcbiAgICByZXR1cm4gY29udGV4dC5ncmFwaENsaWVudC5xdWVyeTxSZXBvc0luVGVhbS5RdWVyeSwgUmVwb3NJblRlYW0uVmFyaWFibGVzPih7XG4gICAgICAgIG5hbWU6IFwiUmVwb3NJblRlYW1cIixcbiAgICAgICAgdmFyaWFibGVzOiB7dGVhbUlkOiBjb250ZXh0LnRlYW1JZCwgb2Zmc2V0fSxcbiAgICB9KVxuICAgICAgICAudGhlbihyZXN1bHQgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIF8uZmxhdE1hcChyZXN1bHQuQ2hhdFRlYW1bMF0ub3Jncywgb3JnID0+XG4gICAgICAgICAgICAgICAgb3JnLnJlcG8ubWFwKHIgPT4gdG9SZW1vdGVSZXBvUmVmKHIsIHt9KSkpO1xuICAgICAgICB9KVxuICAgICAgICAudGhlbihyZXBvcyA9PiB7XG4gICAgICAgICAgICByZXR1cm4gKHJlcG9zLmxlbmd0aCA8IFBhZ2VTaXplKSA/XG4gICAgICAgICAgICAgICAgcmVwb3MgOlxuICAgICAgICAgICAgICAgIHF1ZXJ5Rm9yUGFnZShjb250ZXh0LCBvZmZzZXQgKyBQYWdlU2l6ZSlcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4obW9yZVJlcG9zID0+IHJlcG9zLmNvbmNhdChtb3JlUmVwb3MpKTtcbiAgICAgICAgfSk7XG59XG4iXX0=