"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_x7g3e4yty=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/util/project/filteredView.ts",hash="9c69f8beccf398dd22fb015ddf1249f05de0be9d",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/util/project/filteredView.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:15},end:{line:18,column:32}},"2":{start:{line:28,column:20},end:{line:43,column:5}},"3":{start:{line:30,column:30},end:{line:30,column:65}},"4":{start:{line:31,column:12},end:{line:33,column:13}},"5":{start:{line:32,column:16},end:{line:32,column:71}},"6":{start:{line:34,column:31},end:{line:34,column:43}},"7":{start:{line:35,column:36},end:{line:35,column:51}},"8":{start:{line:36,column:12},end:{line:41,column:14}},"9":{start:{line:37,column:16},end:{line:40,column:49}},"10":{start:{line:44,column:4},end:{line:44,column:33}},"11":{start:{line:46,column:0},end:{line:46,column:36}},"12":{start:{line:53,column:8},end:{line:53,column:31}},"13":{start:{line:54,column:8},end:{line:54,column:29}},"14":{start:{line:57,column:8},end:{line:59,column:22}},"15":{start:{line:62,column:8},end:{line:64,column:9}},"16":{start:{line:63,column:12},end:{line:63,column:47}},"17":{start:{line:65,column:8},end:{line:65,column:46}},"18":{start:{line:74,column:23},end:{line:74,column:34}},"19":{start:{line:75,column:36},end:{line:75,column:78}},"20":{start:{line:76,column:8},end:{line:81,column:10}},"21":{start:{line:77,column:12},end:{line:79,column:13}},"22":{start:{line:78,column:16},end:{line:78,column:29}},"23":{start:{line:80,column:12},end:{line:80,column:19}},"24":{start:{line:82,column:8},end:{line:83,column:39}}},fnMap:{"0":{name:"filteredView",decl:{start:{line:26,column:9},end:{line:26,column:21}},loc:{start:{line:26,column:33},end:{line:45,column:1}},line:26},"1":{name:"(anonymous_1)",decl:{start:{line:29,column:13},end:{line:29,column:14}},loc:{start:{line:29,column:31},end:{line:42,column:9}},line:29},"2":{name:"(anonymous_2)",decl:{start:{line:36,column:19},end:{line:36,column:20}},loc:{start:{line:36,column:38},end:{line:41,column:13}},line:36},"3":{name:"(anonymous_3)",decl:{start:{line:52,column:4},end:{line:52,column:5}},loc:{start:{line:52,column:33},end:{line:55,column:5}},line:52},"4":{name:"(anonymous_4)",decl:{start:{line:56,column:4},end:{line:56,column:5}},loc:{start:{line:56,column:18},end:{line:60,column:5}},line:56},"5":{name:"(anonymous_5)",decl:{start:{line:61,column:4},end:{line:61,column:5}},loc:{start:{line:61,column:19},end:{line:66,column:5}},line:61},"6":{name:"(anonymous_6)",decl:{start:{line:73,column:4},end:{line:73,column:5}},loc:{start:{line:73,column:39},end:{line:84,column:5}},line:73},"7":{name:"(anonymous_7)",decl:{start:{line:76,column:41},end:{line:76,column:42}},loc:{start:{line:76,column:70},end:{line:81,column:9}},line:76}},branchMap:{"0":{loc:{start:{line:31,column:12},end:{line:33,column:13}},type:"if",locations:[{start:{line:31,column:12},end:{line:33,column:13}},{start:{line:31,column:12},end:{line:33,column:13}}],line:31},"1":{loc:{start:{line:37,column:23},end:{line:40,column:48}},type:"cond-expr",locations:[{start:{line:38,column:20},end:{line:38,column:58}},{start:{line:40,column:20},end:{line:40,column:48}}],line:37},"2":{loc:{start:{line:57,column:15},end:{line:59,column:21}},type:"cond-expr",locations:[{start:{line:58,column:12},end:{line:58,column:38}},{start:{line:59,column:12},end:{line:59,column:21}}],line:57},"3":{loc:{start:{line:62,column:8},end:{line:64,column:9}},type:"if",locations:[{start:{line:62,column:8},end:{line:64,column:9}},{start:{line:62,column:8},end:{line:64,column:9}}],line:62},"4":{loc:{start:{line:77,column:12},end:{line:79,column:13}},type:"if",locations:[{start:{line:77,column:12},end:{line:79,column:13}},{start:{line:77,column:12},end:{line:79,column:13}}],line:77}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_x7g3e4yty.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const stream=(cov_x7g3e4yty.s[1]++,require("stream"));/**
 * Create a filtered view of the given project.
 * Changes to the filtered view will affect the source project.
 * @param {LocalProject} p
 * @param filter function to filter file paths
 * @return {Promise<LocalProject>}
 */function filteredView(p,filter){cov_x7g3e4yty.f[0]++;// Use an ES6 proxy to bring back memories of Spring AOP
const handler=(cov_x7g3e4yty.s[2]++,{get:(target,prop)=>{cov_x7g3e4yty.f[1]++;const decorator=(cov_x7g3e4yty.s[3]++,new FilteredProject(target,filter));cov_x7g3e4yty.s[4]++;if(prop.endsWith("Sync")){cov_x7g3e4yty.b[0][0]++;cov_x7g3e4yty.s[5]++;throw new Error("Don't use sync methods: had "+prop);}else{cov_x7g3e4yty.b[0][1]++;}const origMethod=(cov_x7g3e4yty.s[6]++,target[prop]);const decoratedMethod=(cov_x7g3e4yty.s[7]++,decorator[prop]);cov_x7g3e4yty.s[8]++;return function(...args){cov_x7g3e4yty.f[2]++;cov_x7g3e4yty.s[9]++;return!!decoratedMethod?(cov_x7g3e4yty.b[1][0]++,decoratedMethod.apply(decorator,args)):(// tslint:disable-next-line:no-invalid-this
cov_x7g3e4yty.b[1][1]++,origMethod.apply(this,args));};}});cov_x7g3e4yty.s[10]++;return new Proxy(p,handler);}cov_x7g3e4yty.s[11]++;exports.filteredView=filteredView;/**
 * This relies on the implementation of AbstractProject,
 * where overriding streamFilesRaw does move of what we need
 */class FilteredProject{constructor(project,filter){cov_x7g3e4yty.f[3]++;cov_x7g3e4yty.s[12]++;this.project=project;cov_x7g3e4yty.s[13]++;this.filter=filter;}getFile(path){cov_x7g3e4yty.f[4]++;cov_x7g3e4yty.s[14]++;return this.filter(path)?(cov_x7g3e4yty.b[2][0]++,this.project.getFile(path)):(cov_x7g3e4yty.b[2][1]++,undefined);}findFile(path){cov_x7g3e4yty.f[5]++;cov_x7g3e4yty.s[15]++;if(this.filter(path)){cov_x7g3e4yty.b[3][0]++;cov_x7g3e4yty.s[16]++;return this.project.findFile(path);}else{cov_x7g3e4yty.b[3][1]++;}cov_x7g3e4yty.s[17]++;throw new Error(`No file at ${path}`);}/**
     * This method is used by most of the others, such as totalFileCount
     * @param {string[]} globPatterns
     * @param {{}} opts
     * @return {FileStream}
     */streamFilesRaw(globPatterns,opts){cov_x7g3e4yty.f[6]++;const filter=(cov_x7g3e4yty.s[18]++,this.filter);const onlyIncludedFilters=(cov_x7g3e4yty.s[19]++,new stream.Transform({objectMode:true}));cov_x7g3e4yty.s[20]++;onlyIncludedFilters._transform=function(f,encoding,done){cov_x7g3e4yty.f[7]++;cov_x7g3e4yty.s[21]++;if(filter(f.path)){cov_x7g3e4yty.b[4][0]++;cov_x7g3e4yty.s[22]++;this.push(f);}else{cov_x7g3e4yty.b[4][1]++;}cov_x7g3e4yty.s[23]++;done();};cov_x7g3e4yty.s[24]++;return this.project.streamFilesRaw(globPatterns,opts).pipe(onlyIncludedFilters);}}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL3V0aWwvcHJvamVjdC9maWx0ZXJlZFZpZXcudHMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9yb2Rqb2huc29uL3Nmb3J6YW5kby1kZXYvaWRlYS1wcm9qZWN0cy9teS1mbG93L3NyYy91dGlsL3Byb2plY3QvZmlsdGVyZWRWaWV3LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7Ozs7R0FjRzs7QUFNSCxpQ0FBaUM7QUFFakM7Ozs7OztHQU1HO0FBQ0gsc0JBQTZCLENBQVUsRUFBRSxNQUFpQztJQUN0RSx3REFBd0Q7SUFDeEQsTUFBTSxPQUFPLEdBQUc7UUFDWixHQUFHLEVBQUUsQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFLEVBQUU7WUFDbEIsTUFBTSxTQUFTLEdBQUcsSUFBSSxlQUFlLENBQUMsTUFBeUIsRUFBRSxNQUFNLENBQUMsQ0FBQztZQUN6RSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEVBQUU7Z0JBQ3ZCLE1BQU0sSUFBSSxLQUFLLENBQUMsOEJBQThCLEdBQUcsSUFBSSxDQUFDLENBQUM7YUFDMUQ7WUFDRCxNQUFNLFVBQVUsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDaEMsTUFBTSxlQUFlLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3hDLE9BQU8sVUFBUyxHQUFHLElBQUk7Z0JBQ25CLE9BQU8sQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDO29CQUN0QixlQUFlLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO29CQUN4QywyQ0FBMkM7b0JBQzNDLFVBQVUsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ3JDLENBQUMsQ0FBQztRQUNOLENBQUM7S0FDSixDQUFDO0lBQ0YsT0FBTyxJQUFJLEtBQUssQ0FBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDakMsQ0FBQztBQW5CRCxvQ0FtQkM7QUFFRDs7O0dBR0c7QUFDSDtJQUVJLFlBQTZCLE9BQWdCLEVBQ2YsTUFBaUM7UUFEbEMsWUFBTyxHQUFQLE9BQU8sQ0FBUztRQUNmLFdBQU0sR0FBTixNQUFNLENBQTJCO0lBQy9ELENBQUM7SUFFTSxPQUFPLENBQUMsSUFBWTtRQUN2QixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUN0QixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQzVCLFNBQVMsQ0FBQztJQUNsQixDQUFDO0lBRU0sUUFBUSxDQUFDLElBQVk7UUFDeEIsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ25CLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDdEM7UUFDRCxNQUFNLElBQUksS0FBSyxDQUFDLGNBQWMsSUFBSSxFQUFFLENBQUMsQ0FBQztJQUMxQyxDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSSxjQUFjLENBQUMsWUFBc0IsRUFBRSxJQUFRO1FBQ2xELE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDM0IsTUFBTSxtQkFBbUIsR0FBRyxJQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsRUFBQyxVQUFVLEVBQUUsSUFBSSxFQUFDLENBQUMsQ0FBQztRQUNyRSxtQkFBbUIsQ0FBQyxVQUFVLEdBQUcsVUFBUyxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUk7WUFDdkQsSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUNoQixJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ2hCO1lBQ0QsSUFBSSxFQUFFLENBQUM7UUFDWCxDQUFDLENBQUM7UUFDRixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUM7YUFDakQsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUM7SUFDbkMsQ0FBQztDQUVKIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCDCqSAyMDE4IEF0b21pc3QsIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgRmlsZVN0cmVhbSwgUHJvamVjdCB9IGZyb20gXCJAYXRvbWlzdC9hdXRvbWF0aW9uLWNsaWVudC9wcm9qZWN0L1Byb2plY3RcIjtcblxuaW1wb3J0IHsgRmlsZSB9IGZyb20gXCJAYXRvbWlzdC9hdXRvbWF0aW9uLWNsaWVudC9wcm9qZWN0L0ZpbGVcIjtcbmltcG9ydCB7IEFic3RyYWN0UHJvamVjdCB9IGZyb20gXCJAYXRvbWlzdC9hdXRvbWF0aW9uLWNsaWVudC9wcm9qZWN0L3N1cHBvcnQvQWJzdHJhY3RQcm9qZWN0XCI7XG5pbXBvcnQgKiBhcyBzdHJlYW0gZnJvbSBcInN0cmVhbVwiO1xuXG4vKipcbiAqIENyZWF0ZSBhIGZpbHRlcmVkIHZpZXcgb2YgdGhlIGdpdmVuIHByb2plY3QuXG4gKiBDaGFuZ2VzIHRvIHRoZSBmaWx0ZXJlZCB2aWV3IHdpbGwgYWZmZWN0IHRoZSBzb3VyY2UgcHJvamVjdC5cbiAqIEBwYXJhbSB7TG9jYWxQcm9qZWN0fSBwXG4gKiBAcGFyYW0gZmlsdGVyIGZ1bmN0aW9uIHRvIGZpbHRlciBmaWxlIHBhdGhzXG4gKiBAcmV0dXJuIHtQcm9taXNlPExvY2FsUHJvamVjdD59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmaWx0ZXJlZFZpZXcocDogUHJvamVjdCwgZmlsdGVyOiAocGF0aDogc3RyaW5nKSA9PiBib29sZWFuKTogUHJvamVjdCB7XG4gICAgLy8gVXNlIGFuIEVTNiBwcm94eSB0byBicmluZyBiYWNrIG1lbW9yaWVzIG9mIFNwcmluZyBBT1BcbiAgICBjb25zdCBoYW5kbGVyID0ge1xuICAgICAgICBnZXQ6ICh0YXJnZXQsIHByb3ApID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGRlY29yYXRvciA9IG5ldyBGaWx0ZXJlZFByb2plY3QodGFyZ2V0IGFzIEFic3RyYWN0UHJvamVjdCwgZmlsdGVyKTtcbiAgICAgICAgICAgIGlmIChwcm9wLmVuZHNXaXRoKFwiU3luY1wiKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkRvbid0IHVzZSBzeW5jIG1ldGhvZHM6IGhhZCBcIiArIHByb3ApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3Qgb3JpZ01ldGhvZCA9IHRhcmdldFtwcm9wXTtcbiAgICAgICAgICAgIGNvbnN0IGRlY29yYXRlZE1ldGhvZCA9IGRlY29yYXRvcltwcm9wXTtcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiguLi5hcmdzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICEhZGVjb3JhdGVkTWV0aG9kID9cbiAgICAgICAgICAgICAgICAgICAgZGVjb3JhdGVkTWV0aG9kLmFwcGx5KGRlY29yYXRvciwgYXJncykgOlxuICAgICAgICAgICAgICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8taW52YWxpZC10aGlzXG4gICAgICAgICAgICAgICAgICAgIG9yaWdNZXRob2QuYXBwbHkodGhpcywgYXJncyk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgIH07XG4gICAgcmV0dXJuIG5ldyBQcm94eShwLCBoYW5kbGVyKTtcbn1cblxuLyoqXG4gKiBUaGlzIHJlbGllcyBvbiB0aGUgaW1wbGVtZW50YXRpb24gb2YgQWJzdHJhY3RQcm9qZWN0LFxuICogd2hlcmUgb3ZlcnJpZGluZyBzdHJlYW1GaWxlc1JhdyBkb2VzIG1vdmUgb2Ygd2hhdCB3ZSBuZWVkXG4gKi9cbmNsYXNzIEZpbHRlcmVkUHJvamVjdCBpbXBsZW1lbnRzIFBhcnRpYWw8UHJvamVjdD4ge1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBwcm9qZWN0OiBQcm9qZWN0LFxuICAgICAgICAgICAgICAgIHByaXZhdGUgcmVhZG9ubHkgIGZpbHRlcjogKHBhdGg6IHN0cmluZykgPT4gYm9vbGVhbikge1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRGaWxlKHBhdGg6IHN0cmluZyk6IFByb21pc2U8RmlsZSB8IHVuZGVmaW5lZD4ge1xuICAgICAgICByZXR1cm4gdGhpcy5maWx0ZXIocGF0aCkgP1xuICAgICAgICAgICAgdGhpcy5wcm9qZWN0LmdldEZpbGUocGF0aCkgOlxuICAgICAgICAgICAgdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIHB1YmxpYyBmaW5kRmlsZShwYXRoOiBzdHJpbmcpOiBQcm9taXNlPEZpbGU+IHtcbiAgICAgICAgaWYgKHRoaXMuZmlsdGVyKHBhdGgpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5wcm9qZWN0LmZpbmRGaWxlKHBhdGgpO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgTm8gZmlsZSBhdCAke3BhdGh9YCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhpcyBtZXRob2QgaXMgdXNlZCBieSBtb3N0IG9mIHRoZSBvdGhlcnMsIHN1Y2ggYXMgdG90YWxGaWxlQ291bnRcbiAgICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBnbG9iUGF0dGVybnNcbiAgICAgKiBAcGFyYW0ge3t9fSBvcHRzXG4gICAgICogQHJldHVybiB7RmlsZVN0cmVhbX1cbiAgICAgKi9cbiAgICBwdWJsaWMgc3RyZWFtRmlsZXNSYXcoZ2xvYlBhdHRlcm5zOiBzdHJpbmdbXSwgb3B0czoge30pOiBGaWxlU3RyZWFtIHtcbiAgICAgICAgY29uc3QgZmlsdGVyID0gdGhpcy5maWx0ZXI7XG4gICAgICAgIGNvbnN0IG9ubHlJbmNsdWRlZEZpbHRlcnMgPSBuZXcgc3RyZWFtLlRyYW5zZm9ybSh7b2JqZWN0TW9kZTogdHJ1ZX0pO1xuICAgICAgICBvbmx5SW5jbHVkZWRGaWx0ZXJzLl90cmFuc2Zvcm0gPSBmdW5jdGlvbihmLCBlbmNvZGluZywgZG9uZSkge1xuICAgICAgICAgICAgaWYgKGZpbHRlcihmLnBhdGgpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wdXNoKGYpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9qZWN0LnN0cmVhbUZpbGVzUmF3KGdsb2JQYXR0ZXJucywgb3B0cylcbiAgICAgICAgICAgIC5waXBlKG9ubHlJbmNsdWRlZEZpbHRlcnMpO1xuICAgIH1cblxufVxuIl19