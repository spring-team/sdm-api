{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/deploy/pcf/EnvironmentCloudFoundryTarget.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/deploy/pcf/EnvironmentCloudFoundryTarget.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH,kEAAoD;AACpD,4EAA8E;AAC9E,6DAA4E;AAE5E;;;GAGG;AACH;IAUI;;;OAGG;IACH,YAA6B,eAAyC;QAAzC,oBAAe,GAAf,eAAe,CAA0B;QAZ/D,QAAG,GAAG,kCAAkB,CAAsB,kBAAkB,CAAC,CAAC,GAAG,IAAI,uCAAkB,CAAC,GAAG,CAAC;QAEhG,aAAQ,GAAG,kCAAkB,CAAsB,kBAAkB,CAAC,CAAC,IAAI,CAAC;QAE5E,aAAQ,GAAG,kCAAkB,CAAsB,kBAAkB,CAAC,CAAC,QAAQ,CAAC;QAEhF,QAAG,GAAG,kCAAkB,CAAsB,kBAAkB,CAAC,CAAC,GAAG,CAAC;IAO7E,CAAC;IAED,IAAI,KAAK;QACL,MAAM,KAAK,GAAG,kCAAkB,CAAsB,kBAAkB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACvG,0BAAM,CAAC,IAAI,CAAC,wCAAwC,EAAE,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;QACnF,IAAI,CAAC,KAAK,EAAE;YACR,MAAM,IAAI,KAAK,CAAC,kDACZ,IAAI,CAAC,eAAe,2CAA2C,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;SAC9F;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,IAAI,IAAI;QACJ,OAAO,QAAQ,IAAI,CAAC,eAAe,EAAE,CAAC;IAC1C,CAAC;IAED,IAAI,WAAW;QACX,OAAO,OAAO,IAAI,CAAC,GAAG,QAAQ,IAAI,CAAC,GAAG,UAAU,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,QAAQ,EAAE,CAAC;IACvF,CAAC;CACJ;AAlCD,sEAkCC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { logger } from \"@atomist/automation-client\";\nimport { configurationValue } from \"@atomist/automation-client/configuration\";\nimport { CloudFoundryInfo, PivotalWebServices } from \"./CloudFoundryTarget\";\n\n/**\n * Configure cloud foundry from environment variables.\n * See README for definition.\n */\nexport class EnvironmentCloudFoundryTarget implements CloudFoundryInfo {\n\n    public api = configurationValue<CloudfoundryOptions>(\"sdm.cloudfoundry\").api || PivotalWebServices.api;\n\n    public username = configurationValue<CloudfoundryOptions>(\"sdm.cloudfoundry\").user;\n\n    public password = configurationValue<CloudfoundryOptions>(\"sdm.cloudfoundry\").password;\n\n    public org = configurationValue<CloudfoundryOptions>(\"sdm.cloudfoundry\").org;\n\n    /**\n     * Logical name for the space\n     * @param {string} environmentName: Name of the environment, such as \"staging\" or \"production\"\n     */\n    constructor(private readonly environmentName: \"staging\" | \"production\") {\n    }\n\n    get space() {\n        const space = configurationValue<CloudfoundryOptions>(`sdm.cloudfoundry`).spaces[this.environmentName];\n        logger.info(\"PCF space for environment [%s] is [%s]\", this.environmentName, space);\n        if (!space) {\n            throw new Error(`Please set environment key cloudfoundry.spaces.${\n                this.environmentName} to deploy to Cloud Foundry environment ${this.environmentName}`);\n        }\n        return space;\n    }\n\n    get name() {\n        return `PCF: ${this.environmentName}`;\n    }\n\n    get description() {\n        return `PCF ${this.api};org=${this.org};space=${this.space};user=${this.username}`;\n    }\n}\n\nexport interface CloudfoundryOptions {\n\n    api: string;\n    user: string;\n    password: string;\n    org: string;\n    spaces: {\n        [key: string]: string;\n    };\n\n}\n"]}