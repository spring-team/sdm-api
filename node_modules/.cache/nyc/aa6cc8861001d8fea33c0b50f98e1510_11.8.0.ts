"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_2lqngif8mq=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/common/log/RolarProgressLogTest.ts",hash="d011c16690f6407888f9fb397d3bebfeb18bf35e",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/common/log/RolarProgressLogTest.ts",statementMap:{"0":{start:{line:17,column:16},end:{line:24,column:1}},"1":{start:{line:18,column:4},end:{line:23,column:7}},"2":{start:{line:19,column:36},end:{line:19,column:97}},"3":{start:{line:19,column:42},end:{line:19,column:70}},"4":{start:{line:19,column:85},end:{line:19,column:95}},"5":{start:{line:20,column:35},end:{line:20,column:100}},"6":{start:{line:20,column:41},end:{line:20,column:73}},"7":{start:{line:20,column:88},end:{line:20,column:98}},"8":{start:{line:21,column:32},end:{line:21,column:149}},"9":{start:{line:21,column:97},end:{line:21,column:119}},"10":{start:{line:22,column:8},end:{line:22,column:78}},"11":{start:{line:25,column:0},end:{line:25,column:62}},"12":{start:{line:26,column:16},end:{line:26,column:32}},"13":{start:{line:27,column:29},end:{line:27,column:58}},"14":{start:{line:28,column:15},end:{line:28,column:38}},"15":{start:{line:29,column:27},end:{line:29,column:78}},"16":{start:{line:30,column:0},end:{line:203,column:3}},"17":{start:{line:32,column:20},end:{line:32,column:21}},"18":{start:{line:33,column:8},end:{line:35,column:9}},"19":{start:{line:34,column:12},end:{line:34,column:36}},"20":{start:{line:37,column:4},end:{line:43,column:8}},"21":{start:{line:37,column:58},end:{line:43,column:6}},"22":{start:{line:38,column:30},end:{line:38,column:54}},"23":{start:{line:39,column:20},end:{line:39,column:160}},"24":{start:{line:40,column:26},end:{line:40,column:73}},"25":{start:{line:41,column:8},end:{line:41,column:68}},"26":{start:{line:42,column:8},end:{line:42,column:52}},"27":{start:{line:44,column:4},end:{line:50,column:8}},"28":{start:{line:44,column:62},end:{line:50,column:6}},"29":{start:{line:45,column:30},end:{line:45,column:54}},"30":{start:{line:46,column:20},end:{line:46,column:160}},"31":{start:{line:47,column:26},end:{line:47,column:73}},"32":{start:{line:48,column:8},end:{line:48,column:68}},"33":{start:{line:49,column:8},end:{line:49,column:53}},"34":{start:{line:51,column:4},end:{line:67,column:8}},"35":{start:{line:51,column:44},end:{line:67,column:6}},"36":{start:{line:52,column:20},end:{line:52,column:129}},"37":{start:{line:53,column:8},end:{line:53,column:49}},"38":{start:{line:54,column:8},end:{line:54,column:58}},"39":{start:{line:55,column:8},end:{line:66,column:11}},"40":{start:{line:68,column:4},end:{line:94,column:8}},"41":{start:{line:68,column:34},end:{line:94,column:6}},"42":{start:{line:69,column:30},end:{line:69,column:54}},"43":{start:{line:70,column:20},end:{line:70,column:160}},"44":{start:{line:71,column:26},end:{line:71,column:73}},"45":{start:{line:72,column:8},end:{line:89,column:11}},"46":{start:{line:74,column:36},end:{line:85,column:13}},"47":{start:{line:86,column:34},end:{line:86,column:65}},"48":{start:{line:87,column:12},end:{line:87,column:61}},"49":{start:{line:88,column:12},end:{line:88,column:25}},"50":{start:{line:90,column:8},end:{line:90,column:51}},"51":{start:{line:91,column:8},end:{line:91,column:62}},"52":{start:{line:92,column:8},end:{line:92,column:26}},"53":{start:{line:93,column:8},end:{line:93,column:44}},"54":{start:{line:95,column:4},end:{line:116,column:8}},"55":{start:{line:95,column:53},end:{line:116,column:6}},"56":{start:{line:96,column:30},end:{line:96,column:54}},"57":{start:{line:97,column:20},end:{line:97,column:160}},"58":{start:{line:98,column:26},end:{line:98,column:73}},"59":{start:{line:99,column:8},end:{line:100,column:28}},"60":{start:{line:101,column:8},end:{line:101,column:54}},"61":{start:{line:102,column:8},end:{line:102,column:42}},"62":{start:{line:103,column:8},end:{line:103,column:26}},"63":{start:{line:104,column:8},end:{line:115,column:11}},"64":{start:{line:117,column:4},end:{line:137,column:8}},"65":{start:{line:117,column:34},end:{line:137,column:6}},"66":{start:{line:118,column:30},end:{line:118,column:54}},"67":{start:{line:119,column:20},end:{line:119,column:160}},"68":{start:{line:120,column:26},end:{line:120,column:73}},"69":{start:{line:121,column:8},end:{line:133,column:11}},"70":{start:{line:123,column:36},end:{line:129,column:13}},"71":{start:{line:130,column:34},end:{line:130,column:65}},"72":{start:{line:131,column:12},end:{line:131,column:61}},"73":{start:{line:132,column:12},end:{line:132,column:25}},"74":{start:{line:134,column:8},end:{line:134,column:82}},"75":{start:{line:135,column:8},end:{line:135,column:26}},"76":{start:{line:136,column:8},end:{line:136,column:44}},"77":{start:{line:138,column:4},end:{line:164,column:8}},"78":{start:{line:138,column:48},end:{line:164,column:6}},"79":{start:{line:139,column:30},end:{line:139,column:54}},"80":{start:{line:140,column:31},end:{line:140,column:168}},"81":{start:{line:141,column:26},end:{line:141,column:73}},"82":{start:{line:142,column:8},end:{line:159,column:11}},"83":{start:{line:144,column:36},end:{line:155,column:13}},"84":{start:{line:156,column:34},end:{line:156,column:65}},"85":{start:{line:157,column:12},end:{line:157,column:61}},"86":{start:{line:158,column:12},end:{line:158,column:25}},"87":{start:{line:160,column:8},end:{line:160,column:70}},"88":{start:{line:161,column:8},end:{line:161,column:56}},"89":{start:{line:162,column:8},end:{line:162,column:95}},"90":{start:{line:163,column:8},end:{line:163,column:55}},"91":{start:{line:165,column:4},end:{line:168,column:8}},"92":{start:{line:165,column:49},end:{line:168,column:6}},"93":{start:{line:166,column:20},end:{line:166,column:135}},"94":{start:{line:167,column:8},end:{line:167,column:62}},"95":{start:{line:169,column:4},end:{line:185,column:8}},"96":{start:{line:169,column:36},end:{line:185,column:6}},"97":{start:{line:170,column:20},end:{line:170,column:130}},"98":{start:{line:171,column:8},end:{line:171,column:49}},"99":{start:{line:172,column:8},end:{line:172,column:58}},"100":{start:{line:173,column:8},end:{line:184,column:11}},"101":{start:{line:186,column:4},end:{line:202,column:8}},"102":{start:{line:186,column:45},end:{line:202,column:6}},"103":{start:{line:187,column:20},end:{line:187,column:105}},"104":{start:{line:188,column:8},end:{line:188,column:49}},"105":{start:{line:189,column:8},end:{line:189,column:58}},"106":{start:{line:190,column:8},end:{line:201,column:11}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:44},end:{line:17,column:45}},loc:{start:{line:17,column:89},end:{line:24,column:1}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:36},end:{line:18,column:37}},loc:{start:{line:18,column:63},end:{line:23,column:5}},line:18},"2":{name:"fulfilled",decl:{start:{line:19,column:17},end:{line:19,column:26}},loc:{start:{line:19,column:34},end:{line:19,column:99}},line:19},"3":{name:"rejected",decl:{start:{line:20,column:17},end:{line:20,column:25}},loc:{start:{line:20,column:33},end:{line:20,column:102}},line:20},"4":{name:"step",decl:{start:{line:21,column:17},end:{line:21,column:21}},loc:{start:{line:21,column:30},end:{line:21,column:151}},line:21},"5":{name:"(anonymous_5)",decl:{start:{line:21,column:76},end:{line:21,column:77}},loc:{start:{line:21,column:95},end:{line:21,column:121}},line:21},"6":{name:"(anonymous_6)",decl:{start:{line:30,column:29},end:{line:30,column:30}},loc:{start:{line:30,column:35},end:{line:203,column:1}},line:30},"7":{name:"fakeTimestampGenerator",decl:{start:{line:31,column:14},end:{line:31,column:36}},loc:{start:{line:31,column:39},end:{line:36,column:5}},line:31},"8":{name:"(anonymous_8)",decl:{start:{line:37,column:52},end:{line:37,column:53}},loc:{start:{line:37,column:58},end:{line:43,column:6}},line:37},"9":{name:"(anonymous_9)",decl:{start:{line:37,column:90},end:{line:37,column:91}},loc:{start:{line:37,column:103},end:{line:43,column:5}},line:37},"10":{name:"(anonymous_10)",decl:{start:{line:44,column:56},end:{line:44,column:57}},loc:{start:{line:44,column:62},end:{line:50,column:6}},line:44},"11":{name:"(anonymous_11)",decl:{start:{line:44,column:94},end:{line:44,column:95}},loc:{start:{line:44,column:107},end:{line:50,column:5}},line:44},"12":{name:"(anonymous_12)",decl:{start:{line:51,column:38},end:{line:51,column:39}},loc:{start:{line:51,column:44},end:{line:67,column:6}},line:51},"13":{name:"(anonymous_13)",decl:{start:{line:51,column:76},end:{line:51,column:77}},loc:{start:{line:51,column:89},end:{line:67,column:5}},line:51},"14":{name:"(anonymous_14)",decl:{start:{line:68,column:28},end:{line:68,column:29}},loc:{start:{line:68,column:34},end:{line:94,column:6}},line:68},"15":{name:"(anonymous_15)",decl:{start:{line:68,column:66},end:{line:68,column:67}},loc:{start:{line:68,column:79},end:{line:94,column:5}},line:68},"16":{name:"(anonymous_16)",decl:{start:{line:73,column:23},end:{line:73,column:24}},loc:{start:{line:73,column:33},end:{line:89,column:9}},line:73},"17":{name:"(anonymous_17)",decl:{start:{line:95,column:47},end:{line:95,column:48}},loc:{start:{line:95,column:53},end:{line:116,column:6}},line:95},"18":{name:"(anonymous_18)",decl:{start:{line:95,column:85},end:{line:95,column:86}},loc:{start:{line:95,column:98},end:{line:116,column:5}},line:95},"19":{name:"(anonymous_19)",decl:{start:{line:117,column:28},end:{line:117,column:29}},loc:{start:{line:117,column:34},end:{line:137,column:6}},line:117},"20":{name:"(anonymous_20)",decl:{start:{line:117,column:66},end:{line:117,column:67}},loc:{start:{line:117,column:79},end:{line:137,column:5}},line:117},"21":{name:"(anonymous_21)",decl:{start:{line:122,column:23},end:{line:122,column:24}},loc:{start:{line:122,column:33},end:{line:133,column:9}},line:122},"22":{name:"(anonymous_22)",decl:{start:{line:138,column:42},end:{line:138,column:43}},loc:{start:{line:138,column:48},end:{line:164,column:6}},line:138},"23":{name:"(anonymous_23)",decl:{start:{line:138,column:80},end:{line:138,column:81}},loc:{start:{line:138,column:93},end:{line:164,column:5}},line:138},"24":{name:"(anonymous_24)",decl:{start:{line:143,column:23},end:{line:143,column:24}},loc:{start:{line:143,column:33},end:{line:159,column:9}},line:143},"25":{name:"(anonymous_25)",decl:{start:{line:165,column:43},end:{line:165,column:44}},loc:{start:{line:165,column:49},end:{line:168,column:6}},line:165},"26":{name:"(anonymous_26)",decl:{start:{line:165,column:81},end:{line:165,column:82}},loc:{start:{line:165,column:94},end:{line:168,column:5}},line:165},"27":{name:"(anonymous_27)",decl:{start:{line:169,column:30},end:{line:169,column:31}},loc:{start:{line:169,column:36},end:{line:185,column:6}},line:169},"28":{name:"(anonymous_28)",decl:{start:{line:169,column:68},end:{line:169,column:69}},loc:{start:{line:169,column:81},end:{line:185,column:5}},line:169},"29":{name:"(anonymous_29)",decl:{start:{line:186,column:39},end:{line:186,column:40}},loc:{start:{line:186,column:45},end:{line:202,column:6}},line:186},"30":{name:"(anonymous_30)",decl:{start:{line:186,column:77},end:{line:186,column:78}},loc:{start:{line:186,column:90},end:{line:202,column:5}},line:186}},branchMap:{"0":{loc:{start:{line:17,column:16},end:{line:24,column:1}},type:"binary-expr",locations:[{start:{line:17,column:17},end:{line:17,column:21}},{start:{line:17,column:25},end:{line:17,column:39}},{start:{line:17,column:44},end:{line:24,column:1}}],line:17},"1":{loc:{start:{line:18,column:16},end:{line:18,column:34}},type:"binary-expr",locations:[{start:{line:18,column:16},end:{line:18,column:17}},{start:{line:18,column:22},end:{line:18,column:33}}],line:18},"2":{loc:{start:{line:21,column:32},end:{line:21,column:148}},type:"cond-expr",locations:[{start:{line:21,column:46},end:{line:21,column:67}},{start:{line:21,column:70},end:{line:21,column:148}}],line:21},"3":{loc:{start:{line:22,column:51},end:{line:22,column:67}},type:"binary-expr",locations:[{start:{line:22,column:51},end:{line:22,column:61}},{start:{line:22,column:65},end:{line:22,column:67}}],line:22}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var __awaiter=(cov_2lqngif8mq.s[0]++,(cov_2lqngif8mq.b[0][0]++,this)&&(cov_2lqngif8mq.b[0][1]++,this.__awaiter)||(cov_2lqngif8mq.b[0][2]++,function(thisArg,_arguments,P,generator){cov_2lqngif8mq.f[0]++;cov_2lqngif8mq.s[1]++;return new((cov_2lqngif8mq.b[1][0]++,P)||(cov_2lqngif8mq.b[1][1]++,P=Promise))(function(resolve,reject){cov_2lqngif8mq.f[1]++;function fulfilled(value){cov_2lqngif8mq.f[2]++;cov_2lqngif8mq.s[2]++;try{cov_2lqngif8mq.s[3]++;step(generator.next(value));}catch(e){cov_2lqngif8mq.s[4]++;reject(e);}}function rejected(value){cov_2lqngif8mq.f[3]++;cov_2lqngif8mq.s[5]++;try{cov_2lqngif8mq.s[6]++;step(generator["throw"](value));}catch(e){cov_2lqngif8mq.s[7]++;reject(e);}}function step(result){cov_2lqngif8mq.f[4]++;cov_2lqngif8mq.s[8]++;result.done?(cov_2lqngif8mq.b[2][0]++,resolve(result.value)):(cov_2lqngif8mq.b[2][1]++,new P(function(resolve){cov_2lqngif8mq.f[5]++;cov_2lqngif8mq.s[9]++;resolve(result.value);}).then(fulfilled,rejected));}cov_2lqngif8mq.s[10]++;step((generator=generator.apply(thisArg,(cov_2lqngif8mq.b[3][0]++,_arguments)||(cov_2lqngif8mq.b[3][1]++,[]))).next());});}));cov_2lqngif8mq.s[11]++;Object.defineProperty(exports,"__esModule",{value:true});const axios_1=(cov_2lqngif8mq.s[12]++,require("axios"));const axios_mock_adapter_1=(cov_2lqngif8mq.s[13]++,require("axios-mock-adapter"));const assert=(cov_2lqngif8mq.s[14]++,require("power-assert"));const RolarProgressLog_1=(cov_2lqngif8mq.s[15]++,require("../../../src/common/log/RolarProgressLog"));cov_2lqngif8mq.s[16]++;describe("RolarProgressLog",()=>{cov_2lqngif8mq.f[6]++;function*fakeTimestampGenerator(){cov_2lqngif8mq.f[7]++;let index=(cov_2lqngif8mq.s[17]++,0);cov_2lqngif8mq.s[18]++;while(true){cov_2lqngif8mq.s[19]++;yield new Date(index++);}}cov_2lqngif8mq.s[20]++;it("should be available if returning http 200",()=>{cov_2lqngif8mq.f[8]++;cov_2lqngif8mq.s[21]++;return __awaiter(this,void 0,void 0,function*(){cov_2lqngif8mq.f[9]++;const axiosInstance=(cov_2lqngif8mq.s[22]++,axios_1.default.create());const log=(cov_2lqngif8mq.s[23]++,new RolarProgressLog_1.RolarProgressLog("http://fakehost",["test"],10000,"info",fakeTimestampGenerator(),{retries:0},axiosInstance));const mockAxios=(cov_2lqngif8mq.s[24]++,new axios_mock_adapter_1.default(axiosInstance));cov_2lqngif8mq.s[25]++;mockAxios.onHead("http://fakehost/api/logs").replyOnce(200);cov_2lqngif8mq.s[26]++;assert.equal((yield log.isAvailable()),true);});});cov_2lqngif8mq.s[27]++;it("should not be available if returning http 404",()=>{cov_2lqngif8mq.f[10]++;cov_2lqngif8mq.s[28]++;return __awaiter(this,void 0,void 0,function*(){cov_2lqngif8mq.f[11]++;const axiosInstance=(cov_2lqngif8mq.s[29]++,axios_1.default.create());const log=(cov_2lqngif8mq.s[30]++,new RolarProgressLog_1.RolarProgressLog("http://fakehost",["test"],10000,"info",fakeTimestampGenerator(),{retries:0},axiosInstance));const mockAxios=(cov_2lqngif8mq.s[31]++,new axios_mock_adapter_1.default(axiosInstance));cov_2lqngif8mq.s[32]++;mockAxios.onHead("http://fakehost/api/logs").replyOnce(404);cov_2lqngif8mq.s[33]++;assert.equal((yield log.isAvailable()),false);});});cov_2lqngif8mq.s[34]++;it("should write logs to memory",()=>{cov_2lqngif8mq.f[12]++;cov_2lqngif8mq.s[35]++;return __awaiter(this,void 0,void 0,function*(){cov_2lqngif8mq.f[13]++;const log=(cov_2lqngif8mq.s[36]++,new RolarProgressLog_1.RolarProgressLog("http://fakehost",["test"],10000,"info",fakeTimestampGenerator()));cov_2lqngif8mq.s[37]++;log.write("I'm a lumberjack and I'm OK");cov_2lqngif8mq.s[38]++;log.write("I sleep all night and I work all day");cov_2lqngif8mq.s[39]++;assert.deepEqual(log.localLogs,[{level:"info",message:"I'm a lumberjack and I'm OK",timestamp:"01/01/1970 00:00:00.000"},{level:"info",message:"I sleep all night and I work all day",timestamp:"01/01/1970 00:00:00.001"}]);});});cov_2lqngif8mq.s[40]++;it("should flush logs",()=>{cov_2lqngif8mq.f[14]++;cov_2lqngif8mq.s[41]++;return __awaiter(this,void 0,void 0,function*(){cov_2lqngif8mq.f[15]++;const axiosInstance=(cov_2lqngif8mq.s[42]++,axios_1.default.create());const log=(cov_2lqngif8mq.s[43]++,new RolarProgressLog_1.RolarProgressLog("http://fakehost",["test"],10000,"info",fakeTimestampGenerator(),{retries:0},axiosInstance));const mockAxios=(cov_2lqngif8mq.s[44]++,new axios_mock_adapter_1.default(axiosInstance));cov_2lqngif8mq.s[45]++;mockAxios.onPost("http://fakehost/api/logs/test").replyOnce(config=>{cov_2lqngif8mq.f[16]++;const expectedRequest=(cov_2lqngif8mq.s[46]++,[{level:"info",message:"He's a lumberjack and he's OK",timestamp:"01/01/1970 00:00:00.000"},{level:"info",message:"He sleeps all night and he works all day",timestamp:"01/01/1970 00:00:00.001"}]);const actualRequest=(cov_2lqngif8mq.s[47]++,JSON.parse(config.data).content);cov_2lqngif8mq.s[48]++;assert.deepEqual(actualRequest,expectedRequest);cov_2lqngif8mq.s[49]++;return[200];});cov_2lqngif8mq.s[50]++;log.write("He's a lumberjack and he's OK");cov_2lqngif8mq.s[51]++;log.write("He sleeps all night and he works all day");cov_2lqngif8mq.s[52]++;yield log.flush();cov_2lqngif8mq.s[53]++;assert.deepEqual(log.localLogs,[]);});});cov_2lqngif8mq.s[54]++;it("should not clear logs if flush fails",()=>{cov_2lqngif8mq.f[17]++;cov_2lqngif8mq.s[55]++;return __awaiter(this,void 0,void 0,function*(){cov_2lqngif8mq.f[18]++;const axiosInstance=(cov_2lqngif8mq.s[56]++,axios_1.default.create());const log=(cov_2lqngif8mq.s[57]++,new RolarProgressLog_1.RolarProgressLog("http://fakehost",["test"],10000,"info",fakeTimestampGenerator(),{retries:0},axiosInstance));const mockAxios=(cov_2lqngif8mq.s[58]++,new axios_mock_adapter_1.default(axiosInstance));cov_2lqngif8mq.s[59]++;mockAxios.onPost("http://fakehost/api/logs/test").replyOnce(404);cov_2lqngif8mq.s[60]++;log.write("I cut down trees, I eat my lunch");cov_2lqngif8mq.s[61]++;log.write("I go to the lavatory");cov_2lqngif8mq.s[62]++;yield log.flush();cov_2lqngif8mq.s[63]++;assert.deepEqual(log.localLogs,[{level:"info",message:"I cut down trees, I eat my lunch",timestamp:"01/01/1970 00:00:00.000"},{level:"info",message:"I go to the lavatory",timestamp:"01/01/1970 00:00:00.001"}]);});});cov_2lqngif8mq.s[64]++;it("should close logs",()=>{cov_2lqngif8mq.f[19]++;cov_2lqngif8mq.s[65]++;return __awaiter(this,void 0,void 0,function*(){cov_2lqngif8mq.f[20]++;const axiosInstance=(cov_2lqngif8mq.s[66]++,axios_1.default.create());const log=(cov_2lqngif8mq.s[67]++,new RolarProgressLog_1.RolarProgressLog("http://fakehost",["test"],10000,"info",fakeTimestampGenerator(),{retries:0},axiosInstance));const mockAxios=(cov_2lqngif8mq.s[68]++,new axios_mock_adapter_1.default(axiosInstance));cov_2lqngif8mq.s[69]++;mockAxios.onPost("http://fakehost/api/logs/test?closed=true").replyOnce(config=>{cov_2lqngif8mq.f[21]++;const expectedRequest=(cov_2lqngif8mq.s[70]++,[{level:"info",message:"On Wednesdays I go shopping and have buttered scones for tea",timestamp:"01/01/1970 00:00:00.000"}]);const actualRequest=(cov_2lqngif8mq.s[71]++,JSON.parse(config.data).content);cov_2lqngif8mq.s[72]++;assert.deepEqual(actualRequest,expectedRequest);cov_2lqngif8mq.s[73]++;return[200];});cov_2lqngif8mq.s[74]++;log.write("On Wednesdays I go shopping and have buttered scones for tea");cov_2lqngif8mq.s[75]++;yield log.close();cov_2lqngif8mq.s[76]++;assert.deepEqual(log.localLogs,[]);});});cov_2lqngif8mq.s[77]++;it("should flush logs automatically",()=>{cov_2lqngif8mq.f[22]++;cov_2lqngif8mq.s[78]++;return __awaiter(this,void 0,void 0,function*(){cov_2lqngif8mq.f[23]++;const axiosInstance=(cov_2lqngif8mq.s[79]++,axios_1.default.create());const smallBufferLog=(cov_2lqngif8mq.s[80]++,new RolarProgressLog_1.RolarProgressLog("http://fakehost",["test"],50,"info",fakeTimestampGenerator(),{retries:0},axiosInstance));const mockAxios=(cov_2lqngif8mq.s[81]++,new axios_mock_adapter_1.default(axiosInstance));cov_2lqngif8mq.s[82]++;mockAxios.onPost("http://fakehost/api/logs/test").replyOnce(config=>{cov_2lqngif8mq.f[24]++;const expectedRequest=(cov_2lqngif8mq.s[83]++,[{level:"info",message:"He cuts down trees, he eats his lunch",timestamp:"01/01/1970 00:00:00.000"},{level:"info",message:"He goes to the lavatory",timestamp:"01/01/1970 00:00:00.001"}]);const actualRequest=(cov_2lqngif8mq.s[84]++,JSON.parse(config.data).content);cov_2lqngif8mq.s[85]++;assert.deepEqual(actualRequest,expectedRequest);cov_2lqngif8mq.s[86]++;return[200];});cov_2lqngif8mq.s[87]++;smallBufferLog.write("He cuts down trees, he eats his lunch");cov_2lqngif8mq.s[88]++;smallBufferLog.write("He goes to the lavatory");cov_2lqngif8mq.s[89]++;smallBufferLog.write("On Wednesdays he goes shopping and has buttered scones for tea");cov_2lqngif8mq.s[90]++;assert.deepEqual(smallBufferLog.localLogs,[]);});});cov_2lqngif8mq.s[91]++;it("should provide a link to the log",()=>{cov_2lqngif8mq.f[25]++;cov_2lqngif8mq.s[92]++;return __awaiter(this,void 0,void 0,function*(){cov_2lqngif8mq.f[26]++;const log=(cov_2lqngif8mq.s[93]++,new RolarProgressLog_1.RolarProgressLog("http://fakehost",["test","it"],10000,"info",fakeTimestampGenerator()));cov_2lqngif8mq.s[94]++;assert.equal(log.url,"http://fakehost/logs/test/it");});});cov_2lqngif8mq.s[95]++;it("should log as debug",()=>{cov_2lqngif8mq.f[27]++;cov_2lqngif8mq.s[96]++;return __awaiter(this,void 0,void 0,function*(){cov_2lqngif8mq.f[28]++;const log=(cov_2lqngif8mq.s[97]++,new RolarProgressLog_1.RolarProgressLog("http://fakehost",["test"],10000,"debug",fakeTimestampGenerator()));cov_2lqngif8mq.s[98]++;log.write("I'm a lumberjack and I'm OK");cov_2lqngif8mq.s[99]++;log.write("I sleep all night and I work all day");cov_2lqngif8mq.s[100]++;assert.deepEqual(log.localLogs,[{level:"debug",message:"I'm a lumberjack and I'm OK",timestamp:"01/01/1970 00:00:00.000"},{level:"debug",message:"I sleep all night and I work all day",timestamp:"01/01/1970 00:00:00.001"}]);});});cov_2lqngif8mq.s[101]++;it("should log without timestamp",()=>{cov_2lqngif8mq.f[29]++;cov_2lqngif8mq.s[102]++;return __awaiter(this,void 0,void 0,function*(){cov_2lqngif8mq.f[30]++;const log=(cov_2lqngif8mq.s[103]++,new RolarProgressLog_1.RolarProgressLog("http://fakehost",["test"],10000,"",null));cov_2lqngif8mq.s[104]++;log.write("I'm a lumberjack and I'm OK");cov_2lqngif8mq.s[105]++;log.write("I sleep all night and I work all day");cov_2lqngif8mq.s[106]++;assert.deepEqual(log.localLogs,[{level:"",message:"I'm a lumberjack and I'm OK",timestamp:""},{level:"",message:"I sleep all night and I work all day",timestamp:""}]);});});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,