"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_7h93ey0ax=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/command/editor/dry-run/dryRunEditor.ts",hash="7b1da51a185ba7ec9c1f5a8aee8899546f4ce557",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/command/editor/dry-run/dryRunEditor.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:28},end:{line:18,column:65}},"2":{start:{line:19,column:35},end:{line:19,column:115}},"3":{start:{line:20,column:40},end:{line:20,column:132}},"4":{start:{line:21,column:26},end:{line:21,column:95}},"5":{start:{line:22,column:16},end:{line:22,column:44}},"6":{start:{line:23,column:34},end:{line:23,column:82}},"7":{start:{line:24,column:26},end:{line:24,column:58}},"8":{start:{line:25,column:24},end:{line:25,column:51}},"9":{start:{line:26,column:25},end:{line:26,column:53}},"10":{start:{line:27,column:30},end:{line:27,column:62}},"11":{start:{line:28,column:0},end:{line:28,column:42}},"12":{start:{line:43,column:4},end:{line:45,column:5}},"13":{start:{line:44,column:8},end:{line:44,column:64}},"14":{start:{line:46,column:25},end:{line:56,column:22}},"15":{start:{line:46,column:185},end:{line:46,column:293}},"16":{start:{line:47,column:12},end:{line:47,column:111}},"17":{start:{line:48,column:32},end:{line:48,column:93}},"18":{start:{line:49,column:27},end:{line:54,column:13}},"19":{start:{line:55,column:12},end:{line:55,column:254}},"20":{start:{line:57,column:4},end:{line:57,column:185}},"21":{start:{line:59,column:0},end:{line:59,column:36}},"22":{start:{line:61,column:4},end:{line:61,column:49}}},fnMap:{"0":{name:"dryRunEditor",decl:{start:{line:42,column:9},end:{line:42,column:21}},loc:{start:{line:42,column:175},end:{line:58,column:1}},line:42},"1":{name:"(anonymous_1)",decl:{start:{line:46,column:180},end:{line:46,column:181}},loc:{start:{line:46,column:185},end:{line:46,column:293}},line:46},"2":{name:"(anonymous_2)",decl:{start:{line:46,column:306},end:{line:46,column:307}},loc:{start:{line:46,column:318},end:{line:56,column:9}},line:46},"3":{name:"toAtomistCommitMessage",decl:{start:{line:60,column:9},end:{line:60,column:31}},loc:{start:{line:60,column:51},end:{line:62,column:1}},line:60}},branchMap:{"0":{loc:{start:{line:42,column:27},end:{line:42,column:74}},type:"default-arg",locations:[{start:{line:42,column:41},end:{line:42,column:74}}],line:42},"1":{loc:{start:{line:42,column:82},end:{line:42,column:94}},type:"default-arg",locations:[{start:{line:42,column:92},end:{line:42,column:94}}],line:42},"2":{loc:{start:{line:42,column:96},end:{line:42,column:173}},type:"default-arg",locations:[{start:{line:42,column:106},end:{line:42,column:173}}],line:42},"3":{loc:{start:{line:43,column:4},end:{line:45,column:5}},type:"if",locations:[{start:{line:43,column:4},end:{line:45,column:5}},{start:{line:43,column:4},end:{line:45,column:5}}],line:43},"4":{loc:{start:{line:46,column:54},end:{line:46,column:81}},type:"binary-expr",locations:[{start:{line:46,column:54},end:{line:46,column:73}},{start:{line:46,column:77},end:{line:46,column:81}}],line:46},"5":{loc:{start:{line:48,column:32},end:{line:48,column:93}},type:"binary-expr",locations:[{start:{line:48,column:32},end:{line:48,column:62}},{start:{line:48,column:66},end:{line:48,column:85}},{start:{line:48,column:89},end:{line:48,column:93}}],line:48},"6":{loc:{start:{line:55,column:65},end:{line:55,column:121}},type:"binary-expr",locations:[{start:{line:55,column:65},end:{line:55,column:89}},{start:{line:55,column:93},end:{line:55,column:121}}],line:55},"7":{loc:{start:{line:55,column:146},end:{line:55,column:202}},type:"binary-expr",locations:[{start:{line:55,column:146},end:{line:55,column:173}},{start:{line:55,column:177},end:{line:55,column:202}}],line:55}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0],"1":[0],"2":[0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_7h93ey0ax.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const automation_client_1=(cov_7h93ey0ax.s[1]++,require("@atomist/automation-client"));const allReposInTeamRepoFinder_1=(cov_7h93ey0ax.s[2]++,require("@atomist/automation-client/operations/common/allReposInTeamRepoFinder"));const GitHubFallbackReposParameters_1=(cov_7h93ey0ax.s[3]++,require("@atomist/automation-client/operations/common/params/GitHubFallbackReposParameters"));const editorToCommand_1=(cov_7h93ey0ax.s[4]++,require("@atomist/automation-client/operations/edit/editorToCommand"));const index_1=(cov_7h93ey0ax.s[5]++,require("../../../../index"));const projectLoaderRepoLoader_1=(cov_7h93ey0ax.s[6]++,require("../../../repo/projectLoaderRepoLoader"));const EmptyParameters_1=(cov_7h93ey0ax.s[7]++,require("../../EmptyParameters"));const editorCommand_1=(cov_7h93ey0ax.s[8]++,require("../editorCommand"));const editorWrappers_1=(cov_7h93ey0ax.s[9]++,require("../editorWrappers"));const NewBranchWithStatus_1=(cov_7h93ey0ax.s[10]++,require("./NewBranchWithStatus"));cov_7h93ey0ax.s[11]++;exports.DryRunContext="atomist-dry-run";/**
 * Wrap an editor in a command handler that sets a dry run status.
 * Typically used to wait for build success or failure, resulting in issue or PR.
 * Allows use of custom parameters as in editorCommand
 * Targeting (targets property) is handled automatically if the parameters
 * do not implement TargetsParams
 * @param edd function to make a fresh editor instance from the params
 * @param name editor name
 * @param paramsMaker parameters factory, typically the name of a class with a no arg constructor
 * @param details optional details to customize behavior
 * @param targets targets parameters. Allows targeting to other source control systems
 * Add intent "try edit <name>"
 */function dryRunEditor(edd,paramsMaker=(cov_7h93ey0ax.b[0][0]++,EmptyParameters_1.EmptyParameters),name,details=(cov_7h93ey0ax.b[1][0]++,{}),targets=(cov_7h93ey0ax.b[2][0]++,new GitHubFallbackReposParameters_1.GitHubFallbackReposParameters())){cov_7h93ey0ax.f[0]++;cov_7h93ey0ax.s[12]++;if(!!details.editMode){cov_7h93ey0ax.b[3][0]++;cov_7h93ey0ax.s[13]++;throw new Error("Cannot set editMode for dryRunEditor");}else{cov_7h93ey0ax.b[3][1]++;}const detailsToUse=(cov_7h93ey0ax.s[14]++,Object.assign({description:(cov_7h93ey0ax.b[4][0]++,details.description)||(cov_7h93ey0ax.b[4][1]++,name),intent:`try edit ${name}`,repoFinder:allReposInTeamRepoFinder_1.allReposInTeam(),repoLoader:p=>{cov_7h93ey0ax.f[1]++;cov_7h93ey0ax.s[15]++;return projectLoaderRepoLoader_1.projectLoaderRepoLoader(new index_1.CachingProjectLoader(),p.targets.credentials);},editMode:params=>{cov_7h93ey0ax.f[2]++;cov_7h93ey0ax.s[16]++;automation_client_1.logger.info("About to create edit mode for dry run editor: params=%j",params);const description=(cov_7h93ey0ax.s[17]++,(cov_7h93ey0ax.b[5][0]++,params.desiredPullRequestTitle)||(cov_7h93ey0ax.b[5][1]++,details.description)||(cov_7h93ey0ax.b[5][2]++,name));const status=(cov_7h93ey0ax.s[18]++,{context:exports.DryRunContext,target_url:"https://www.atomist.com",description,state:"pending"});cov_7h93ey0ax.s[19]++;return new NewBranchWithStatus_1.NewBranchWithStatus((cov_7h93ey0ax.b[6][0]++,params.desiredBranchName)||(cov_7h93ey0ax.b[6][1]++,`edit-${name}-${Date.now()}`),toAtomistCommitMessage((cov_7h93ey0ax.b[7][0]++,params.desiredCommitMessage)||(cov_7h93ey0ax.b[7][1]++,description.substr(0,50)),description),params.targets.credentials,status);}},details));cov_7h93ey0ax.s[20]++;return editorToCommand_1.editorHandler(editorWrappers_1.chattyEditorFactory(name,edd),editorCommand_1.toEditorOrReviewerParametersMaker(paramsMaker,targets),name,detailsToUse);}cov_7h93ey0ax.s[21]++;exports.dryRunEditor=dryRunEditor;function toAtomistCommitMessage(base,description){cov_7h93ey0ax.f[3]++;cov_7h93ey0ax.s[22]++;return`${base}\n\n[atomist] ${description}`;}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2NvbW1vbi9jb21tYW5kL2VkaXRvci9kcnktcnVuL2RyeVJ1bkVkaXRvci50cyIsInNvdXJjZXMiOlsiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2NvbW1vbi9jb21tYW5kL2VkaXRvci9kcnktcnVuL2RyeVJ1bkVkaXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7O0dBY0c7O0FBRUgsa0VBQW1FO0FBQ25FLG9IQUF1RztBQUl2RyxxSUFBa0k7QUFDbEksZ0dBQWlIO0FBR2pILDZDQUF5RDtBQUV6RCxtRkFBZ0Y7QUFDaEYsMkRBQXdEO0FBRXhELG9EQUFxRTtBQUNyRSxzREFBd0Q7QUFDeEQsK0RBQTREO0FBRS9DLFFBQUEsYUFBYSxHQUFHLGlCQUFpQixDQUFDO0FBRS9DOzs7Ozs7Ozs7Ozs7R0FZRztBQUNILHNCQUF1RCxHQUF5QyxFQUN6QyxjQUE2QixpQ0FBZ0MsRUFDN0QsSUFBWSxFQUNaLFVBQWlELEVBQUUsRUFDbkQsVUFDSSxJQUFJLDZEQUE2QixFQUFFO0lBQzFGLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUU7UUFDcEIsTUFBTSxJQUFJLEtBQUssQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDO0tBQzNEO0lBQ0QsTUFBTSxZQUFZLG1CQUNkLFdBQVcsRUFBRSxPQUFPLENBQUMsV0FBVyxJQUFJLElBQUksRUFDeEMsTUFBTSxFQUFFLFlBQVksSUFBSSxFQUFFLEVBQzFCLFVBQVUsRUFBRSx5Q0FBYyxFQUFFLEVBQzVCLFVBQVUsRUFDTixDQUFDLENBQUMsRUFBRSxDQUFDLGlEQUF1QixDQUFDLElBQUksNEJBQW9CLEVBQUUsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxFQUNuRixRQUFRLEVBQUUsQ0FBQyxDQUFDLE1BQTJDLEVBQUUsRUFBRTtZQUN2RCwwQkFBTSxDQUFDLElBQUksQ0FBQyx5REFBeUQsRUFBRSxNQUFNLENBQUMsQ0FBQztZQUMvRSxNQUFNLFdBQVcsR0FBSSxNQUFvQyxDQUFDLHVCQUF1QixJQUFJLE9BQU8sQ0FBQyxXQUFXLElBQUksSUFBSSxDQUFDO1lBQ2pILE1BQU0sTUFBTSxHQUFXO2dCQUNuQixPQUFPLEVBQUUscUJBQWE7Z0JBQ3RCLFVBQVUsRUFBRSx5QkFBeUI7Z0JBQ3JDLFdBQVc7Z0JBQ1gsS0FBSyxFQUFFLFNBQVM7YUFDbkIsQ0FBQztZQUNGLE9BQU8sSUFBSSx5Q0FBbUIsQ0FDekIsTUFBb0MsQ0FBQyxpQkFBaUIsSUFBSSxRQUFRLElBQUksSUFBSSxJQUFJLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFDdkYsc0JBQXNCLENBQUUsTUFBb0MsQ0FBQyxvQkFBb0IsSUFBSSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxXQUFXLENBQUMsRUFDNUgsTUFBTSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQzFCLE1BQU0sQ0FBQyxDQUFDO1FBQ2hCLENBQUMsQ0FBQyxJQUNDLE9BQU8sQ0FDYixDQUFDO0lBQ0YsT0FBTywrQkFBYSxDQUNoQixvQ0FBbUIsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFRLEVBQ3JDLGlEQUFpQyxDQUFDLFdBQVcsRUFBRSxPQUFPLENBQUMsRUFDdkQsSUFBSSxFQUNKLFlBQVksQ0FBQyxDQUFDO0FBQ3RCLENBQUM7QUFyQ0Qsb0NBcUNDO0FBRUQsZ0NBQWdDLElBQVksRUFBRSxXQUFtQjtJQUM3RCxPQUFPLEdBQUcsSUFBSSxpQkFBaUIsV0FBVyxFQUFFLENBQUM7QUFDakQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgwqkgMjAxOCBBdG9taXN0LCBJbmMuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IEhhbmRsZUNvbW1hbmQsIGxvZ2dlciB9IGZyb20gXCJAYXRvbWlzdC9hdXRvbWF0aW9uLWNsaWVudFwiO1xuaW1wb3J0IHsgYWxsUmVwb3NJblRlYW0gfSBmcm9tIFwiQGF0b21pc3QvYXV0b21hdGlvbi1jbGllbnQvb3BlcmF0aW9ucy9jb21tb24vYWxsUmVwb3NJblRlYW1SZXBvRmluZGVyXCI7XG5pbXBvcnQgeyBFZGl0b3JPclJldmlld2VyUGFyYW1ldGVycyB9IGZyb20gXCJAYXRvbWlzdC9hdXRvbWF0aW9uLWNsaWVudC9vcGVyYXRpb25zL2NvbW1vbi9wYXJhbXMvQmFzZUVkaXRvck9yUmV2aWV3ZXJQYXJhbWV0ZXJzXCI7XG5pbXBvcnQgeyBFZGl0T25lT3JBbGxQYXJhbWV0ZXJzIH0gZnJvbSBcIkBhdG9taXN0L2F1dG9tYXRpb24tY2xpZW50L29wZXJhdGlvbnMvY29tbW9uL3BhcmFtcy9FZGl0T25lT3JBbGxQYXJhbWV0ZXJzXCI7XG5pbXBvcnQgeyBGYWxsYmFja1BhcmFtcyB9IGZyb20gXCJAYXRvbWlzdC9hdXRvbWF0aW9uLWNsaWVudC9vcGVyYXRpb25zL2NvbW1vbi9wYXJhbXMvRmFsbGJhY2tQYXJhbXNcIjtcbmltcG9ydCB7IEdpdEh1YkZhbGxiYWNrUmVwb3NQYXJhbWV0ZXJzIH0gZnJvbSBcIkBhdG9taXN0L2F1dG9tYXRpb24tY2xpZW50L29wZXJhdGlvbnMvY29tbW9uL3BhcmFtcy9HaXRIdWJGYWxsYmFja1JlcG9zUGFyYW1ldGVyc1wiO1xuaW1wb3J0IHsgRWRpdG9yQ29tbWFuZERldGFpbHMsIGVkaXRvckhhbmRsZXIgfSBmcm9tIFwiQGF0b21pc3QvYXV0b21hdGlvbi1jbGllbnQvb3BlcmF0aW9ucy9lZGl0L2VkaXRvclRvQ29tbWFuZFwiO1xuaW1wb3J0IHsgQW55UHJvamVjdEVkaXRvciB9IGZyb20gXCJAYXRvbWlzdC9hdXRvbWF0aW9uLWNsaWVudC9vcGVyYXRpb25zL2VkaXQvcHJvamVjdEVkaXRvclwiO1xuaW1wb3J0IHsgTWFrZXIgfSBmcm9tIFwiQGF0b21pc3QvYXV0b21hdGlvbi1jbGllbnQvdXRpbC9jb25zdHJ1Y3Rpb25VdGlsc1wiO1xuaW1wb3J0IHsgQ2FjaGluZ1Byb2plY3RMb2FkZXIgfSBmcm9tIFwiLi4vLi4vLi4vLi4vaW5kZXhcIjtcbmltcG9ydCB7IFN0YXR1cyB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlsL2dpdGh1Yi9naHViXCI7XG5pbXBvcnQgeyBwcm9qZWN0TG9hZGVyUmVwb0xvYWRlciB9IGZyb20gXCIuLi8uLi8uLi9yZXBvL3Byb2plY3RMb2FkZXJSZXBvTG9hZGVyXCI7XG5pbXBvcnQgeyBFbXB0eVBhcmFtZXRlcnMgfSBmcm9tIFwiLi4vLi4vRW1wdHlQYXJhbWV0ZXJzXCI7XG5pbXBvcnQgeyBFZGl0TW9kZVN1Z2dlc3Rpb24gfSBmcm9tIFwiLi4vRWRpdE1vZGVTdWdnZXN0aW9uXCI7XG5pbXBvcnQgeyB0b0VkaXRvck9yUmV2aWV3ZXJQYXJhbWV0ZXJzTWFrZXIgfSBmcm9tIFwiLi4vZWRpdG9yQ29tbWFuZFwiO1xuaW1wb3J0IHsgY2hhdHR5RWRpdG9yRmFjdG9yeSB9IGZyb20gXCIuLi9lZGl0b3JXcmFwcGVyc1wiO1xuaW1wb3J0IHsgTmV3QnJhbmNoV2l0aFN0YXR1cyB9IGZyb20gXCIuL05ld0JyYW5jaFdpdGhTdGF0dXNcIjtcblxuZXhwb3J0IGNvbnN0IERyeVJ1bkNvbnRleHQgPSBcImF0b21pc3QtZHJ5LXJ1blwiO1xuXG4vKipcbiAqIFdyYXAgYW4gZWRpdG9yIGluIGEgY29tbWFuZCBoYW5kbGVyIHRoYXQgc2V0cyBhIGRyeSBydW4gc3RhdHVzLlxuICogVHlwaWNhbGx5IHVzZWQgdG8gd2FpdCBmb3IgYnVpbGQgc3VjY2VzcyBvciBmYWlsdXJlLCByZXN1bHRpbmcgaW4gaXNzdWUgb3IgUFIuXG4gKiBBbGxvd3MgdXNlIG9mIGN1c3RvbSBwYXJhbWV0ZXJzIGFzIGluIGVkaXRvckNvbW1hbmRcbiAqIFRhcmdldGluZyAodGFyZ2V0cyBwcm9wZXJ0eSkgaXMgaGFuZGxlZCBhdXRvbWF0aWNhbGx5IGlmIHRoZSBwYXJhbWV0ZXJzXG4gKiBkbyBub3QgaW1wbGVtZW50IFRhcmdldHNQYXJhbXNcbiAqIEBwYXJhbSBlZGQgZnVuY3Rpb24gdG8gbWFrZSBhIGZyZXNoIGVkaXRvciBpbnN0YW5jZSBmcm9tIHRoZSBwYXJhbXNcbiAqIEBwYXJhbSBuYW1lIGVkaXRvciBuYW1lXG4gKiBAcGFyYW0gcGFyYW1zTWFrZXIgcGFyYW1ldGVycyBmYWN0b3J5LCB0eXBpY2FsbHkgdGhlIG5hbWUgb2YgYSBjbGFzcyB3aXRoIGEgbm8gYXJnIGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0gZGV0YWlscyBvcHRpb25hbCBkZXRhaWxzIHRvIGN1c3RvbWl6ZSBiZWhhdmlvclxuICogQHBhcmFtIHRhcmdldHMgdGFyZ2V0cyBwYXJhbWV0ZXJzLiBBbGxvd3MgdGFyZ2V0aW5nIHRvIG90aGVyIHNvdXJjZSBjb250cm9sIHN5c3RlbXNcbiAqIEFkZCBpbnRlbnQgXCJ0cnkgZWRpdCA8bmFtZT5cIlxuICovXG5leHBvcnQgZnVuY3Rpb24gZHJ5UnVuRWRpdG9yPFBBUkFNUyA9IEVtcHR5UGFyYW1ldGVycz4oZWRkOiAocGFyYW1zOiBQQVJBTVMpID0+IEFueVByb2plY3RFZGl0b3IsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zTWFrZXI6IE1ha2VyPFBBUkFNUz4gPSBFbXB0eVBhcmFtZXRlcnMgYXMgTWFrZXI8UEFSQU1TPixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBzdHJpbmcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGV0YWlsczogUGFydGlhbDxFZGl0b3JDb21tYW5kRGV0YWlsczxQQVJBTVM+PiA9IHt9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldHM6IEZhbGxiYWNrUGFyYW1zID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3IEdpdEh1YkZhbGxiYWNrUmVwb3NQYXJhbWV0ZXJzKCkpOiBIYW5kbGVDb21tYW5kPEVkaXRPbmVPckFsbFBhcmFtZXRlcnM+IHtcbiAgICBpZiAoISFkZXRhaWxzLmVkaXRNb2RlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBzZXQgZWRpdE1vZGUgZm9yIGRyeVJ1bkVkaXRvclwiKTtcbiAgICB9XG4gICAgY29uc3QgZGV0YWlsc1RvVXNlOiBFZGl0b3JDb21tYW5kRGV0YWlscyA9IHtcbiAgICAgICAgZGVzY3JpcHRpb246IGRldGFpbHMuZGVzY3JpcHRpb24gfHwgbmFtZSxcbiAgICAgICAgaW50ZW50OiBgdHJ5IGVkaXQgJHtuYW1lfWAsXG4gICAgICAgIHJlcG9GaW5kZXI6IGFsbFJlcG9zSW5UZWFtKCksXG4gICAgICAgIHJlcG9Mb2FkZXI6XG4gICAgICAgICAgICBwID0+IHByb2plY3RMb2FkZXJSZXBvTG9hZGVyKG5ldyBDYWNoaW5nUHJvamVjdExvYWRlcigpLCBwLnRhcmdldHMuY3JlZGVudGlhbHMpLFxuICAgICAgICBlZGl0TW9kZTogKChwYXJhbXM6IFBBUkFNUyAmIEVkaXRvck9yUmV2aWV3ZXJQYXJhbWV0ZXJzKSA9PiB7XG4gICAgICAgICAgICBsb2dnZXIuaW5mbyhcIkFib3V0IHRvIGNyZWF0ZSBlZGl0IG1vZGUgZm9yIGRyeSBydW4gZWRpdG9yOiBwYXJhbXM9JWpcIiwgcGFyYW1zKTtcbiAgICAgICAgICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gKHBhcmFtcyBhcyBhbnkgYXMgRWRpdE1vZGVTdWdnZXN0aW9uKS5kZXNpcmVkUHVsbFJlcXVlc3RUaXRsZSB8fCBkZXRhaWxzLmRlc2NyaXB0aW9uIHx8IG5hbWU7XG4gICAgICAgICAgICBjb25zdCBzdGF0dXM6IFN0YXR1cyA9IHtcbiAgICAgICAgICAgICAgICBjb250ZXh0OiBEcnlSdW5Db250ZXh0LFxuICAgICAgICAgICAgICAgIHRhcmdldF91cmw6IFwiaHR0cHM6Ly93d3cuYXRvbWlzdC5jb21cIixcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbixcbiAgICAgICAgICAgICAgICBzdGF0ZTogXCJwZW5kaW5nXCIsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBOZXdCcmFuY2hXaXRoU3RhdHVzKFxuICAgICAgICAgICAgICAgIChwYXJhbXMgYXMgYW55IGFzIEVkaXRNb2RlU3VnZ2VzdGlvbikuZGVzaXJlZEJyYW5jaE5hbWUgfHwgYGVkaXQtJHtuYW1lfS0ke0RhdGUubm93KCl9YCxcbiAgICAgICAgICAgICAgICB0b0F0b21pc3RDb21taXRNZXNzYWdlKChwYXJhbXMgYXMgYW55IGFzIEVkaXRNb2RlU3VnZ2VzdGlvbikuZGVzaXJlZENvbW1pdE1lc3NhZ2UgfHwgZGVzY3JpcHRpb24uc3Vic3RyKDAsIDUwKSwgZGVzY3JpcHRpb24pLFxuICAgICAgICAgICAgICAgIHBhcmFtcy50YXJnZXRzLmNyZWRlbnRpYWxzLFxuICAgICAgICAgICAgICAgIHN0YXR1cyk7XG4gICAgICAgIH0pLFxuICAgICAgICAuLi5kZXRhaWxzLFxuICAgIH07XG4gICAgcmV0dXJuIGVkaXRvckhhbmRsZXIoXG4gICAgICAgIGNoYXR0eUVkaXRvckZhY3RvcnkobmFtZSwgZWRkKSBhcyBhbnksXG4gICAgICAgIHRvRWRpdG9yT3JSZXZpZXdlclBhcmFtZXRlcnNNYWtlcihwYXJhbXNNYWtlciwgdGFyZ2V0cyksXG4gICAgICAgIG5hbWUsXG4gICAgICAgIGRldGFpbHNUb1VzZSk7XG59XG5cbmZ1bmN0aW9uIHRvQXRvbWlzdENvbW1pdE1lc3NhZ2UoYmFzZTogc3RyaW5nLCBkZXNjcmlwdGlvbjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIGAke2Jhc2V9XFxuXFxuW2F0b21pc3RdICR7ZGVzY3JpcHRpb259YDtcbn1cbiJdfQ==