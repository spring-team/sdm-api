"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_7m5rkheoi=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/blueprint/dsl/decisionTree.ts",hash="aaaf8586f233ada8d2b4ee2816e9ee5d0e31454b",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/blueprint/dsl/decisionTree.ts",statementMap:{"0":{start:{line:17,column:16},end:{line:24,column:1}},"1":{start:{line:18,column:4},end:{line:23,column:7}},"2":{start:{line:19,column:36},end:{line:19,column:97}},"3":{start:{line:19,column:42},end:{line:19,column:70}},"4":{start:{line:19,column:85},end:{line:19,column:95}},"5":{start:{line:20,column:35},end:{line:20,column:100}},"6":{start:{line:20,column:41},end:{line:20,column:73}},"7":{start:{line:20,column:88},end:{line:20,column:98}},"8":{start:{line:21,column:32},end:{line:21,column:149}},"9":{start:{line:21,column:97},end:{line:21,column:119}},"10":{start:{line:22,column:8},end:{line:22,column:78}},"11":{start:{line:25,column:0},end:{line:25,column:62}},"12":{start:{line:26,column:12},end:{line:26,column:28}},"13":{start:{line:33,column:4},end:{line:33,column:43}},"14":{start:{line:35,column:0},end:{line:35,column:22}},"15":{start:{line:38,column:8},end:{line:38,column:45}},"16":{start:{line:47,column:8},end:{line:47,column:16}},"17":{start:{line:48,column:8},end:{line:48,column:20}},"18":{start:{line:51,column:30},end:{line:51,column:70}},"19":{start:{line:52,column:8},end:{line:52,column:50}},"20":{start:{line:55,column:0},end:{line:55,column:34}},"21":{start:{line:61,column:8},end:{line:61,column:43}},"22":{start:{line:62,column:8},end:{line:62,column:25}},"23":{start:{line:71,column:8},end:{line:71,column:16}},"24":{start:{line:72,column:8},end:{line:72,column:20}},"25":{start:{line:80,column:8},end:{line:83,column:10}},"26":{start:{line:82,column:27},end:{line:82,column:90}},"27":{start:{line:82,column:74},end:{line:82,column:87}},"28":{start:{line:92,column:22},end:{line:92,column:64}},"29":{start:{line:93,column:8},end:{line:99,column:10}},"30":{start:{line:95,column:30},end:{line:98,column:14}},"31":{start:{line:96,column:33},end:{line:96,column:70}},"32":{start:{line:97,column:16},end:{line:97,column:65}},"33":{start:{line:102,column:0},end:{line:102,column:30}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:44},end:{line:17,column:45}},loc:{start:{line:17,column:89},end:{line:24,column:1}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:36},end:{line:18,column:37}},loc:{start:{line:18,column:63},end:{line:23,column:5}},line:18},"2":{name:"fulfilled",decl:{start:{line:19,column:17},end:{line:19,column:26}},loc:{start:{line:19,column:34},end:{line:19,column:99}},line:19},"3":{name:"rejected",decl:{start:{line:20,column:17},end:{line:20,column:25}},loc:{start:{line:20,column:33},end:{line:20,column:102}},line:20},"4":{name:"step",decl:{start:{line:21,column:17},end:{line:21,column:21}},loc:{start:{line:21,column:30},end:{line:21,column:151}},line:21},"5":{name:"(anonymous_5)",decl:{start:{line:21,column:76},end:{line:21,column:77}},loc:{start:{line:21,column:95},end:{line:21,column:121}},line:21},"6":{name:"given",decl:{start:{line:32,column:9},end:{line:32,column:14}},loc:{start:{line:32,column:34},end:{line:34,column:1}},line:32},"7":{name:"(anonymous_7)",decl:{start:{line:37,column:4},end:{line:37,column:5}},loc:{start:{line:37,column:32},end:{line:39,column:5}},line:37},"8":{name:"(anonymous_8)",decl:{start:{line:46,column:4},end:{line:46,column:5}},loc:{start:{line:46,column:12},end:{line:49,column:5}},line:46},"9":{name:"(anonymous_9)",decl:{start:{line:50,column:4},end:{line:50,column:5}},loc:{start:{line:50,column:18},end:{line:53,column:5}},line:50},"10":{name:"(anonymous_10)",decl:{start:{line:60,column:4},end:{line:60,column:5}},loc:{start:{line:60,column:37},end:{line:63,column:5}},line:60},"11":{name:"(anonymous_11)",decl:{start:{line:70,column:4},end:{line:70,column:5}},loc:{start:{line:70,column:15},end:{line:73,column:5}},line:70},"12":{name:"(anonymous_12)",decl:{start:{line:79,column:4},end:{line:79,column:5}},loc:{start:{line:79,column:15},end:{line:84,column:5}},line:79},"13":{name:"(anonymous_13)",decl:{start:{line:82,column:21},end:{line:82,column:22}},loc:{start:{line:82,column:27},end:{line:82,column:90}},line:82},"14":{name:"(anonymous_14)",decl:{start:{line:82,column:59},end:{line:82,column:60}},loc:{start:{line:82,column:72},end:{line:82,column:89}},line:82},"15":{name:"(anonymous_15)",decl:{start:{line:91,column:4},end:{line:91,column:5}},loc:{start:{line:91,column:26},end:{line:100,column:5}},line:91},"16":{name:"(anonymous_16)",decl:{start:{line:95,column:21},end:{line:95,column:22}},loc:{start:{line:95,column:30},end:{line:98,column:14}},line:95},"17":{name:"(anonymous_17)",decl:{start:{line:95,column:62},end:{line:95,column:63}},loc:{start:{line:95,column:75},end:{line:98,column:13}},line:95}},branchMap:{"0":{loc:{start:{line:17,column:16},end:{line:24,column:1}},type:"binary-expr",locations:[{start:{line:17,column:17},end:{line:17,column:21}},{start:{line:17,column:25},end:{line:17,column:39}},{start:{line:17,column:44},end:{line:24,column:1}}],line:17},"1":{loc:{start:{line:18,column:16},end:{line:18,column:34}},type:"binary-expr",locations:[{start:{line:18,column:16},end:{line:18,column:17}},{start:{line:18,column:22},end:{line:18,column:33}}],line:18},"2":{loc:{start:{line:21,column:32},end:{line:21,column:148}},type:"cond-expr",locations:[{start:{line:21,column:46},end:{line:21,column:67}},{start:{line:21,column:70},end:{line:21,column:148}}],line:21},"3":{loc:{start:{line:22,column:51},end:{line:22,column:67}},type:"binary-expr",locations:[{start:{line:22,column:51},end:{line:22,column:61}},{start:{line:22,column:65},end:{line:22,column:67}}],line:22},"4":{loc:{start:{line:97,column:23},end:{line:97,column:64}},type:"cond-expr",locations:[{start:{line:97,column:34},end:{line:97,column:52}},{start:{line:97,column:55},end:{line:97,column:64}}],line:97}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var __awaiter=(cov_7m5rkheoi.s[0]++,(cov_7m5rkheoi.b[0][0]++,this)&&(cov_7m5rkheoi.b[0][1]++,this.__awaiter)||(cov_7m5rkheoi.b[0][2]++,function(thisArg,_arguments,P,generator){cov_7m5rkheoi.f[0]++;cov_7m5rkheoi.s[1]++;return new((cov_7m5rkheoi.b[1][0]++,P)||(cov_7m5rkheoi.b[1][1]++,P=Promise))(function(resolve,reject){cov_7m5rkheoi.f[1]++;function fulfilled(value){cov_7m5rkheoi.f[2]++;cov_7m5rkheoi.s[2]++;try{cov_7m5rkheoi.s[3]++;step(generator.next(value));}catch(e){cov_7m5rkheoi.s[4]++;reject(e);}}function rejected(value){cov_7m5rkheoi.f[3]++;cov_7m5rkheoi.s[5]++;try{cov_7m5rkheoi.s[6]++;step(generator["throw"](value));}catch(e){cov_7m5rkheoi.s[7]++;reject(e);}}function step(result){cov_7m5rkheoi.f[4]++;cov_7m5rkheoi.s[8]++;result.done?(cov_7m5rkheoi.b[2][0]++,resolve(result.value)):(cov_7m5rkheoi.b[2][1]++,new P(function(resolve){cov_7m5rkheoi.f[5]++;cov_7m5rkheoi.s[9]++;resolve(result.value);}).then(fulfilled,rejected));}cov_7m5rkheoi.s[10]++;step((generator=generator.apply(thisArg,(cov_7m5rkheoi.b[3][0]++,_arguments)||(cov_7m5rkheoi.b[3][1]++,[]))).next());});}));cov_7m5rkheoi.s[11]++;Object.defineProperty(exports,"__esModule",{value:true});const __1=(cov_7m5rkheoi.s[12]++,require("../.."));/**
 * Simple DSL to create a decision tree
 * @param givenPushTests PushTests
 * @return interim DSL structure
 */function given(...givenPushTests){cov_7m5rkheoi.f[6]++;cov_7m5rkheoi.s[13]++;return new TreeContext(givenPushTests);}cov_7m5rkheoi.s[14]++;exports.given=given;class TreeContext{constructor(givenPushTests){cov_7m5rkheoi.f[7]++;cov_7m5rkheoi.s[15]++;this.givenPushTests=givenPushTests;}/**
     * Perform any computation necessary to initialize this branch:
     * for example, setting variables in scope
     * @param {(t: this) => any} f
     * @return {any}
     */init(f){cov_7m5rkheoi.f[8]++;cov_7m5rkheoi.s[16]++;f(this);cov_7m5rkheoi.s[17]++;return this;}itMeans(name){cov_7m5rkheoi.f[9]++;const givenPushTest=(cov_7m5rkheoi.s[18]++,__1.allSatisfied(...this.givenPushTests));cov_7m5rkheoi.s[19]++;return new GivenTree(givenPushTest,name);}}cov_7m5rkheoi.s[20]++;exports.TreeContext=TreeContext;/**
 * Tree. Can compute variables
 */class GivenTree{constructor(givenPushTest,name){cov_7m5rkheoi.f[10]++;cov_7m5rkheoi.s[21]++;this.givenPushTest=givenPushTest;cov_7m5rkheoi.s[22]++;this.name=name;}/**
     * Perform computation before continuing.
     * Typically used to set values that will be used in predicate expressions.
     * @param {(t: this) => any} f
     * @return {any}
     */compute(f){cov_7m5rkheoi.f[11]++;cov_7m5rkheoi.s[23]++;f(this);cov_7m5rkheoi.s[24]++;return this;}/**
     * Set the resolution value of this tree
     * @param {V} value
     * @return {PushMapping<V>}
     */set(value){cov_7m5rkheoi.f[12]++;cov_7m5rkheoi.s[25]++;return{name:this.name,mapping:()=>{cov_7m5rkheoi.f[13]++;cov_7m5rkheoi.s[26]++;return __awaiter(this,void 0,void 0,function*(){cov_7m5rkheoi.f[14]++;cov_7m5rkheoi.s[27]++;return value;});}};}/**
     * Enter a subtree of a number of mappings. Can be use
     * to nest trees to arbitrary depth.
     * @param {PushMapping<V>} pushMappings
     * @return {PushMapping<V>}
     */then(...pushMappings){cov_7m5rkheoi.f[15]++;const rules=(cov_7m5rkheoi.s[28]++,new __1.PushRules(this.name,pushMappings));cov_7m5rkheoi.s[29]++;return{name:this.name,mapping:pli=>{cov_7m5rkheoi.f[16]++;cov_7m5rkheoi.s[30]++;return __awaiter(this,void 0,void 0,function*(){cov_7m5rkheoi.f[17]++;const eligible=(cov_7m5rkheoi.s[31]++,yield this.givenPushTest.mapping(pli));cov_7m5rkheoi.s[32]++;return eligible?(cov_7m5rkheoi.b[4][0]++,rules.mapping(pli)):(cov_7m5rkheoi.b[4][1]++,undefined);});}};}}cov_7m5rkheoi.s[33]++;exports.GivenTree=GivenTree;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2JsdWVwcmludC9kc2wvZGVjaXNpb25UcmVlLnRzIiwic291cmNlcyI6WyIvVXNlcnMvcm9kam9obnNvbi9zZm9yemFuZG8tZGV2L2lkZWEtcHJvamVjdHMvbXktZmxvdy9zcmMvYmx1ZXByaW50L2RzbC9kZWNpc2lvblRyZWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7OztHQWNHOzs7Ozs7Ozs7O0FBRUgsNkJBQXVFO0FBRXZFOzs7O0dBSUc7QUFDSCxlQUF5QixHQUFHLGNBQTBCO0lBQ2xELE9BQU8sSUFBSSxXQUFXLENBQUksY0FBYyxDQUFDLENBQUM7QUFDOUMsQ0FBQztBQUZELHNCQUVDO0FBRUQ7SUFFSSxZQUE2QixjQUEwQjtRQUExQixtQkFBYyxHQUFkLGNBQWMsQ0FBWTtJQUFHLENBQUM7SUFFM0Q7Ozs7O09BS0c7SUFDSSxJQUFJLENBQUMsQ0FBbUI7UUFDM0IsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ1IsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVNLE9BQU8sQ0FBQyxJQUFZO1FBQ3ZCLE1BQU0sYUFBYSxHQUFHLGdCQUFZLENBQUMsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDM0QsT0FBTyxJQUFJLFNBQVMsQ0FBSSxhQUFhLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDakQsQ0FBQztDQUNKO0FBbkJELGtDQW1CQztBQUVEOztHQUVHO0FBQ0g7SUFFSSxZQUE2QixhQUF1QixFQUFtQixJQUFZO1FBQXRELGtCQUFhLEdBQWIsYUFBYSxDQUFVO1FBQW1CLFNBQUksR0FBSixJQUFJLENBQVE7SUFBRyxDQUFDO0lBRXZGOzs7OztPQUtHO0lBQ0ksT0FBTyxDQUFDLENBQW1CO1FBQzlCLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNSLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFRDs7OztPQUlHO0lBQ0ksR0FBRyxDQUFDLEtBQVE7UUFDZixPQUFPO1lBQ0gsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO1lBQ2YsT0FBTyxFQUFFLEdBQVMsRUFBRSxnREFBQyxPQUFBLEtBQUssQ0FBQSxHQUFBO1NBQzdCLENBQUM7SUFDTixDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSSxJQUFJLENBQUMsR0FBRyxZQUFtQztRQUM5QyxNQUFNLEtBQUssR0FBRyxJQUFJLGFBQVMsQ0FBSSxJQUFJLENBQUMsSUFBSSxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQ3hELE9BQU87WUFDSCxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUk7WUFDZixPQUFPLEVBQUUsQ0FBTSxHQUFHLEVBQUMsRUFBRTtnQkFDakIsTUFBTSxRQUFRLEdBQUcsTUFBTSxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDdkQsT0FBTyxRQUFRLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztZQUNyRCxDQUFDLENBQUE7U0FDSixDQUFDO0lBQ04sQ0FBQztDQUNKO0FBM0NELDhCQTJDQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgwqkgMjAxOCBBdG9taXN0LCBJbmMuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IGFsbFNhdGlzZmllZCwgUHVzaE1hcHBpbmcsIFB1c2hSdWxlcywgUHVzaFRlc3QgfSBmcm9tIFwiLi4vLi5cIjtcblxuLyoqXG4gKiBTaW1wbGUgRFNMIHRvIGNyZWF0ZSBhIGRlY2lzaW9uIHRyZWVcbiAqIEBwYXJhbSBnaXZlblB1c2hUZXN0cyBQdXNoVGVzdHNcbiAqIEByZXR1cm4gaW50ZXJpbSBEU0wgc3RydWN0dXJlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnaXZlbjxWPiguLi5naXZlblB1c2hUZXN0czogUHVzaFRlc3RbXSkge1xuICAgIHJldHVybiBuZXcgVHJlZUNvbnRleHQ8Vj4oZ2l2ZW5QdXNoVGVzdHMpO1xufVxuXG5leHBvcnQgY2xhc3MgVHJlZUNvbnRleHQ8Vj4ge1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBnaXZlblB1c2hUZXN0czogUHVzaFRlc3RbXSkge31cblxuICAgIC8qKlxuICAgICAqIFBlcmZvcm0gYW55IGNvbXB1dGF0aW9uIG5lY2Vzc2FyeSB0byBpbml0aWFsaXplIHRoaXMgYnJhbmNoOlxuICAgICAqIGZvciBleGFtcGxlLCBzZXR0aW5nIHZhcmlhYmxlcyBpbiBzY29wZVxuICAgICAqIEBwYXJhbSB7KHQ6IHRoaXMpID0+IGFueX0gZlxuICAgICAqIEByZXR1cm4ge2FueX1cbiAgICAgKi9cbiAgICBwdWJsaWMgaW5pdChmOiAodDogdGhpcykgPT4gYW55KTogYW55IHtcbiAgICAgICAgZih0aGlzKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgcHVibGljIGl0TWVhbnMobmFtZTogc3RyaW5nKTogR2l2ZW5UcmVlPFY+IHtcbiAgICAgICAgY29uc3QgZ2l2ZW5QdXNoVGVzdCA9IGFsbFNhdGlzZmllZCguLi50aGlzLmdpdmVuUHVzaFRlc3RzKTtcbiAgICAgICAgcmV0dXJuIG5ldyBHaXZlblRyZWU8Vj4oZ2l2ZW5QdXNoVGVzdCwgbmFtZSk7XG4gICAgfVxufVxuXG4vKipcbiAqIFRyZWUuIENhbiBjb21wdXRlIHZhcmlhYmxlc1xuICovXG5leHBvcnQgY2xhc3MgR2l2ZW5UcmVlPFY+IHtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgZ2l2ZW5QdXNoVGVzdDogUHVzaFRlc3QsIHByaXZhdGUgcmVhZG9ubHkgbmFtZTogc3RyaW5nKSB7fVxuXG4gICAgLyoqXG4gICAgICogUGVyZm9ybSBjb21wdXRhdGlvbiBiZWZvcmUgY29udGludWluZy5cbiAgICAgKiBUeXBpY2FsbHkgdXNlZCB0byBzZXQgdmFsdWVzIHRoYXQgd2lsbCBiZSB1c2VkIGluIHByZWRpY2F0ZSBleHByZXNzaW9ucy5cbiAgICAgKiBAcGFyYW0geyh0OiB0aGlzKSA9PiBhbnl9IGZcbiAgICAgKiBAcmV0dXJuIHthbnl9XG4gICAgICovXG4gICAgcHVibGljIGNvbXB1dGUoZjogKHQ6IHRoaXMpID0+IGFueSk6IGFueSB7XG4gICAgICAgIGYodGhpcyk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNldCB0aGUgcmVzb2x1dGlvbiB2YWx1ZSBvZiB0aGlzIHRyZWVcbiAgICAgKiBAcGFyYW0ge1Z9IHZhbHVlXG4gICAgICogQHJldHVybiB7UHVzaE1hcHBpbmc8Vj59XG4gICAgICovXG4gICAgcHVibGljIHNldCh2YWx1ZTogVik6IFB1c2hNYXBwaW5nPFY+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5hbWU6IHRoaXMubmFtZSxcbiAgICAgICAgICAgIG1hcHBpbmc6IGFzeW5jICgpID0+IHZhbHVlLFxuICAgICAgICB9O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEVudGVyIGEgc3VidHJlZSBvZiBhIG51bWJlciBvZiBtYXBwaW5ncy4gQ2FuIGJlIHVzZVxuICAgICAqIHRvIG5lc3QgdHJlZXMgdG8gYXJiaXRyYXJ5IGRlcHRoLlxuICAgICAqIEBwYXJhbSB7UHVzaE1hcHBpbmc8Vj59IHB1c2hNYXBwaW5nc1xuICAgICAqIEByZXR1cm4ge1B1c2hNYXBwaW5nPFY+fVxuICAgICAqL1xuICAgIHB1YmxpYyB0aGVuKC4uLnB1c2hNYXBwaW5nczogQXJyYXk8UHVzaE1hcHBpbmc8Vj4+KTogUHVzaE1hcHBpbmc8Vj4ge1xuICAgICAgICBjb25zdCBydWxlcyA9IG5ldyBQdXNoUnVsZXM8Vj4odGhpcy5uYW1lLCBwdXNoTWFwcGluZ3MpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmFtZTogdGhpcy5uYW1lLFxuICAgICAgICAgICAgbWFwcGluZzogYXN5bmMgcGxpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBlbGlnaWJsZSA9IGF3YWl0IHRoaXMuZ2l2ZW5QdXNoVGVzdC5tYXBwaW5nKHBsaSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVsaWdpYmxlID8gcnVsZXMubWFwcGluZyhwbGkpIDogdW5kZWZpbmVkO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG59XG4iXX0=