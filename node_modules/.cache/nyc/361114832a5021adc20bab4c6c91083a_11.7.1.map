{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/slack/contextMessageRouting.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/slack/contextMessageRouting.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;AAEH,kEAAoE;AAGpE;;;;;;GAMG;AACH,sCAA6C,GAAmB,EAAE,GAAG,YAA2B;IAC5F,MAAM,gBAAgB,GAAG,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC;IACnD,GAAG,CAAC,aAAa,CAAC,OAAO,GAAG,CAAO,GAAG,EAAE,OAAO,EAAE,EAAE;QAC/C,sEAAsE;QACtE,4CAA4C;QAC5C,IAAI;YACA,OAAO,MAAM,gBAAgB,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;SAC/C;QAAC,OAAO,GAAG,EAAE;YACV,0BAAM,CAAC,KAAK,CAAC,8DAA8D,EAAE,GAAG,CAAC,CAAC;YAClF,OAAO,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;SAC7D;IACL,CAAC,CAAA,CAAC;IACF,OAAO,GAAG,CAAC;AACf,CAAC;AAbD,oEAaC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HandlerContext, logger } from \"@atomist/automation-client\";\nimport { Destination } from \"@atomist/automation-client/spi/message/MessageClient\";\n\n/**\n * Safely mutate the given HandlerContext so that it can respond even when used in\n * an EventHandler\n * @param ctx context to wrap\n * @param destinations\n * @return {HandlerContext}\n */\nexport function teachToRespondInEventHandler(ctx: HandlerContext, ...destinations: Destination[]): HandlerContext {\n    const oldRespondMethod = ctx.messageClient.respond;\n    ctx.messageClient.respond = async (msg, options) => {\n        // First try routing to response. If that doesn't work, we're probably\n        // in an event handler. Try linked channels.\n        try {\n            return await oldRespondMethod(msg, options);\n        } catch (err) {\n            logger.debug(\"Rerouting response message to destinations: message was [%s]\", msg);\n            return ctx.messageClient.send(msg, destinations, options);\n        }\n    };\n    return ctx;\n}\n"]}