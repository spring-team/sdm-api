"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_2pulv1kdq2=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/util/misc/spawned.ts",hash="d7d9ddaa46d67b0fa9095793bbadc5a6eae047a5",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/util/misc/spawned.ts",statementMap:{"0":{start:{line:17,column:16},end:{line:24,column:1}},"1":{start:{line:18,column:4},end:{line:23,column:7}},"2":{start:{line:19,column:36},end:{line:19,column:97}},"3":{start:{line:19,column:42},end:{line:19,column:70}},"4":{start:{line:19,column:85},end:{line:19,column:95}},"5":{start:{line:20,column:35},end:{line:20,column:100}},"6":{start:{line:20,column:41},end:{line:20,column:73}},"7":{start:{line:20,column:88},end:{line:20,column:98}},"8":{start:{line:21,column:32},end:{line:21,column:149}},"9":{start:{line:21,column:97},end:{line:21,column:119}},"10":{start:{line:22,column:8},end:{line:22,column:78}},"11":{start:{line:25,column:0},end:{line:25,column:62}},"12":{start:{line:26,column:28},end:{line:26,column:65}},"13":{start:{line:27,column:24},end:{line:27,column:48}},"14":{start:{line:28,column:21},end:{line:28,column:42}},"15":{start:{line:29,column:19},end:{line:29,column:40}},"16":{start:{line:30,column:45},end:{line:30,column:107}},"17":{start:{line:37,column:0},end:{line:37,column:57}},"18":{start:{line:37,column:46},end:{line:37,column:56}},"19":{start:{line:47,column:4},end:{line:51,column:7}},"20":{start:{line:48,column:29},end:{line:48,column:106}},"21":{start:{line:49,column:8},end:{line:49,column:139}},"22":{start:{line:50,column:8},end:{line:50,column:55}},"23":{start:{line:53,column:0},end:{line:53,column:38}},"24":{start:{line:63,column:4},end:{line:88,column:7}},"25":{start:{line:64,column:26},end:{line:64,column:117}},"26":{start:{line:65,column:8},end:{line:68,column:9}},"27":{start:{line:67,column:12},end:{line:67,column:72}},"28":{start:{line:69,column:36},end:{line:69,column:122}},"29":{start:{line:71,column:30},end:{line:71,column:97}},"30":{start:{line:72,column:12},end:{line:72,column:56}},"31":{start:{line:74,column:8},end:{line:74,column:50}},"32":{start:{line:75,column:8},end:{line:75,column:50}},"33":{start:{line:76,column:8},end:{line:82,column:11}},"34":{start:{line:77,column:12},end:{line:77,column:119}},"35":{start:{line:78,column:12},end:{line:81,column:15}},"36":{start:{line:83,column:8},end:{line:87,column:11}},"37":{start:{line:85,column:12},end:{line:85,column:70}},"38":{start:{line:86,column:12},end:{line:86,column:24}},"39":{start:{line:90,column:0},end:{line:90,column:36}},"40":{start:{line:97,column:4},end:{line:97,column:89}},"41":{start:{line:99,column:0},end:{line:99,column:54}},"42":{start:{line:108,column:18},end:{line:108,column:37}},"43":{start:{line:109,column:4},end:{line:113,column:6}},"44":{start:{line:115,column:0},end:{line:115,column:40}},"45":{start:{line:123,column:4},end:{line:123,column:24}},"46":{start:{line:124,column:4},end:{line:126,column:8}},"47":{start:{line:124,column:44},end:{line:126,column:6}},"48":{start:{line:125,column:8},end:{line:125,column:18}},"49":{start:{line:128,column:0},end:{line:128,column:38}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:44},end:{line:17,column:45}},loc:{start:{line:17,column:89},end:{line:24,column:1}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:36},end:{line:18,column:37}},loc:{start:{line:18,column:63},end:{line:23,column:5}},line:18},"2":{name:"fulfilled",decl:{start:{line:19,column:17},end:{line:19,column:26}},loc:{start:{line:19,column:34},end:{line:19,column:99}},line:19},"3":{name:"rejected",decl:{start:{line:20,column:17},end:{line:20,column:25}},loc:{start:{line:20,column:33},end:{line:20,column:102}},line:20},"4":{name:"step",decl:{start:{line:21,column:17},end:{line:21,column:21}},loc:{start:{line:21,column:30},end:{line:21,column:151}},line:21},"5":{name:"(anonymous_5)",decl:{start:{line:21,column:76},end:{line:21,column:77}},loc:{start:{line:21,column:95},end:{line:21,column:121}},line:21},"6":{name:"(anonymous_6)",decl:{start:{line:37,column:38},end:{line:37,column:39}},loc:{start:{line:37,column:46},end:{line:37,column:56}},line:37},"7":{name:"spawnAndWatch",decl:{start:{line:46,column:9},end:{line:46,column:22}},loc:{start:{line:46,column:64},end:{line:52,column:1}},line:46},"8":{name:"(anonymous_8)",decl:{start:{line:47,column:43},end:{line:47,column:44}},loc:{start:{line:47,column:56},end:{line:51,column:5}},line:47},"9":{name:"watchSpawned",decl:{start:{line:62,column:9},end:{line:62,column:21}},loc:{start:{line:62,column:52},end:{line:89,column:1}},line:62},"10":{name:"(anonymous_10)",decl:{start:{line:63,column:23},end:{line:63,column:24}},loc:{start:{line:63,column:44},end:{line:88,column:5}},line:63},"11":{name:"sendToLog",decl:{start:{line:70,column:17},end:{line:70,column:26}},loc:{start:{line:70,column:33},end:{line:73,column:9}},line:70},"12":{name:"(anonymous_12)",decl:{start:{line:76,column:41},end:{line:76,column:42}},loc:{start:{line:76,column:59},end:{line:82,column:9}},line:76},"13":{name:"(anonymous_13)",decl:{start:{line:83,column:42},end:{line:83,column:43}},loc:{start:{line:83,column:49},end:{line:87,column:9}},line:83},"14":{name:"stringifySpawnCommand",decl:{start:{line:96,column:9},end:{line:96,column:30}},loc:{start:{line:96,column:35},end:{line:98,column:1}},line:96},"15":{name:"asSpawnCommand",decl:{start:{line:107,column:9},end:{line:107,column:23}},loc:{start:{line:107,column:48},end:{line:114,column:1}},line:107},"16":{name:"poisonAndWait",decl:{start:{line:122,column:9},end:{line:122,column:22}},loc:{start:{line:122,column:37},end:{line:127,column:1}},line:122},"17":{name:"(anonymous_17)",decl:{start:{line:124,column:23},end:{line:124,column:24}},loc:{start:{line:124,column:44},end:{line:126,column:6}},line:124},"18":{name:"(anonymous_18)",decl:{start:{line:124,column:69},end:{line:124,column:70}},loc:{start:{line:124,column:75},end:{line:126,column:5}},line:124}},branchMap:{"0":{loc:{start:{line:17,column:16},end:{line:24,column:1}},type:"binary-expr",locations:[{start:{line:17,column:17},end:{line:17,column:21}},{start:{line:17,column:25},end:{line:17,column:39}},{start:{line:17,column:44},end:{line:24,column:1}}],line:17},"1":{loc:{start:{line:18,column:16},end:{line:18,column:34}},type:"binary-expr",locations:[{start:{line:18,column:16},end:{line:18,column:17}},{start:{line:18,column:22},end:{line:18,column:33}}],line:18},"2":{loc:{start:{line:21,column:32},end:{line:21,column:148}},type:"cond-expr",locations:[{start:{line:21,column:46},end:{line:21,column:67}},{start:{line:21,column:70},end:{line:21,column:148}}],line:21},"3":{loc:{start:{line:22,column:51},end:{line:22,column:67}},type:"binary-expr",locations:[{start:{line:22,column:51},end:{line:22,column:61}},{start:{line:22,column:65},end:{line:22,column:67}}],line:22},"4":{loc:{start:{line:46,column:51},end:{line:46,column:62}},type:"default-arg",locations:[{start:{line:46,column:60},end:{line:46,column:62}}],line:46},"5":{loc:{start:{line:48,column:73},end:{line:48,column:96}},type:"binary-expr",locations:[{start:{line:48,column:73},end:{line:48,column:90}},{start:{line:48,column:94},end:{line:48,column:96}}],line:48},"6":{loc:{start:{line:62,column:41},end:{line:62,column:50}},type:"default-arg",locations:[{start:{line:62,column:48},end:{line:62,column:50}}],line:62},"7":{loc:{start:{line:65,column:8},end:{line:68,column:9}},type:"if",locations:[{start:{line:65,column:8},end:{line:68,column:9}},{start:{line:65,column:8},end:{line:68,column:9}}],line:65},"8":{loc:{start:{line:71,column:30},end:{line:71,column:97}},type:"cond-expr",locations:[{start:{line:71,column:52},end:{line:71,column:79}},{start:{line:71,column:82},end:{line:71,column:97}}],line:71},"9":{loc:{start:{line:97,column:53},end:{line:97,column:87}},type:"cond-expr",locations:[{start:{line:97,column:65},end:{line:97,column:82}},{start:{line:97,column:85},end:{line:97,column:87}}],line:97},"10":{loc:{start:{line:107,column:34},end:{line:107,column:46}},type:"default-arg",locations:[{start:{line:107,column:44},end:{line:107,column:46}}],line:107}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0],"5":[0,0],"6":[0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var __awaiter=(cov_2pulv1kdq2.s[0]++,(cov_2pulv1kdq2.b[0][0]++,this)&&(cov_2pulv1kdq2.b[0][1]++,this.__awaiter)||(cov_2pulv1kdq2.b[0][2]++,function(thisArg,_arguments,P,generator){cov_2pulv1kdq2.f[0]++;cov_2pulv1kdq2.s[1]++;return new((cov_2pulv1kdq2.b[1][0]++,P)||(cov_2pulv1kdq2.b[1][1]++,P=Promise))(function(resolve,reject){cov_2pulv1kdq2.f[1]++;function fulfilled(value){cov_2pulv1kdq2.f[2]++;cov_2pulv1kdq2.s[2]++;try{cov_2pulv1kdq2.s[3]++;step(generator.next(value));}catch(e){cov_2pulv1kdq2.s[4]++;reject(e);}}function rejected(value){cov_2pulv1kdq2.f[3]++;cov_2pulv1kdq2.s[5]++;try{cov_2pulv1kdq2.s[6]++;step(generator["throw"](value));}catch(e){cov_2pulv1kdq2.s[7]++;reject(e);}}function step(result){cov_2pulv1kdq2.f[4]++;cov_2pulv1kdq2.s[8]++;result.done?(cov_2pulv1kdq2.b[2][0]++,resolve(result.value)):(cov_2pulv1kdq2.b[2][1]++,new P(function(resolve){cov_2pulv1kdq2.f[5]++;cov_2pulv1kdq2.s[9]++;resolve(result.value);}).then(fulfilled,rejected));}cov_2pulv1kdq2.s[10]++;step((generator=generator.apply(thisArg,(cov_2pulv1kdq2.b[3][0]++,_arguments)||(cov_2pulv1kdq2.b[3][1]++,[]))).next());});}));cov_2pulv1kdq2.s[11]++;Object.defineProperty(exports,"__esModule",{value:true});const automation_client_1=(cov_2pulv1kdq2.s[12]++,require("@atomist/automation-client"));const child_process_1=(cov_2pulv1kdq2.s[13]++,require("child_process"));const sprintf_js_1=(cov_2pulv1kdq2.s[14]++,require("sprintf-js"));const strip_ansi=(cov_2pulv1kdq2.s[15]++,require("strip-ansi"));const DelimitedWriteProgressLogDecorator_1=(cov_2pulv1kdq2.s[16]++,require("../../common/log/DelimitedWriteProgressLogDecorator"));/**
 * Default ErrorFinder that regards return code 0 as success
 * @param {number} code
 * @return {boolean}
 * @constructor
 */cov_2pulv1kdq2.s[17]++;exports.SuccessIsReturn0ErrorFinder=code=>{cov_2pulv1kdq2.f[6]++;cov_2pulv1kdq2.s[18]++;return code!==0;};/**
 * Spawn a process and watch
 * @param {SpawnCommand} spawnCommand
 * @param options options
 * @param {ProgressLog} log
 * @param {Partial<SpawnWatchOptions>} spOpts
 * @return {Promise<ChildProcessResult>}
 */function spawnAndWatch(spawnCommand,options,log,spOpts=(cov_2pulv1kdq2.b[4][0]++,{})){cov_2pulv1kdq2.f[7]++;cov_2pulv1kdq2.s[19]++;return __awaiter(this,void 0,void 0,function*(){cov_2pulv1kdq2.f[8]++;const childProcess=(cov_2pulv1kdq2.s[20]++,child_process_1.spawn(spawnCommand.command,(cov_2pulv1kdq2.b[5][0]++,spawnCommand.args)||(cov_2pulv1kdq2.b[5][1]++,[]),options));cov_2pulv1kdq2.s[21]++;automation_client_1.logger.info("%s > %s (spawn with pid=%d)",options.cwd,stringifySpawnCommand(spawnCommand),childProcess.pid);cov_2pulv1kdq2.s[22]++;return watchSpawned(childProcess,log,spOpts);});}cov_2pulv1kdq2.s[23]++;exports.spawnAndWatch=spawnAndWatch;/**
 * Handle the result of a spawned process, streaming back
 * output to log
 * @param childProcess
 * @param {ProgressLog} log to write stdout and stderr to
 * @param opts: Options for error parsing, ANSI code stripping etc.
 * @return {Promise<ChildProcessResult>}
 */function watchSpawned(childProcess,log,opts=(cov_2pulv1kdq2.b[6][0]++,{})){cov_2pulv1kdq2.f[9]++;cov_2pulv1kdq2.s[24]++;return new Promise((resolve,reject)=>{cov_2pulv1kdq2.f[10]++;const optsToUse=(cov_2pulv1kdq2.s[25]++,Object.assign({errorFinder:exports.SuccessIsReturn0ErrorFinder,stripAnsi:false},opts));cov_2pulv1kdq2.s[26]++;if(!optsToUse.errorFinder){cov_2pulv1kdq2.b[7][0]++;cov_2pulv1kdq2.s[27]++;// The caller specified undefined, which is an error. Ignore them, for they know not what they do.
optsToUse.errorFinder=exports.SuccessIsReturn0ErrorFinder;}else{cov_2pulv1kdq2.b[7][1]++;}const newLineDelimitedLog=(cov_2pulv1kdq2.s[28]++,new DelimitedWriteProgressLogDecorator_1.DelimitedWriteProgressLogDecorator(log,"\n"));function sendToLog(data){cov_2pulv1kdq2.f[11]++;const formatted=(cov_2pulv1kdq2.s[29]++,optsToUse.stripAnsi?(cov_2pulv1kdq2.b[8][0]++,strip_ansi(data.toString())):(cov_2pulv1kdq2.b[8][1]++,data.toString()));cov_2pulv1kdq2.s[30]++;return newLineDelimitedLog.write(formatted);}cov_2pulv1kdq2.s[31]++;childProcess.stdout.on("data",sendToLog);cov_2pulv1kdq2.s[32]++;childProcess.stderr.on("data",sendToLog);cov_2pulv1kdq2.s[33]++;childProcess.addListener("exit",(code,signal)=>{cov_2pulv1kdq2.f[12]++;cov_2pulv1kdq2.s[34]++;automation_client_1.logger.info("Spawn exit (pid=%d): code=%d, signal=%s",childProcess.pid,code,signal);cov_2pulv1kdq2.s[35]++;resolve({error:optsToUse.errorFinder(code,signal,log),code});});cov_2pulv1kdq2.s[36]++;childProcess.addListener("error",err=>{cov_2pulv1kdq2.f[13]++;cov_2pulv1kdq2.s[37]++;// Process could not be spawned or killed
automation_client_1.logger.warn("Spawn failure: %s",err);cov_2pulv1kdq2.s[38]++;reject(err);});});}cov_2pulv1kdq2.s[39]++;exports.watchSpawned=watchSpawned;/**
 * toString for a SpawnCommand. Used for logging.
 * @param {SpawnCommand} sc
 * @return {string}
 */function stringifySpawnCommand(sc){cov_2pulv1kdq2.f[14]++;cov_2pulv1kdq2.s[40]++;return sprintf_js_1.sprintf("%s %s",sc.command,!!sc.args?(cov_2pulv1kdq2.b[9][0]++,sc.args.join(" ")):(cov_2pulv1kdq2.b[9][1]++,""));}cov_2pulv1kdq2.s[41]++;exports.stringifySpawnCommand=stringifySpawnCommand;/**
 * Convenient function to create a spawn command from a sentence such as "npm run compile"
 * Does not respect quoted arguments
 * @param {string} sentence
 * @param options
 * @return {SpawnCommand}
 */function asSpawnCommand(sentence,options=(cov_2pulv1kdq2.b[10][0]++,{})){cov_2pulv1kdq2.f[15]++;const split=(cov_2pulv1kdq2.s[42]++,sentence.split(" "));cov_2pulv1kdq2.s[43]++;return{command:split[0],args:split.slice(1),options};}cov_2pulv1kdq2.s[44]++;exports.asSpawnCommand=asSpawnCommand;/**
 * Kill the child process and wait for it to shut down. This can take a while as child processes
 * may have shut down hooks.
 * @param {module:child_process.ChildProcess} childProcess
 * @return {Promise<any>}
 */function poisonAndWait(childProcess){cov_2pulv1kdq2.f[16]++;cov_2pulv1kdq2.s[45]++;childProcess.kill();cov_2pulv1kdq2.s[46]++;return new Promise((resolve,reject)=>{cov_2pulv1kdq2.f[17]++;cov_2pulv1kdq2.s[47]++;return childProcess.on("close",()=>{cov_2pulv1kdq2.f[18]++;cov_2pulv1kdq2.s[48]++;resolve();});});}cov_2pulv1kdq2.s[49]++;exports.poisonAndWait=poisonAndWait;//# sourceMappingURL=data:application/json;charset=utf-8;base64,