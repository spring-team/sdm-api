"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_2i4aclqxo1=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/listener/PushMapping.ts",hash="593f1d0beba716783ede54ac5d1d0a88d50435df",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/listener/PushMapping.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:22,column:0},end:{line:22,column:32}},"2":{start:{line:24,column:18},end:{line:24,column:19}},"3":{start:{line:25,column:4},end:{line:25,column:48}},"4":{start:{line:27,column:0},end:{line:27,column:38}}},fnMap:{"0":{name:"isPushMapping",decl:{start:{line:23,column:9},end:{line:23,column:22}},loc:{start:{line:23,column:26},end:{line:26,column:1}},line:23}},branchMap:{"0":{loc:{start:{line:25,column:11},end:{line:25,column:47}},type:"binary-expr",locations:[{start:{line:25,column:11},end:{line:25,column:23}},{start:{line:25,column:27},end:{line:25,column:47}}],line:25}},s:{"0":0,"1":0,"2":0,"3":0,"4":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_2i4aclqxo1.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});/**
 * Constant to indicate we should never match
 * @type {any}
 */cov_2i4aclqxo1.s[1]++;exports.DoNotSetAnyGoals=null;function isPushMapping(a){cov_2i4aclqxo1.f[0]++;const maybe=(cov_2i4aclqxo1.s[2]++,a);cov_2i4aclqxo1.s[3]++;return(cov_2i4aclqxo1.b[0][0]++,!!maybe.name)&&(cov_2i4aclqxo1.b[0][1]++,!!maybe.valueForPush);}cov_2i4aclqxo1.s[4]++;exports.isPushMapping=isPushMapping;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2NvbW1vbi9saXN0ZW5lci9QdXNoTWFwcGluZy50cyIsInNvdXJjZXMiOlsiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2NvbW1vbi9saXN0ZW5lci9QdXNoTWFwcGluZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7O0dBY0c7O0FBTUg7OztHQUdHO0FBQ1UsUUFBQSxnQkFBZ0IsR0FBZSxJQUFJLENBQUM7QUFtRGpELHVCQUE4QixDQUFNO0lBQ2hDLE1BQU0sS0FBSyxHQUFHLENBQXFCLENBQUM7SUFDcEMsT0FBTyxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQztBQUNoRCxDQUFDO0FBSEQsc0NBR0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IMKpIDIwMTggQXRvbWlzdCwgSW5jLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBQdXNoTGlzdGVuZXJJbnZvY2F0aW9uIH0gZnJvbSBcIi4vUHVzaExpc3RlbmVyXCI7XG5cbmV4cG9ydCB0eXBlIE5ldmVyTWF0Y2ggPSBudWxsO1xuXG4vKipcbiAqIENvbnN0YW50IHRvIGluZGljYXRlIHdlIHNob3VsZCBuZXZlciBtYXRjaFxuICogQHR5cGUge2FueX1cbiAqL1xuZXhwb3J0IGNvbnN0IERvTm90U2V0QW55R29hbHM6IE5ldmVyTWF0Y2ggPSBudWxsO1xuXG4vKipcbiAqIFJlc3VsdCBvZiBhIFB1c2hNYXBwaW5nLiBBIHJlc3VsdCBvZiB0aGUgZGVzaXJlZCB0eXBlIGlmXG4gKiB3ZSBtYXRjaC4gdW5kZWZpbmVkIGlmIHdlIGRvbid0IG1hdGNoLlxuICogUmV0dXJuIERvTm90U2V0QW55R29hbHMgKG51bGwpIHRvIHNob3J0Y3V0IGV2YWx1YXRpb24gb2YgdGhlIHByZXNlbnQgc2V0IG9mIHJ1bGVzLFxuICogdGVybWluYXRpbmcgZXZhbHVhdGlvbiBhbmQgZ3VhcmFudGVlIHRoZSByZXR1cm4gb2YgdW5kZWZpbmVkIGlmIHdlJ3ZlIHJlYWNoZWQgdGhpcyBwb2ludC5cbiAqIE9ubHkgZG8gc28gaWYgeW91IGFyZSBzdXJlXG4gKi9cbmV4cG9ydCB0eXBlIFB1c2hNYXBwaW5nUmVzdWx0PFY+ID0gUHJvbWlzZTxWIHwgdW5kZWZpbmVkIHwgTmV2ZXJNYXRjaD47XG5cbi8qKlxuICogQ29tcHV0ZSBhIHZhbHVlIGZvciB0aGUgZ2l2ZW4gcHVzaC4gUmV0dXJuIHVuZGVmaW5lZFxuICogaWYgd2UgZG9uJ3QgZmluZCBhIG1hcHBlZCB2YWx1ZS5cbiAqIFJldHVybiBEb05vdFNldEFueUdvYWxzIChudWxsKSB0byBzaG9ydGN1dCBldmFsdWF0aW9uIG9mIHRoZSBwcmVzZW50IHNldCBvZiBydWxlcyxcbiAqIHRlcm1pbmF0aW5nIGV2YWx1YXRpb24gYW5kIGd1YXJhbnRlZSB0aGUgcmV0dXJuIG9mIHVuZGVmaW5lZCBpZiB3ZSd2ZSByZWFjaGVkIHRoaXMgcG9pbnQuXG4gKiBPbmx5IGRvIHNvIGlmIHlvdSBhcmUgc3VyZVxuICogdGhhdCB0aGlzIGV2YWx1YXRpb24gbXVzdCBiZSBzaG9ydCBjaXJjdWl0ZWQgaWYgaXQgaGFzIHJlYWNoZWQgdGhpcyBwb2ludC5cbiAqIElmIGEgcHJldmlvdXMgcnVsZSBoYXMgbWF0Y2hlZCwgaXQgd2lsbCBzdGlsbCBiZSB1c2VkLlxuICogVGhlIHZhbHVlIG1heSBiZSBzdGF0aWNcbiAqIG9yIGNvbXB1dGVkIG9uIGRlbWFuZCwgZGVwZW5kaW5nIG9uIHRoZSBpbXBsZW1lbnRhdGlvbi5cbiAqIEBwYXJhbSB7UHVzaExpc3RlbmVySW52b2NhdGlvbn0gcFxuICovXG5leHBvcnQgdHlwZSBQdXNoVG9WYWx1ZTxWPiA9IChwOiBQdXNoTGlzdGVuZXJJbnZvY2F0aW9uKSA9PiBQdXNoTWFwcGluZ1Jlc3VsdDxWPjtcblxuLyoqXG4gKiBNYXBwaW5nIGZyb20gcHVzaCB0byB2YWx1ZSwgaWQgaXQgY2FuIGJlIHJlc29sdmVkLlxuICogVGhpcyBpcyBhIGNlbnRyYWwgaW50ZXJmYWNlIHVzZWQgdGhyb3VnaG91dCB0aGUgU0RNLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFB1c2hNYXBwaW5nPFY+IHtcblxuICAgIC8qKlxuICAgICAqIE5hbWUgb2YgdGhlIFB1c2hNYXBwaW5nLiBNdXN0IGJlIHVuaXF1ZVxuICAgICAqL1xuICAgIHJlYWRvbmx5IG5hbWU6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIENvbXB1dGUgYSB2YWx1ZSBmb3IgdGhlIGdpdmVuIHB1c2guIFJldHVybiB1bmRlZmluZWRcbiAgICAgKiBpZiB3ZSBkb24ndCBmaW5kIGEgbWFwcGVkIHZhbHVlLlxuICAgICAqIFJldHVybiBEb05vdFNldEFueUdvYWxzIChudWxsKSB0byBzaG9ydGN1dCBldmFsdWF0aW9uIG9mIHRoZSBwcmVzZW50IHNldCBvZiBydWxlcyxcbiAgICAgKiB0ZXJtaW5hdGluZyBldmFsdWF0aW9uIGFuZCBndWFyYW50ZWUgdGhlIHJldHVybiBvZiB1bmRlZmluZWQgaWYgd2UndmUgcmVhY2hlZCB0aGlzIHBvaW50LlxuICAgICAqIE9ubHkgZG8gc28gaWYgeW91IGFyZSBzdXJlXG4gICAgICogdGhhdCB0aGlzIGV2YWx1YXRpb24gbXVzdCBiZSBzaG9ydCBjaXJjdWl0ZWQgaWYgaXQgaGFzIHJlYWNoZWQgdGhpcyBwb2ludC5cbiAgICAgKiBJZiBhIHByZXZpb3VzIHJ1bGUgaGFzIG1hdGNoZWQsIGl0IHdpbGwgc3RpbGwgYmUgdXNlZC5cbiAgICAgKiBUaGUgdmFsdWUgbWF5IGJlIHN0YXRpY1xuICAgICAqIG9yIGNvbXB1dGVkIG9uIGRlbWFuZCwgZGVwZW5kaW5nIG9uIHRoZSBpbXBsZW1lbnRhdGlvbi5cbiAgICAgKiBAcGFyYW0ge1B1c2hMaXN0ZW5lckludm9jYXRpb259IHBcbiAgICAgKi9cbiAgICB2YWx1ZUZvclB1c2g6IFB1c2hUb1ZhbHVlPFY+O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNQdXNoTWFwcGluZyhhOiBhbnkpOiBhIGlzIFB1c2hNYXBwaW5nPGFueT4ge1xuICAgIGNvbnN0IG1heWJlID0gYSBhcyBQdXNoTWFwcGluZzxhbnk+O1xuICAgIHJldHVybiAhIW1heWJlLm5hbWUgJiYgISFtYXliZS52YWx1ZUZvclB1c2g7XG59XG4iXX0=