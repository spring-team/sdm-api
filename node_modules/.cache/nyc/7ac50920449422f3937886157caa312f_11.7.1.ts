"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_wzfj827b1=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/common/delivery/code/autofix/node/tsLintFixTest.ts",hash="288841a760436a58d543d58dca8c0b12d9b6e86b",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/common/delivery/code/autofix/node/tsLintFixTest.ts",statementMap:{"0":{start:{line:17,column:16},end:{line:24,column:1}},"1":{start:{line:18,column:4},end:{line:23,column:7}},"2":{start:{line:19,column:36},end:{line:19,column:97}},"3":{start:{line:19,column:42},end:{line:19,column:70}},"4":{start:{line:19,column:85},end:{line:19,column:95}},"5":{start:{line:20,column:35},end:{line:20,column:100}},"6":{start:{line:20,column:41},end:{line:20,column:73}},"7":{start:{line:20,column:88},end:{line:20,column:98}},"8":{start:{line:21,column:32},end:{line:21,column:149}},"9":{start:{line:21,column:97},end:{line:21,column:119}},"10":{start:{line:22,column:8},end:{line:22,column:78}},"11":{start:{line:25,column:0},end:{line:25,column:62}},"12":{start:{line:26,column:24},end:{line:26,column:93}},"13":{start:{line:27,column:23},end:{line:27,column:85}},"14":{start:{line:28,column:23},end:{line:28,column:80}},"15":{start:{line:29,column:31},end:{line:29,column:101}},"16":{start:{line:30,column:15},end:{line:30,column:38}},"17":{start:{line:31,column:27},end:{line:31,column:105}},"18":{start:{line:32,column:17},end:{line:32,column:90}},"19":{start:{line:33,column:32},end:{line:33,column:96}},"20":{start:{line:34,column:30},end:{line:34,column:92}},"21":{start:{line:35,column:0},end:{line:55,column:3}},"22":{start:{line:36,column:4},end:{line:54,column:23}},"23":{start:{line:36,column:43},end:{line:54,column:6}},"24":{start:{line:37,column:18},end:{line:37,column:153}},"25":{start:{line:39,column:8},end:{line:41,column:11}},"26":{start:{line:39,column:25},end:{line:41,column:10}},"27":{start:{line:40,column:12},end:{line:40,column:47}},"28":{start:{line:42,column:8},end:{line:44,column:11}},"29":{start:{line:42,column:23},end:{line:44,column:10}},"30":{start:{line:43,column:12},end:{line:43,column:47}},"31":{start:{line:45,column:18},end:{line:45,column:80}},"32":{start:{line:46,column:19},end:{line:46,column:67}},"33":{start:{line:48,column:8},end:{line:48,column:43}},"34":{start:{line:49,column:8},end:{line:49,column:41}},"35":{start:{line:50,column:8},end:{line:50,column:129}},"36":{start:{line:51,column:24},end:{line:51,column:46}},"37":{start:{line:52,column:8},end:{line:52,column:26}},"38":{start:{line:53,column:8},end:{line:53,column:66}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:44},end:{line:17,column:45}},loc:{start:{line:17,column:89},end:{line:24,column:1}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:36},end:{line:18,column:37}},loc:{start:{line:18,column:63},end:{line:23,column:5}},line:18},"2":{name:"fulfilled",decl:{start:{line:19,column:17},end:{line:19,column:26}},loc:{start:{line:19,column:34},end:{line:19,column:99}},line:19},"3":{name:"rejected",decl:{start:{line:20,column:17},end:{line:20,column:25}},loc:{start:{line:20,column:33},end:{line:20,column:102}},line:20},"4":{name:"step",decl:{start:{line:21,column:17},end:{line:21,column:21}},loc:{start:{line:21,column:30},end:{line:21,column:151}},line:21},"5":{name:"(anonymous_5)",decl:{start:{line:21,column:76},end:{line:21,column:77}},loc:{start:{line:21,column:95},end:{line:21,column:121}},line:21},"6":{name:"(anonymous_6)",decl:{start:{line:35,column:22},end:{line:35,column:23}},loc:{start:{line:35,column:28},end:{line:55,column:1}},line:35},"7":{name:"(anonymous_7)",decl:{start:{line:36,column:37},end:{line:36,column:38}},loc:{start:{line:36,column:43},end:{line:54,column:6}},line:36},"8":{name:"(anonymous_8)",decl:{start:{line:36,column:75},end:{line:36,column:76}},loc:{start:{line:36,column:88},end:{line:54,column:5}},line:36},"9":{name:"(anonymous_9)",decl:{start:{line:39,column:19},end:{line:39,column:20}},loc:{start:{line:39,column:25},end:{line:41,column:10}},line:39},"10":{name:"(anonymous_10)",decl:{start:{line:39,column:57},end:{line:39,column:58}},loc:{start:{line:39,column:70},end:{line:41,column:9}},line:39},"11":{name:"(anonymous_11)",decl:{start:{line:42,column:17},end:{line:42,column:18}},loc:{start:{line:42,column:23},end:{line:44,column:10}},line:42},"12":{name:"(anonymous_12)",decl:{start:{line:42,column:55},end:{line:42,column:56}},loc:{start:{line:42,column:68},end:{line:44,column:9}},line:42}},branchMap:{"0":{loc:{start:{line:17,column:16},end:{line:24,column:1}},type:"binary-expr",locations:[{start:{line:17,column:17},end:{line:17,column:21}},{start:{line:17,column:25},end:{line:17,column:39}},{start:{line:17,column:44},end:{line:24,column:1}}],line:17},"1":{loc:{start:{line:18,column:16},end:{line:18,column:34}},type:"binary-expr",locations:[{start:{line:18,column:16},end:{line:18,column:17}},{start:{line:18,column:22},end:{line:18,column:33}}],line:18},"2":{loc:{start:{line:21,column:32},end:{line:21,column:148}},type:"cond-expr",locations:[{start:{line:21,column:46},end:{line:21,column:67}},{start:{line:21,column:70},end:{line:21,column:148}}],line:21},"3":{loc:{start:{line:22,column:51},end:{line:22,column:67}},type:"binary-expr",locations:[{start:{line:22,column:51},end:{line:22,column:61}},{start:{line:22,column:65},end:{line:22,column:67}}],line:22}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var __awaiter=(cov_wzfj827b1.s[0]++,(cov_wzfj827b1.b[0][0]++,this)&&(cov_wzfj827b1.b[0][1]++,this.__awaiter)||(cov_wzfj827b1.b[0][2]++,function(thisArg,_arguments,P,generator){cov_wzfj827b1.f[0]++;cov_wzfj827b1.s[1]++;return new((cov_wzfj827b1.b[1][0]++,P)||(cov_wzfj827b1.b[1][1]++,P=Promise))(function(resolve,reject){cov_wzfj827b1.f[1]++;function fulfilled(value){cov_wzfj827b1.f[2]++;cov_wzfj827b1.s[2]++;try{cov_wzfj827b1.s[3]++;step(generator.next(value));}catch(e){cov_wzfj827b1.s[4]++;reject(e);}}function rejected(value){cov_wzfj827b1.f[3]++;cov_wzfj827b1.s[5]++;try{cov_wzfj827b1.s[6]++;step(generator["throw"](value));}catch(e){cov_wzfj827b1.s[7]++;reject(e);}}function step(result){cov_wzfj827b1.f[4]++;cov_wzfj827b1.s[8]++;result.done?(cov_wzfj827b1.b[2][0]++,resolve(result.value)):(cov_wzfj827b1.b[2][1]++,new P(function(resolve){cov_wzfj827b1.f[5]++;cov_wzfj827b1.s[9]++;resolve(result.value);}).then(fulfilled,rejected));}cov_wzfj827b1.s[10]++;step((generator=generator.apply(thisArg,(cov_wzfj827b1.b[3][0]++,_arguments)||(cov_wzfj827b1.b[3][1]++,[]))).next());});}));cov_wzfj827b1.s[11]++;Object.defineProperty(exports,"__esModule",{value:true});const GitHubRepoRef_1=(cov_wzfj827b1.s[12]++,require("@atomist/automation-client/operations/common/GitHubRepoRef"));const InMemoryFile_1=(cov_wzfj827b1.s[13]++,require("@atomist/automation-client/project/mem/InMemoryFile"));const ActionResult_1=(cov_wzfj827b1.s[14]++,require("@atomist/automation-client/action/ActionResult"));const GitCommandGitProject_1=(cov_wzfj827b1.s[15]++,require("@atomist/automation-client/project/git/GitCommandGitProject"));const assert=(cov_wzfj827b1.s[16]++,require("power-assert"));const executeAutofixes_1=(cov_wzfj827b1.s[17]++,require("../../../../../../src/common/delivery/code/autofix/executeAutofixes"));const tslint_1=(cov_wzfj827b1.s[18]++,require("../../../../../../src/common/delivery/code/autofix/node/tslint"));const fakeRunWithLogContext_1=(cov_wzfj827b1.s[19]++,require("../../../../../../src/util/test/fakeRunWithLogContext"));const SingleProjectLoader_1=(cov_wzfj827b1.s[20]++,require("../../../../../../src/util/test/SingleProjectLoader"));cov_wzfj827b1.s[21]++;describe("tsLintFix",()=>{cov_wzfj827b1.f[6]++;cov_wzfj827b1.s[22]++;it("should lint and make fixes",()=>{cov_wzfj827b1.f[7]++;cov_wzfj827b1.s[23]++;return __awaiter(this,void 0,void 0,function*(){cov_wzfj827b1.f[8]++;const p=(cov_wzfj827b1.s[24]++,yield GitCommandGitProject_1.GitCommandGitProject.cloned({token:null},new GitHubRepoRef_1.GitHubRepoRef("atomist","tree-path-ts")));// Make commit and push harmless
cov_wzfj827b1.s[25]++;p.commit=()=>{cov_wzfj827b1.f[9]++;cov_wzfj827b1.s[26]++;return __awaiter(this,void 0,void 0,function*(){cov_wzfj827b1.f[10]++;cov_wzfj827b1.s[27]++;return ActionResult_1.successOn(p);});};cov_wzfj827b1.s[28]++;p.push=()=>{cov_wzfj827b1.f[11]++;cov_wzfj827b1.s[29]++;return __awaiter(this,void 0,void 0,function*(){cov_wzfj827b1.f[12]++;cov_wzfj827b1.s[30]++;return ActionResult_1.successOn(p);});};const f=(cov_wzfj827b1.s[31]++,new InMemoryFile_1.InMemoryFile("src/bad.ts","const foo\n\n"));const pl=(cov_wzfj827b1.s[32]++,new SingleProjectLoader_1.SingleProjectLoader(p));// Now mess it up with a lint error
cov_wzfj827b1.s[33]++;yield p.addFile(f.path,f.content);cov_wzfj827b1.s[34]++;assert(!!p.findFileSync(f.path));cov_wzfj827b1.s[35]++;yield executeAutofixes_1.executeAutofixes(pl,[tslint_1.tslintFix])(fakeRunWithLogContext_1.fakeRunWithLogContext(p.id));const fileNow=(cov_wzfj827b1.s[36]++,p.findFileSync(f.path));cov_wzfj827b1.s[37]++;assert(!!fileNow);cov_wzfj827b1.s[38]++;assert(fileNow.getContentSync().startsWith("const foo;"));});}).timeout(40000);});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvdGVzdC9jb21tb24vZGVsaXZlcnkvY29kZS9hdXRvZml4L25vZGUvdHNMaW50Rml4VGVzdC50cyIsInNvdXJjZXMiOlsiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvdGVzdC9jb21tb24vZGVsaXZlcnkvY29kZS9hdXRvZml4L25vZGUvdHNMaW50Rml4VGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7O0dBY0c7Ozs7Ozs7Ozs7QUFFSCw4RkFBMkY7QUFDM0Ysc0ZBQW1GO0FBRW5GLGlGQUEyRTtBQUUzRSxzR0FBbUc7QUFDbkcsdUNBQXVDO0FBQ3ZDLDBHQUF1RztBQUN2RywyRkFBMkY7QUFDM0YsaUdBQThGO0FBQzlGLDZGQUEwRjtBQUUxRixRQUFRLENBQUMsV0FBVyxFQUFFLEdBQUcsRUFBRTtJQUV2QixFQUFFLENBQUMsNEJBQTRCLEVBQUUsR0FBUyxFQUFFO1FBQ3hDLE1BQU0sQ0FBQyxHQUFHLE1BQU0sMkNBQW9CLENBQUMsTUFBTSxDQUFDLEVBQUMsS0FBSyxFQUFFLElBQUksRUFBQyxFQUFFLElBQUksNkJBQWEsQ0FBQyxTQUFTLEVBQUUsY0FBYyxDQUFDLENBQUMsQ0FBQztRQUN6RyxnQ0FBZ0M7UUFDaEMsQ0FBQyxDQUFDLE1BQU0sR0FBRyxHQUFTLEVBQUU7WUFDbEIsT0FBTyx3QkFBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3hCLENBQUMsQ0FBQSxDQUFDO1FBQ0YsQ0FBQyxDQUFDLElBQUksR0FBRyxHQUFTLEVBQUU7WUFDaEIsT0FBTyx3QkFBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3hCLENBQUMsQ0FBQSxDQUFDO1FBQ0YsTUFBTSxDQUFDLEdBQUcsSUFBSSwyQkFBWSxDQUFDLFlBQVksRUFBRSxlQUFlLENBQUMsQ0FBQztRQUMxRCxNQUFNLEVBQUUsR0FBRyxJQUFJLHlDQUFtQixDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3RDLG1DQUFtQztRQUNuQyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDbkMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBRWpDLE1BQU0sbUNBQWdCLENBQUMsRUFBRSxFQUFFLENBQUMsa0JBQVMsQ0FBQyxDQUFDLENBQUMsNkNBQXFCLENBQUMsQ0FBQyxDQUFDLEVBQW1CLENBQUMsQ0FBQyxDQUFDO1FBQ3RGLE1BQU0sT0FBTyxHQUFHLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZDLE1BQU0sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDbEIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxjQUFjLEVBQUUsQ0FBQyxVQUFVLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztJQUM5RCxDQUFDLENBQUEsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUV0QixDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgwqkgMjAxOCBBdG9taXN0LCBJbmMuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IEdpdEh1YlJlcG9SZWYgfSBmcm9tIFwiQGF0b21pc3QvYXV0b21hdGlvbi1jbGllbnQvb3BlcmF0aW9ucy9jb21tb24vR2l0SHViUmVwb1JlZlwiO1xuaW1wb3J0IHsgSW5NZW1vcnlGaWxlIH0gZnJvbSBcIkBhdG9taXN0L2F1dG9tYXRpb24tY2xpZW50L3Byb2plY3QvbWVtL0luTWVtb3J5RmlsZVwiO1xuXG5pbXBvcnQgeyBzdWNjZXNzT24gfSBmcm9tIFwiQGF0b21pc3QvYXV0b21hdGlvbi1jbGllbnQvYWN0aW9uL0FjdGlvblJlc3VsdFwiO1xuaW1wb3J0IHsgUmVtb3RlUmVwb1JlZiB9IGZyb20gXCJAYXRvbWlzdC9hdXRvbWF0aW9uLWNsaWVudC9vcGVyYXRpb25zL2NvbW1vbi9SZXBvSWRcIjtcbmltcG9ydCB7IEdpdENvbW1hbmRHaXRQcm9qZWN0IH0gZnJvbSBcIkBhdG9taXN0L2F1dG9tYXRpb24tY2xpZW50L3Byb2plY3QvZ2l0L0dpdENvbW1hbmRHaXRQcm9qZWN0XCI7XG5pbXBvcnQgKiBhcyBhc3NlcnQgZnJvbSBcInBvd2VyLWFzc2VydFwiO1xuaW1wb3J0IHsgZXhlY3V0ZUF1dG9maXhlcyB9IGZyb20gXCIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29tbW9uL2RlbGl2ZXJ5L2NvZGUvYXV0b2ZpeC9leGVjdXRlQXV0b2ZpeGVzXCI7XG5pbXBvcnQgeyB0c2xpbnRGaXggfSBmcm9tIFwiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbW1vbi9kZWxpdmVyeS9jb2RlL2F1dG9maXgvbm9kZS90c2xpbnRcIjtcbmltcG9ydCB7IGZha2VSdW5XaXRoTG9nQ29udGV4dCB9IGZyb20gXCIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvdXRpbC90ZXN0L2Zha2VSdW5XaXRoTG9nQ29udGV4dFwiO1xuaW1wb3J0IHsgU2luZ2xlUHJvamVjdExvYWRlciB9IGZyb20gXCIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvdXRpbC90ZXN0L1NpbmdsZVByb2plY3RMb2FkZXJcIjtcblxuZGVzY3JpYmUoXCJ0c0xpbnRGaXhcIiwgKCkgPT4ge1xuXG4gICAgaXQoXCJzaG91bGQgbGludCBhbmQgbWFrZSBmaXhlc1wiLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHAgPSBhd2FpdCBHaXRDb21tYW5kR2l0UHJvamVjdC5jbG9uZWQoe3Rva2VuOiBudWxsfSwgbmV3IEdpdEh1YlJlcG9SZWYoXCJhdG9taXN0XCIsIFwidHJlZS1wYXRoLXRzXCIpKTtcbiAgICAgICAgLy8gTWFrZSBjb21taXQgYW5kIHB1c2ggaGFybWxlc3NcbiAgICAgICAgcC5jb21taXQgPSBhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gc3VjY2Vzc09uKHApO1xuICAgICAgICB9O1xuICAgICAgICBwLnB1c2ggPSBhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gc3VjY2Vzc09uKHApO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBmID0gbmV3IEluTWVtb3J5RmlsZShcInNyYy9iYWQudHNcIiwgXCJjb25zdCBmb29cXG5cXG5cIik7XG4gICAgICAgIGNvbnN0IHBsID0gbmV3IFNpbmdsZVByb2plY3RMb2FkZXIocCk7XG4gICAgICAgIC8vIE5vdyBtZXNzIGl0IHVwIHdpdGggYSBsaW50IGVycm9yXG4gICAgICAgIGF3YWl0IHAuYWRkRmlsZShmLnBhdGgsIGYuY29udGVudCk7XG4gICAgICAgIGFzc2VydCghIXAuZmluZEZpbGVTeW5jKGYucGF0aCkpO1xuXG4gICAgICAgIGF3YWl0IGV4ZWN1dGVBdXRvZml4ZXMocGwsIFt0c2xpbnRGaXhdKShmYWtlUnVuV2l0aExvZ0NvbnRleHQocC5pZCBhcyBSZW1vdGVSZXBvUmVmKSk7XG4gICAgICAgIGNvbnN0IGZpbGVOb3cgPSBwLmZpbmRGaWxlU3luYyhmLnBhdGgpO1xuICAgICAgICBhc3NlcnQoISFmaWxlTm93KTtcbiAgICAgICAgYXNzZXJ0KGZpbGVOb3cuZ2V0Q29udGVudFN5bmMoKS5zdGFydHNXaXRoKFwiY29uc3QgZm9vO1wiKSk7XG4gICAgfSkudGltZW91dCg0MDAwMCk7XG5cbn0pO1xuIl19