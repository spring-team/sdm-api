"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_1phqow6cqx=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/handlers/events/delivery/goals/executeGoal.ts",hash="04774a9d3b7995d7e18cbd4ff01094a717f44366",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/handlers/events/delivery/goals/executeGoal.ts",statementMap:{"0":{start:{line:17,column:16},end:{line:24,column:1}},"1":{start:{line:18,column:4},end:{line:23,column:7}},"2":{start:{line:19,column:36},end:{line:19,column:97}},"3":{start:{line:19,column:42},end:{line:19,column:70}},"4":{start:{line:19,column:85},end:{line:19,column:95}},"5":{start:{line:20,column:35},end:{line:20,column:100}},"6":{start:{line:20,column:41},end:{line:20,column:73}},"7":{start:{line:20,column:88},end:{line:20,column:98}},"8":{start:{line:21,column:32},end:{line:21,column:149}},"9":{start:{line:21,column:97},end:{line:21,column:119}},"10":{start:{line:22,column:8},end:{line:22,column:78}},"11":{start:{line:25,column:0},end:{line:25,column:62}},"12":{start:{line:26,column:28},end:{line:26,column:65}},"13":{start:{line:27,column:18},end:{line:27,column:63}},"14":{start:{line:28,column:13},end:{line:28,column:28}},"15":{start:{line:29,column:21},end:{line:29,column:76}},"16":{start:{line:30,column:26},end:{line:30,column:94}},"17":{start:{line:31,column:18},end:{line:31,column:58}},"18":{start:{line:32,column:21},end:{line:32,column:42}},"19":{start:{line:33,column:18},end:{line:33,column:48}},"20":{start:{line:34,column:18},end:{line:34,column:65}},"21":{start:{line:46,column:4},end:{line:95,column:7}},"22":{start:{line:47,column:20},end:{line:47,column:32}},"23":{start:{line:48,column:53},end:{line:48,column:57}},"24":{start:{line:49,column:35},end:{line:49,column:59}},"25":{start:{line:50,column:8},end:{line:50,column:153}},"26":{start:{line:51,column:8},end:{line:51,column:89}},"27":{start:{line:52,column:8},end:{line:94,column:9}},"28":{start:{line:54,column:25},end:{line:54,column:71}},"29":{start:{line:56,column:12},end:{line:73,column:13}},"30":{start:{line:58,column:33},end:{line:67,column:18}},"31":{start:{line:60,column:20},end:{line:60,column:77}},"32":{start:{line:61,column:20},end:{line:61,column:49}},"33":{start:{line:62,column:20},end:{line:62,column:103}},"34":{start:{line:63,column:20},end:{line:66,column:57}},"35":{start:{line:66,column:36},end:{line:66,column:55}},"36":{start:{line:68,column:16},end:{line:71,column:17}},"37":{start:{line:69,column:20},end:{line:69,column:137}},"38":{start:{line:70,column:20},end:{line:70,column:61}},"39":{start:{line:72,column:16},end:{line:72,column:63}},"40":{start:{line:75,column:12},end:{line:84,column:13}},"41":{start:{line:76,column:33},end:{line:76,column:80}},"42":{start:{line:77,column:16},end:{line:79,column:17}},"43":{start:{line:78,column:20},end:{line:78,column:61}},"44":{start:{line:80,column:16},end:{line:80,column:63}},"45":{start:{line:83,column:16},end:{line:83,column:186}},"46":{start:{line:85,column:12},end:{line:85,column:105}},"47":{start:{line:86,column:12},end:{line:86,column:94}},"48":{start:{line:87,column:12},end:{line:87,column:47}},"49":{start:{line:90,column:12},end:{line:90,column:122}},"50":{start:{line:91,column:12},end:{line:91,column:55}},"51":{start:{line:92,column:12},end:{line:92,column:119}},"52":{start:{line:93,column:12},end:{line:93,column:52}},"53":{start:{line:97,column:0},end:{line:97,column:34}},"54":{start:{line:99,column:4},end:{line:127,column:7}},"55":{start:{line:100,column:34},end:{line:100,column:39}},"56":{start:{line:101,column:58},end:{line:101,column:62}},"57":{start:{line:102,column:8},end:{line:126,column:12}},"58":{start:{line:102,column:96},end:{line:126,column:10}},"59":{start:{line:103,column:25},end:{line:103,column:55}},"60":{start:{line:104,column:12},end:{line:124,column:13}},"61":{start:{line:105,column:16},end:{line:105,column:91}},"62":{start:{line:106,column:29},end:{line:115,column:17}},"63":{start:{line:116,column:29},end:{line:118,column:18}},"64":{start:{line:117,column:41},end:{line:117,column:51}},"65":{start:{line:119,column:16},end:{line:121,column:17}},"66":{start:{line:120,column:20},end:{line:120,column:57}},"67":{start:{line:122,column:16},end:{line:122,column:92}},"68":{start:{line:123,column:16},end:{line:123,column:30}},"69":{start:{line:125,column:12},end:{line:125,column:47}},"70":{start:{line:129,column:0},end:{line:129,column:34}},"71":{start:{line:131,column:4},end:{line:131,column:71}},"72":{start:{line:134,column:66},end:{line:134,column:76}},"73":{start:{line:135,column:21},end:{line:136,column:67}},"74":{start:{line:139,column:16},end:{line:139,column:50}},"75":{start:{line:140,column:4},end:{line:145,column:7}},"76":{start:{line:147,column:0},end:{line:147,column:32}},"77":{start:{line:149,column:51},end:{line:149,column:61}},"78":{start:{line:150,column:4},end:{line:154,column:128}},"79":{start:{line:154,column:20},end:{line:154,column:126}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:44},end:{line:17,column:45}},loc:{start:{line:17,column:89},end:{line:24,column:1}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:36},end:{line:18,column:37}},loc:{start:{line:18,column:63},end:{line:23,column:5}},line:18},"2":{name:"fulfilled",decl:{start:{line:19,column:17},end:{line:19,column:26}},loc:{start:{line:19,column:34},end:{line:19,column:99}},line:19},"3":{name:"rejected",decl:{start:{line:20,column:17},end:{line:20,column:25}},loc:{start:{line:20,column:33},end:{line:20,column:102}},line:20},"4":{name:"step",decl:{start:{line:21,column:17},end:{line:21,column:21}},loc:{start:{line:21,column:30},end:{line:21,column:151}},line:21},"5":{name:"(anonymous_5)",decl:{start:{line:21,column:76},end:{line:21,column:77}},loc:{start:{line:21,column:95},end:{line:21,column:121}},line:21},"6":{name:"executeGoal",decl:{start:{line:45,column:9},end:{line:45,column:20}},loc:{start:{line:45,column:74},end:{line:96,column:1}},line:45},"7":{name:"(anonymous_7)",decl:{start:{line:46,column:43},end:{line:46,column:44}},loc:{start:{line:46,column:56},end:{line:95,column:5}},line:46},"8":{name:"(anonymous_8)",decl:{start:{line:59,column:27},end:{line:59,column:28}},loc:{start:{line:59,column:34},end:{line:67,column:17}},line:59},"9":{name:"(anonymous_9)",decl:{start:{line:66,column:30},end:{line:66,column:31}},loc:{start:{line:66,column:36},end:{line:66,column:55}},line:66},"10":{name:"executeHook",decl:{start:{line:98,column:9},end:{line:98,column:20}},loc:{start:{line:98,column:50},end:{line:128,column:1}},line:98},"11":{name:"(anonymous_11)",decl:{start:{line:99,column:43},end:{line:99,column:44}},loc:{start:{line:99,column:56},end:{line:127,column:5}},line:99},"12":{name:"(anonymous_12)",decl:{start:{line:102,column:89},end:{line:102,column:90}},loc:{start:{line:102,column:96},end:{line:126,column:10}},line:102},"13":{name:"(anonymous_13)",decl:{start:{line:102,column:128},end:{line:102,column:129}},loc:{start:{line:102,column:141},end:{line:126,column:9}},line:102},"14":{name:"(anonymous_14)",decl:{start:{line:117,column:33},end:{line:117,column:34}},loc:{start:{line:117,column:41},end:{line:117,column:51}},line:117},"15":{name:"goalToHookFile",decl:{start:{line:130,column:9},end:{line:130,column:23}},loc:{start:{line:130,column:41},end:{line:132,column:1}},line:130},"16":{name:"markStatus",decl:{start:{line:133,column:9},end:{line:133,column:19}},loc:{start:{line:133,column:32},end:{line:146,column:1}},line:133},"17":{name:"markGoalInProcess",decl:{start:{line:148,column:9},end:{line:148,column:26}},loc:{start:{line:148,column:39},end:{line:155,column:1}},line:148},"18":{name:"(anonymous_18)",decl:{start:{line:154,column:13},end:{line:154,column:14}},loc:{start:{line:154,column:20},end:{line:154,column:126}},line:154}},branchMap:{"0":{loc:{start:{line:17,column:16},end:{line:24,column:1}},type:"binary-expr",locations:[{start:{line:17,column:17},end:{line:17,column:21}},{start:{line:17,column:25},end:{line:17,column:39}},{start:{line:17,column:44},end:{line:24,column:1}}],line:17},"1":{loc:{start:{line:18,column:16},end:{line:18,column:34}},type:"binary-expr",locations:[{start:{line:18,column:16},end:{line:18,column:17}},{start:{line:18,column:22},end:{line:18,column:33}}],line:18},"2":{loc:{start:{line:21,column:32},end:{line:21,column:148}},type:"cond-expr",locations:[{start:{line:21,column:46},end:{line:21,column:67}},{start:{line:21,column:70},end:{line:21,column:148}}],line:21},"3":{loc:{start:{line:22,column:51},end:{line:22,column:67}},type:"binary-expr",locations:[{start:{line:22,column:51},end:{line:22,column:61}},{start:{line:22,column:65},end:{line:22,column:67}}],line:22},"4":{loc:{start:{line:56,column:12},end:{line:73,column:13}},type:"if",locations:[{start:{line:56,column:12},end:{line:73,column:13}},{start:{line:56,column:12},end:{line:73,column:13}}],line:56},"5":{loc:{start:{line:68,column:16},end:{line:71,column:17}},type:"if",locations:[{start:{line:68,column:16},end:{line:71,column:17}},{start:{line:68,column:16},end:{line:71,column:17}}],line:68},"6":{loc:{start:{line:75,column:12},end:{line:84,column:13}},type:"if",locations:[{start:{line:75,column:12},end:{line:84,column:13}},{start:{line:75,column:12},end:{line:84,column:13}}],line:75},"7":{loc:{start:{line:77,column:16},end:{line:79,column:17}},type:"if",locations:[{start:{line:77,column:16},end:{line:79,column:17}},{start:{line:77,column:16},end:{line:79,column:17}}],line:77},"8":{loc:{start:{line:104,column:12},end:{line:124,column:13}},type:"if",locations:[{start:{line:104,column:12},end:{line:124,column:13}},{start:{line:104,column:12},end:{line:124,column:13}}],line:104},"9":{loc:{start:{line:119,column:16},end:{line:121,column:17}},type:"if",locations:[{start:{line:119,column:16},end:{line:121,column:17}},{start:{line:119,column:16},end:{line:121,column:17}}],line:119},"10":{loc:{start:{line:135,column:21},end:{line:136,column:67}},type:"cond-expr",locations:[{start:{line:135,column:41},end:{line:135,column:50}},{start:{line:136,column:8},end:{line:136,column:67}}],line:135},"11":{loc:{start:{line:136,column:8},end:{line:136,column:67}},type:"cond-expr",locations:[{start:{line:136,column:33},end:{line:136,column:55}},{start:{line:136,column:58},end:{line:136,column:67}}],line:136},"12":{loc:{start:{line:139,column:16},end:{line:139,column:50}},type:"binary-expr",locations:[{start:{line:139,column:16},end:{line:139,column:32}},{start:{line:139,column:36},end:{line:139,column:50}}],line:139}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var __awaiter=(cov_1phqow6cqx.s[0]++,(cov_1phqow6cqx.b[0][0]++,this)&&(cov_1phqow6cqx.b[0][1]++,this.__awaiter)||(cov_1phqow6cqx.b[0][2]++,function(thisArg,_arguments,P,generator){cov_1phqow6cqx.f[0]++;cov_1phqow6cqx.s[1]++;return new((cov_1phqow6cqx.b[1][0]++,P)||(cov_1phqow6cqx.b[1][1]++,P=Promise))(function(resolve,reject){cov_1phqow6cqx.f[1]++;function fulfilled(value){cov_1phqow6cqx.f[2]++;cov_1phqow6cqx.s[2]++;try{cov_1phqow6cqx.s[3]++;step(generator.next(value));}catch(e){cov_1phqow6cqx.s[4]++;reject(e);}}function rejected(value){cov_1phqow6cqx.f[3]++;cov_1phqow6cqx.s[5]++;try{cov_1phqow6cqx.s[6]++;step(generator["throw"](value));}catch(e){cov_1phqow6cqx.s[7]++;reject(e);}}function step(result){cov_1phqow6cqx.f[4]++;cov_1phqow6cqx.s[8]++;result.done?(cov_1phqow6cqx.b[2][0]++,resolve(result.value)):(cov_1phqow6cqx.b[2][1]++,new P(function(resolve){cov_1phqow6cqx.f[5]++;cov_1phqow6cqx.s[9]++;resolve(result.value);}).then(fulfilled,rejected));}cov_1phqow6cqx.s[10]++;step((generator=generator.apply(thisArg,(cov_1phqow6cqx.b[3][0]++,_arguments)||(cov_1phqow6cqx.b[3][1]++,[]))).next());});}));cov_1phqow6cqx.s[11]++;Object.defineProperty(exports,"__esModule",{value:true});const automation_client_1=(cov_1phqow6cqx.s[12]++,require("@atomist/automation-client"));const globals_1=(cov_1phqow6cqx.s[13]++,require("@atomist/automation-client/globals"));const path=(cov_1phqow6cqx.s[14]++,require("path"));const storeGoals_1=(cov_1phqow6cqx.s[15]++,require("../../../../common/delivery/goals/storeGoals"));const reportGoalError_1=(cov_1phqow6cqx.s[16]++,require("../../../../common/delivery/goals/support/reportGoalError"));const spawned_1=(cov_1phqow6cqx.s[17]++,require("../../../../util/misc/spawned"));const sprintf_js_1=(cov_1phqow6cqx.s[18]++,require("sprintf-js"));const stringify=(cov_1phqow6cqx.s[19]++,require("json-stringify-safe"));const toToken_1=(cov_1phqow6cqx.s[20]++,require("../../../../util/credentials/toToken"));/**
 * Central function to execute a goal with progress logging
 * @param {{projectLoader: ProjectLoader}} rules
 * @param {ExecuteGoalWithLog} execute
 * @param {RunWithLogContext} rwlc
 * @param {SdmGoal} sdmGoal
 * @param {Goal} goal
 * @param {InterpretLog} logInterpreter
 * @return {Promise<ExecuteGoalResult>}
 */function executeGoal(rules,execute,rwlc,sdmGoal,goal,logInterpreter){cov_1phqow6cqx.f[6]++;cov_1phqow6cqx.s[21]++;return __awaiter(this,void 0,void 0,function*(){cov_1phqow6cqx.f[7]++;const ctx=(cov_1phqow6cqx.s[22]++,rwlc.context);const{addressChannels,progressLog,id}=(cov_1phqow6cqx.s[23]++,rwlc);const implementationName=(cov_1phqow6cqx.s[24]++,sdmGoal.fulfillment.name);cov_1phqow6cqx.s[25]++;automation_client_1.logger.info(`Running ${sdmGoal.name}. Triggered by ${sdmGoal.state} status: ${sdmGoal.externalKey}: ${sdmGoal.description}`);cov_1phqow6cqx.s[26]++;yield markGoalInProcess({ctx,sdmGoal,goal,progressLogUrl:progressLog.url});cov_1phqow6cqx.s[27]++;try{// execute pre hook
let result=(cov_1phqow6cqx.s[28]++,yield executeHook(rules,rwlc,sdmGoal,"pre"));// TODO CD is there a isSuccess(result) method somewhere
cov_1phqow6cqx.s[29]++;if(result.code===0){cov_1phqow6cqx.b[4][0]++;// execute the actual goal
let goalResult=(cov_1phqow6cqx.s[30]++,yield execute(rwlc).catch(err=>{cov_1phqow6cqx.f[8]++;cov_1phqow6cqx.s[31]++;progressLog.write("ERROR caught: "+err.message+"\n");cov_1phqow6cqx.s[32]++;progressLog.write(err.stack);cov_1phqow6cqx.s[33]++;progressLog.write(sprintf_js_1.sprintf("Full error object: [%s]",stringify(err)));cov_1phqow6cqx.s[34]++;return reportGoalError_1.reportGoalError({goal,implementationName,addressChannels,progressLog,id,logInterpreter},err).then(()=>{cov_1phqow6cqx.f[9]++;cov_1phqow6cqx.s[35]++;return Promise.reject(err);});}));cov_1phqow6cqx.s[36]++;if(!goalResult){cov_1phqow6cqx.b[5][0]++;cov_1phqow6cqx.s[37]++;automation_client_1.logger.error("Execute method for %s of %s returned undefined",implementationName,sdmGoal.name);cov_1phqow6cqx.s[38]++;goalResult=automation_client_1.Success;}else{cov_1phqow6cqx.b[5][1]++;}cov_1phqow6cqx.s[39]++;result=Object.assign({},result,goalResult);}else{cov_1phqow6cqx.b[4][1]++;}// execute post hook
cov_1phqow6cqx.s[40]++;if(result.code===0){cov_1phqow6cqx.b[6][0]++;let hookResult=(cov_1phqow6cqx.s[41]++,yield executeHook(rules,rwlc,sdmGoal,"post"));cov_1phqow6cqx.s[42]++;if(!hookResult){cov_1phqow6cqx.b[7][0]++;cov_1phqow6cqx.s[43]++;hookResult=automation_client_1.Success;}else{cov_1phqow6cqx.b[7][1]++;}cov_1phqow6cqx.s[44]++;result=Object.assign({},result,hookResult);}else{cov_1phqow6cqx.b[6][1]++;cov_1phqow6cqx.s[45]++;yield reportGoalError_1.reportGoalError({goal,implementationName,addressChannels,progressLog,id,logInterpreter},new Error("Failure reported: "+result.message));}cov_1phqow6cqx.s[46]++;automation_client_1.logger.info("ExecuteGoal: result of %s: %j",implementationName,result);cov_1phqow6cqx.s[47]++;yield markStatus({ctx,sdmGoal,goal,result,progressLogUrl:progressLog.url});cov_1phqow6cqx.s[48]++;return automation_client_1.Success;}catch(err){cov_1phqow6cqx.s[49]++;automation_client_1.logger.warn("Error executing %s on %s: %s",implementationName,sdmGoal.sha,err.message);cov_1phqow6cqx.s[50]++;automation_client_1.logger.warn(err.stack);cov_1phqow6cqx.s[51]++;yield markStatus({ctx,sdmGoal,goal,result:{code:1},error:err,progressLogUrl:progressLog.url});cov_1phqow6cqx.s[52]++;return automation_client_1.failure(err);}});}cov_1phqow6cqx.s[53]++;exports.executeGoal=executeGoal;function executeHook(rules,rwlc,sdmGoal,stage){cov_1phqow6cqx.f[10]++;cov_1phqow6cqx.s[54]++;return __awaiter(this,void 0,void 0,function*(){cov_1phqow6cqx.f[11]++;const{projectLoader}=(cov_1phqow6cqx.s[55]++,rules);const{credentials,id,context,progressLog}=(cov_1phqow6cqx.s[56]++,rwlc);cov_1phqow6cqx.s[57]++;return projectLoader.doWithProject({credentials,id,context,readOnly:true},p=>{cov_1phqow6cqx.f[12]++;cov_1phqow6cqx.s[58]++;return __awaiter(this,void 0,void 0,function*(){cov_1phqow6cqx.f[13]++;const hook=(cov_1phqow6cqx.s[59]++,goalToHookFile(sdmGoal,stage));cov_1phqow6cqx.s[60]++;if(p.fileExistsSync(`.atomist/hooks/${hook}`)){cov_1phqow6cqx.b[8][0]++;cov_1phqow6cqx.s[61]++;automation_client_1.logger.info("Invoking goal %s hook '%s'",stage,hook);const opts=(cov_1phqow6cqx.s[62]++,{cwd:path.join(p.baseDir,".atomist","hooks"),env:Object.assign({},process.env,{// TODO cd do we need more variables to pass over?
// jess: I vote for passing the fewest possible -- like just correlation ID maybe, to show it
// can be done.
// This is an interface that is easy to expand and very hard to contract.
// plus, this is secure information; must we provide it to a script in any repo?
GITHUB_TOKEN:toToken_1.toToken(credentials),ATOMIST_TEAM:context.teamId,ATOMIST_CORRELATION_ID:context.correlationId,ATOMIST_JWT:globals_1.jwtToken()})});let result=(cov_1phqow6cqx.s[63]++,yield spawned_1.spawnAndWatch({command:path.join(p.baseDir,".atomist","hooks",hook),args:[]},opts,progressLog,{errorFinder:code=>{cov_1phqow6cqx.f[14]++;cov_1phqow6cqx.s[64]++;return code!==0;}}));cov_1phqow6cqx.s[65]++;if(!result){cov_1phqow6cqx.b[9][0]++;cov_1phqow6cqx.s[66]++;result=automation_client_1.Success;}else{cov_1phqow6cqx.b[9][1]++;}cov_1phqow6cqx.s[67]++;automation_client_1.logger.info("Goal %s hook returned: %j",stage,result);cov_1phqow6cqx.s[68]++;return result;}else{cov_1phqow6cqx.b[8][1]++;}cov_1phqow6cqx.s[69]++;return automation_client_1.Success;});});});}cov_1phqow6cqx.s[70]++;exports.executeHook=executeHook;function goalToHookFile(sdmGoal,prefix){cov_1phqow6cqx.f[15]++;cov_1phqow6cqx.s[71]++;return`${prefix}-${sdmGoal.environment.slice(2)}-${sdmGoal.name}`;}function markStatus(parameters){cov_1phqow6cqx.f[16]++;const{ctx,sdmGoal,goal,result,error,progressLogUrl}=(cov_1phqow6cqx.s[72]++,parameters);const newState=(cov_1phqow6cqx.s[73]++,result.code!==0?(cov_1phqow6cqx.b[10][0]++,"failure"):(cov_1phqow6cqx.b[10][1]++,result.requireApproval?(cov_1phqow6cqx.b[11][0]++,"waiting_for_approval"):(cov_1phqow6cqx.b[11][1]++,"success")));// Currently, the goals tend to have a single url so it seems safe to use whichever of these we have.
// Going forward it may make sense to have both a logging and a result URL.
const url=(cov_1phqow6cqx.s[74]++,(cov_1phqow6cqx.b[12][0]++,result.targetUrl)||(cov_1phqow6cqx.b[12][1]++,progressLogUrl));cov_1phqow6cqx.s[75]++;return storeGoals_1.updateGoal(ctx,sdmGoal,{url,state:newState,description:storeGoals_1.descriptionFromState(goal,newState),error});}cov_1phqow6cqx.s[76]++;exports.markStatus=markStatus;function markGoalInProcess(parameters){cov_1phqow6cqx.f[17]++;const{ctx,sdmGoal,goal,progressLogUrl}=(cov_1phqow6cqx.s[77]++,parameters);cov_1phqow6cqx.s[78]++;return storeGoals_1.updateGoal(ctx,sdmGoal,{url:progressLogUrl,description:goal.inProcessDescription,state:"in_process"}).catch(err=>{cov_1phqow6cqx.f[18]++;cov_1phqow6cqx.s[79]++;return automation_client_1.logger.warn("Failed to update %s goal to tell people we are working on it",goal.name);});}//# sourceMappingURL=data:application/json;charset=utf-8;base64,