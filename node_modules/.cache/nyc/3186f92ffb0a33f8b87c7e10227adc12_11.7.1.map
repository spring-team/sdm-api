{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/code/fingerprint/maven/dependenciesFingerprintsFromParsedPom.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/code/fingerprint/maven/dependenciesFingerprintsFromParsedPom.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;AAIH,sDAA4D;AAC5D,kEAG6C;AAE7C;;;;GAIG;AACH,+CAA4D,IAAS;;QACjE,MAAM,YAAY,GACd,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,8BAAmB,CAAC,CAAC;QACrE,MAAM,MAAM,GAAG,YAAY;aACtB,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,sBAAW,CAAC,EAAE,CAAC,GAAG,sBAAW,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClE,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACpC,OAAO;YACH,IAAI,EAAE,cAAc;YACpB,YAAY,EAAE,MAAM;YACpB,OAAO,EAAE,KAAK;YACd,GAAG,EAAE,kBAAY,CAAC,IAAI,CAAC;YACvB,IAAI,EAAE,IAAI;SACb,CAAC;IACN,CAAC;CAAA;AAbD,sFAaC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Fingerprint } from \"@atomist/automation-client/project/fingerprint/Fingerprint\";\nimport { VersionedArtifact } from \"@atomist/spring-automation/commands/generator/java/JavaProjectParameters\";\nimport { computeShaOf } from \"../../../../../util/misc/sha\";\nimport {\n    coordinates,\n    toVersionedArtifact,\n} from \"../../../build/local/maven/artifact\";\n\n/**\n * Don't call except via mavenFingerprinter\n * @param epom xml2js parsed form\n * @return {Promise<Fingerprint>}\n */\nexport async function dependenciesFingerprintsFromParsedPom(epom: any): Promise<Fingerprint> {\n    const dependencies: VersionedArtifact[] =\n        epom.project.dependencies[0].dependency.map(toVersionedArtifact);\n    const sorted = dependencies\n        .sort((d1, d2) => coordinates(d1) > coordinates(d2) ? 1 : -1);\n    const json = JSON.stringify(sorted);\n    return {\n        name: \"dependencies\",\n        abbreviation: \"deps\",\n        version: \"0.1\",\n        sha: computeShaOf(json),\n        data: json,\n    };\n}\n"]}