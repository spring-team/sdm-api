"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_1fbabk4t3h=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/blueprint/support/AbstractSoftwareDeliveryMachine.ts",hash="426e7a0e8a210b114856bce1e6703e87a5cb8543",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/blueprint/support/AbstractSoftwareDeliveryMachine.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:28},end:{line:18,column:65}},"2":{start:{line:19,column:10},end:{line:19,column:27}},"3":{start:{line:20,column:23},end:{line:20,column:74}},"4":{start:{line:21,column:24},end:{line:21,column:77}},"5":{start:{line:22,column:26},end:{line:22,column:81}},"6":{start:{line:23,column:26},end:{line:23,column:88}},"7":{start:{line:24,column:38},end:{line:24,column:112}},"8":{start:{line:25,column:20},end:{line:25,column:70}},"9":{start:{line:26,column:26},end:{line:26,column:91}},"10":{start:{line:27,column:27},end:{line:27,column:78}},"11":{start:{line:28,column:25},end:{line:28,column:74}},"12":{start:{line:29,column:23},end:{line:29,column:70}},"13":{start:{line:30,column:36},end:{line:30,column:109}},"14":{start:{line:31,column:41},end:{line:31,column:119}},"15":{start:{line:32,column:35},end:{line:32,column:107}},"16":{start:{line:33,column:43},end:{line:33,column:122}},"17":{start:{line:34,column:25},end:{line:34,column:88}},"18":{start:{line:35,column:33},end:{line:35,column:103}},"19":{start:{line:36,column:23},end:{line:36,column:87}},"20":{start:{line:37,column:46},end:{line:37,column:129}},"21":{start:{line:38,column:21},end:{line:38,column:79}},"22":{start:{line:39,column:34},end:{line:39,column:105}},"23":{start:{line:40,column:25},end:{line:40,column:87}},"24":{start:{line:41,column:43},end:{line:41,column:123}},"25":{start:{line:42,column:32},end:{line:42,column:102}},"26":{start:{line:43,column:37},end:{line:43,column:112}},"27":{start:{line:44,column:29},end:{line:44,column:86}},"28":{start:{line:45,column:26},end:{line:45,column:80}},"29":{start:{line:46,column:30},end:{line:46,column:88}},"30":{start:{line:47,column:24},end:{line:47,column:75}},"31":{start:{line:48,column:28},end:{line:48,column:83}},"32":{start:{line:49,column:24},end:{line:49,column:75}},"33":{start:{line:50,column:25},end:{line:50,column:77}},"34":{start:{line:51,column:26},end:{line:51,column:79}},"35":{start:{line:52,column:16},end:{line:52,column:59}},"36":{start:{line:53,column:31},end:{line:53,column:89}},"37":{start:{line:54,column:25},end:{line:54,column:53}},"38":{start:{line:55,column:25},end:{line:55,column:53}},"39":{start:{line:56,column:38},end:{line:56,column:78}},"40":{start:{line:68,column:8},end:{line:68,column:16}},"41":{start:{line:69,column:8},end:{line:69,column:25}},"42":{start:{line:70,column:8},end:{line:70,column:31}},"43":{start:{line:71,column:8},end:{line:71,column:29}},"44":{start:{line:72,column:8},end:{line:72,column:26}},"45":{start:{line:73,column:8},end:{line:73,column:37}},"46":{start:{line:74,column:8},end:{line:74,column:35}},"47":{start:{line:75,column:8},end:{line:75,column:34}},"48":{start:{line:76,column:8},end:{line:76,column:30}},"49":{start:{line:77,column:8},end:{line:77,column:38}},"50":{start:{line:79,column:8},end:{line:79,column:33}},"51":{start:{line:83,column:8},end:{line:85,column:120}},"52":{start:{line:86,column:8},end:{line:86,column:251}},"53":{start:{line:86,column:36},end:{line:86,column:250}},"54":{start:{line:87,column:8},end:{line:87,column:153}},"55":{start:{line:87,column:37},end:{line:87,column:152}},"56":{start:{line:95,column:8},end:{line:95,column:74}},"57":{start:{line:104,column:8},end:{line:106,column:9}},"58":{start:{line:105,column:12},end:{line:105,column:25}},"59":{start:{line:107,column:8},end:{line:107,column:54}},"60":{start:{line:122,column:26},end:{line:122,column:172}},"61":{start:{line:123,column:31},end:{line:127,column:9}},"62":{start:{line:128,column:8},end:{line:128,column:69}},"63":{start:{line:129,column:8},end:{line:129,column:20}},"64":{start:{line:132,column:36},end:{line:136,column:9}},"65":{start:{line:137,column:8},end:{line:137,column:167}},"66":{start:{line:140,column:8},end:{line:140,column:54}},"67":{start:{line:141,column:8},end:{line:141,column:20}},"68":{start:{line:144,column:8},end:{line:146,column:22}},"69":{start:{line:145,column:18},end:{line:145,column:115}},"70":{start:{line:149,column:8},end:{line:151,column:22}},"71":{start:{line:150,column:18},end:{line:150,column:122}},"72":{start:{line:154,column:8},end:{line:156,column:22}},"73":{start:{line:155,column:18},end:{line:155,column:160}},"74":{start:{line:159,column:8},end:{line:162,column:9}},"75":{start:{line:160,column:12},end:{line:160,column:63}},"76":{start:{line:161,column:12},end:{line:161,column:56}},"77":{start:{line:163,column:8},end:{line:171,column:10}},"78":{start:{line:164,column:34},end:{line:164,column:201}},"79":{start:{line:165,column:36},end:{line:170,column:18}},"80":{start:{line:174,column:8},end:{line:181,column:10}},"81":{start:{line:176,column:22},end:{line:176,column:95}},"82":{start:{line:177,column:22},end:{line:177,column:127}},"83":{start:{line:178,column:22},end:{line:178,column:139}},"84":{start:{line:184,column:8},end:{line:186,column:22}},"85":{start:{line:185,column:18},end:{line:185,column:113}},"86":{start:{line:189,column:8},end:{line:191,column:22}},"87":{start:{line:190,column:18},end:{line:190,column:145}},"88":{start:{line:194,column:8},end:{line:205,column:10}},"89":{start:{line:196,column:22},end:{line:201,column:18}},"90":{start:{line:208,column:8},end:{line:210,column:10}},"91":{start:{line:209,column:12},end:{line:209,column:59}},"92":{start:{line:213,column:8},end:{line:218,column:11}},"93":{start:{line:221,column:8},end:{line:254,column:28}},"94":{start:{line:222,column:26},end:{line:222,column:158}},"95":{start:{line:223,column:64},end:{line:223,column:80}},"96":{start:{line:226,column:22},end:{line:226,column:137}},"97":{start:{line:229,column:22},end:{line:229,column:144}},"98":{start:{line:231,column:49},end:{line:231,column:119}},"99":{start:{line:232,column:54},end:{line:232,column:149}},"100":{start:{line:234,column:22},end:{line:234,column:129}},"101":{start:{line:237,column:22},end:{line:237,column:126}},"102":{start:{line:240,column:22},end:{line:240,column:144}},"103":{start:{line:243,column:22},end:{line:243,column:144}},"104":{start:{line:245,column:22},end:{line:245,column:123}},"105":{start:{line:254,column:23},end:{line:254,column:26}},"106":{start:{line:257,column:8},end:{line:262,column:30}},"107":{start:{line:258,column:64},end:{line:258,column:82}},"108":{start:{line:262,column:25},end:{line:262,column:28}},"109":{start:{line:265,column:8},end:{line:265,column:52}},"110":{start:{line:266,column:8},end:{line:266,column:20}},"111":{start:{line:269,column:8},end:{line:269,column:46}},"112":{start:{line:270,column:8},end:{line:270,column:20}},"113":{start:{line:273,column:8},end:{line:273,column:43}},"114":{start:{line:274,column:8},end:{line:274,column:20}},"115":{start:{line:277,column:8},end:{line:277,column:41}},"116":{start:{line:278,column:8},end:{line:278,column:20}},"117":{start:{line:281,column:8},end:{line:281,column:42}},"118":{start:{line:282,column:8},end:{line:282,column:20}},"119":{start:{line:285,column:8},end:{line:285,column:44}},"120":{start:{line:286,column:8},end:{line:293,column:12}},"121":{start:{line:286,column:38},end:{line:293,column:10}},"122":{start:{line:294,column:8},end:{line:294,column:20}},"123":{start:{line:297,column:8},end:{line:297,column:44}},"124":{start:{line:298,column:8},end:{line:311,column:11}},"125":{start:{line:300,column:12},end:{line:303,column:15}},"126":{start:{line:305,column:12},end:{line:305,column:98}},"127":{start:{line:307,column:12},end:{line:310,column:15}},"128":{start:{line:312,column:8},end:{line:312,column:20}},"129":{start:{line:324,column:8},end:{line:327,column:11}},"130":{start:{line:335,column:8},end:{line:337,column:9}},"131":{start:{line:336,column:12},end:{line:336,column:39}},"132":{start:{line:338,column:8},end:{line:338,column:20}},"133":{start:{line:341,column:8},end:{line:341,column:101}},"134":{start:{line:342,column:8},end:{line:342,column:35}},"135":{start:{line:343,column:8},end:{line:343,column:20}},"136":{start:{line:346,column:0},end:{line:346,column:74}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:67,column:4},end:{line:67,column:5}},loc:{start:{line:67,column:31},end:{line:88,column:5}},line:67},"1":{name:"(anonymous_1)",decl:{start:{line:86,column:30},end:{line:86,column:31}},loc:{start:{line:86,column:36},end:{line:86,column:250}},line:86},"2":{name:"(anonymous_2)",decl:{start:{line:87,column:31},end:{line:87,column:32}},loc:{start:{line:87,column:37},end:{line:87,column:152}},line:87},"3":{name:"(anonymous_3)",decl:{start:{line:94,column:4},end:{line:94,column:5}},loc:{start:{line:94,column:22},end:{line:96,column:5}},line:94},"4":{name:"(anonymous_4)",decl:{start:{line:103,column:4},end:{line:103,column:5}},loc:{start:{line:103,column:23},end:{line:108,column:5}},line:103},"5":{name:"(anonymous_5)",decl:{start:{line:121,column:4},end:{line:121,column:5}},loc:{start:{line:121,column:75},end:{line:130,column:5}},line:121},"6":{name:"(anonymous_6)",decl:{start:{line:131,column:4},end:{line:131,column:5}},loc:{start:{line:131,column:30},end:{line:138,column:5}},line:131},"7":{name:"(anonymous_7)",decl:{start:{line:139,column:4},end:{line:139,column:5}},loc:{start:{line:139,column:37},end:{line:142,column:5}},line:139},"8":{name:"(anonymous_8)",decl:{start:{line:143,column:4},end:{line:143,column:5}},loc:{start:{line:143,column:25},end:{line:147,column:5}},line:143},"9":{name:"(anonymous_9)",decl:{start:{line:145,column:12},end:{line:145,column:13}},loc:{start:{line:145,column:18},end:{line:145,column:115}},line:145},"10":{name:"(anonymous_10)",decl:{start:{line:148,column:4},end:{line:148,column:5}},loc:{start:{line:148,column:28},end:{line:152,column:5}},line:148},"11":{name:"(anonymous_11)",decl:{start:{line:150,column:12},end:{line:150,column:13}},loc:{start:{line:150,column:18},end:{line:150,column:122}},line:150},"12":{name:"(anonymous_12)",decl:{start:{line:153,column:4},end:{line:153,column:5}},loc:{start:{line:153,column:30},end:{line:157,column:5}},line:153},"13":{name:"(anonymous_13)",decl:{start:{line:155,column:12},end:{line:155,column:13}},loc:{start:{line:155,column:18},end:{line:155,column:160}},line:155},"14":{name:"(anonymous_14)",decl:{start:{line:158,column:4},end:{line:158,column:5}},loc:{start:{line:158,column:22},end:{line:172,column:5}},line:158},"15":{name:"(anonymous_15)",decl:{start:{line:164,column:28},end:{line:164,column:29}},loc:{start:{line:164,column:34},end:{line:164,column:201}},line:164},"16":{name:"(anonymous_16)",decl:{start:{line:165,column:30},end:{line:165,column:31}},loc:{start:{line:165,column:36},end:{line:170,column:18}},line:165},"17":{name:"(anonymous_17)",decl:{start:{line:173,column:4},end:{line:173,column:5}},loc:{start:{line:173,column:27},end:{line:182,column:5}},line:173},"18":{name:"(anonymous_18)",decl:{start:{line:176,column:16},end:{line:176,column:17}},loc:{start:{line:176,column:22},end:{line:176,column:95}},line:176},"19":{name:"(anonymous_19)",decl:{start:{line:177,column:16},end:{line:177,column:17}},loc:{start:{line:177,column:22},end:{line:177,column:127}},line:177},"20":{name:"(anonymous_20)",decl:{start:{line:178,column:16},end:{line:178,column:17}},loc:{start:{line:178,column:22},end:{line:178,column:139}},line:178},"21":{name:"(anonymous_21)",decl:{start:{line:183,column:4},end:{line:183,column:5}},loc:{start:{line:183,column:25},end:{line:187,column:5}},line:183},"22":{name:"(anonymous_22)",decl:{start:{line:185,column:12},end:{line:185,column:13}},loc:{start:{line:185,column:18},end:{line:185,column:113}},line:185},"23":{name:"(anonymous_23)",decl:{start:{line:188,column:4},end:{line:188,column:5}},loc:{start:{line:188,column:27},end:{line:192,column:5}},line:188},"24":{name:"(anonymous_24)",decl:{start:{line:190,column:12},end:{line:190,column:13}},loc:{start:{line:190,column:18},end:{line:190,column:145}},line:190},"25":{name:"(anonymous_25)",decl:{start:{line:193,column:4},end:{line:193,column:5}},loc:{start:{line:193,column:19},end:{line:206,column:5}},line:193},"26":{name:"(anonymous_26)",decl:{start:{line:196,column:16},end:{line:196,column:17}},loc:{start:{line:196,column:22},end:{line:201,column:18}},line:196},"27":{name:"(anonymous_27)",decl:{start:{line:207,column:4},end:{line:207,column:5}},loc:{start:{line:207,column:23},end:{line:211,column:5}},line:207},"28":{name:"(anonymous_28)",decl:{start:{line:208,column:15},end:{line:208,column:16}},loc:{start:{line:208,column:21},end:{line:210,column:9}},line:208},"29":{name:"(anonymous_29)",decl:{start:{line:212,column:4},end:{line:212,column:5}},loc:{start:{line:212,column:29},end:{line:219,column:5}},line:212},"30":{name:"(anonymous_30)",decl:{start:{line:220,column:4},end:{line:220,column:5}},loc:{start:{line:220,column:24},end:{line:255,column:5}},line:220},"31":{name:"(anonymous_31)",decl:{start:{line:222,column:20},end:{line:222,column:21}},loc:{start:{line:222,column:26},end:{line:222,column:158}},line:222},"32":{name:"(anonymous_32)",decl:{start:{line:223,column:58},end:{line:223,column:59}},loc:{start:{line:223,column:64},end:{line:223,column:80}},line:223},"33":{name:"(anonymous_33)",decl:{start:{line:226,column:16},end:{line:226,column:17}},loc:{start:{line:226,column:22},end:{line:226,column:137}},line:226},"34":{name:"(anonymous_34)",decl:{start:{line:229,column:16},end:{line:229,column:17}},loc:{start:{line:229,column:22},end:{line:229,column:144}},line:229},"35":{name:"(anonymous_35)",decl:{start:{line:231,column:43},end:{line:231,column:44}},loc:{start:{line:231,column:49},end:{line:231,column:119}},line:231},"36":{name:"(anonymous_36)",decl:{start:{line:232,column:48},end:{line:232,column:49}},loc:{start:{line:232,column:54},end:{line:232,column:149}},line:232},"37":{name:"(anonymous_37)",decl:{start:{line:234,column:16},end:{line:234,column:17}},loc:{start:{line:234,column:22},end:{line:234,column:129}},line:234},"38":{name:"(anonymous_38)",decl:{start:{line:237,column:16},end:{line:237,column:17}},loc:{start:{line:237,column:22},end:{line:237,column:126}},line:237},"39":{name:"(anonymous_39)",decl:{start:{line:240,column:16},end:{line:240,column:17}},loc:{start:{line:240,column:22},end:{line:240,column:144}},line:240},"40":{name:"(anonymous_40)",decl:{start:{line:243,column:16},end:{line:243,column:17}},loc:{start:{line:243,column:22},end:{line:243,column:144}},line:243},"41":{name:"(anonymous_41)",decl:{start:{line:245,column:16},end:{line:245,column:17}},loc:{start:{line:245,column:22},end:{line:245,column:123}},line:245},"42":{name:"(anonymous_42)",decl:{start:{line:254,column:18},end:{line:254,column:19}},loc:{start:{line:254,column:23},end:{line:254,column:26}},line:254},"43":{name:"(anonymous_43)",decl:{start:{line:256,column:4},end:{line:256,column:5}},loc:{start:{line:256,column:26},end:{line:263,column:5}},line:256},"44":{name:"(anonymous_44)",decl:{start:{line:258,column:58},end:{line:258,column:59}},loc:{start:{line:258,column:64},end:{line:258,column:82}},line:258},"45":{name:"(anonymous_45)",decl:{start:{line:262,column:20},end:{line:262,column:21}},loc:{start:{line:262,column:25},end:{line:262,column:28}},line:262},"46":{name:"(anonymous_46)",decl:{start:{line:264,column:4},end:{line:264,column:5}},loc:{start:{line:264,column:24},end:{line:267,column:5}},line:264},"47":{name:"(anonymous_47)",decl:{start:{line:268,column:4},end:{line:268,column:5}},loc:{start:{line:268,column:21},end:{line:271,column:5}},line:268},"48":{name:"(anonymous_48)",decl:{start:{line:272,column:4},end:{line:272,column:5}},loc:{start:{line:272,column:32},end:{line:275,column:5}},line:272},"49":{name:"(anonymous_49)",decl:{start:{line:276,column:4},end:{line:276,column:5}},loc:{start:{line:276,column:30},end:{line:279,column:5}},line:276},"50":{name:"(anonymous_50)",decl:{start:{line:280,column:4},end:{line:280,column:5}},loc:{start:{line:280,column:31},end:{line:283,column:5}},line:280},"51":{name:"(anonymous_51)",decl:{start:{line:284,column:4},end:{line:284,column:5}},loc:{start:{line:284,column:28},end:{line:295,column:5}},line:284},"52":{name:"(anonymous_52)",decl:{start:{line:286,column:33},end:{line:286,column:34}},loc:{start:{line:286,column:38},end:{line:293,column:10}},line:286},"53":{name:"(anonymous_53)",decl:{start:{line:296,column:4},end:{line:296,column:5}},loc:{start:{line:296,column:29},end:{line:313,column:5}},line:296},"54":{name:"(anonymous_54)",decl:{start:{line:298,column:33},end:{line:298,column:34}},loc:{start:{line:298,column:38},end:{line:311,column:9}},line:298},"55":{name:"(anonymous_55)",decl:{start:{line:323,column:4},end:{line:323,column:5}},loc:{start:{line:323,column:80},end:{line:328,column:5}},line:323},"56":{name:"(anonymous_56)",decl:{start:{line:334,column:4},end:{line:334,column:5}},loc:{start:{line:334,column:36},end:{line:339,column:5}},line:334},"57":{name:"(anonymous_57)",decl:{start:{line:340,column:4},end:{line:340,column:5}},loc:{start:{line:340,column:26},end:{line:344,column:5}},line:340}},branchMap:{"0":{loc:{start:{line:85,column:8},end:{line:85,column:118}},type:"cond-expr",locations:[{start:{line:85,column:61},end:{line:85,column:106}},{start:{line:85,column:109},end:{line:85,column:118}}],line:85},"1":{loc:{start:{line:104,column:8},end:{line:106,column:9}},type:"if",locations:[{start:{line:104,column:8},end:{line:106,column:9}},{start:{line:104,column:8},end:{line:106,column:9}}],line:104},"2":{loc:{start:{line:144,column:15},end:{line:146,column:21}},type:"cond-expr",locations:[{start:{line:145,column:12},end:{line:145,column:115}},{start:{line:146,column:12},end:{line:146,column:21}}],line:144},"3":{loc:{start:{line:149,column:15},end:{line:151,column:21}},type:"cond-expr",locations:[{start:{line:150,column:12},end:{line:150,column:122}},{start:{line:151,column:12},end:{line:151,column:21}}],line:149},"4":{loc:{start:{line:154,column:15},end:{line:156,column:21}},type:"cond-expr",locations:[{start:{line:155,column:12},end:{line:155,column:160}},{start:{line:156,column:12},end:{line:156,column:21}}],line:154},"5":{loc:{start:{line:159,column:8},end:{line:162,column:9}},type:"if",locations:[{start:{line:159,column:8},end:{line:162,column:9}},{start:{line:159,column:8},end:{line:162,column:9}}],line:159},"6":{loc:{start:{line:184,column:15},end:{line:186,column:21}},type:"cond-expr",locations:[{start:{line:185,column:12},end:{line:185,column:113}},{start:{line:186,column:12},end:{line:186,column:21}}],line:184},"7":{loc:{start:{line:189,column:15},end:{line:191,column:21}},type:"cond-expr",locations:[{start:{line:190,column:12},end:{line:190,column:145}},{start:{line:191,column:12},end:{line:191,column:21}}],line:189},"8":{loc:{start:{line:225,column:12},end:{line:227,column:25}},type:"cond-expr",locations:[{start:{line:226,column:16},end:{line:226,column:137}},{start:{line:227,column:16},end:{line:227,column:25}}],line:225},"9":{loc:{start:{line:228,column:12},end:{line:230,column:25}},type:"cond-expr",locations:[{start:{line:229,column:16},end:{line:229,column:144}},{start:{line:230,column:16},end:{line:230,column:25}}],line:228},"10":{loc:{start:{line:231,column:12},end:{line:231,column:131}},type:"cond-expr",locations:[{start:{line:231,column:43},end:{line:231,column:119}},{start:{line:231,column:122},end:{line:231,column:131}}],line:231},"11":{loc:{start:{line:232,column:12},end:{line:232,column:161}},type:"cond-expr",locations:[{start:{line:232,column:48},end:{line:232,column:149}},{start:{line:232,column:152},end:{line:232,column:161}}],line:232},"12":{loc:{start:{line:233,column:12},end:{line:235,column:25}},type:"cond-expr",locations:[{start:{line:234,column:16},end:{line:234,column:129}},{start:{line:235,column:16},end:{line:235,column:25}}],line:233},"13":{loc:{start:{line:236,column:12},end:{line:238,column:25}},type:"cond-expr",locations:[{start:{line:237,column:16},end:{line:237,column:126}},{start:{line:238,column:16},end:{line:238,column:25}}],line:236},"14":{loc:{start:{line:239,column:12},end:{line:241,column:25}},type:"cond-expr",locations:[{start:{line:240,column:16},end:{line:240,column:144}},{start:{line:241,column:16},end:{line:241,column:25}}],line:239},"15":{loc:{start:{line:242,column:12},end:{line:243,column:156}},type:"cond-expr",locations:[{start:{line:243,column:16},end:{line:243,column:144}},{start:{line:243,column:147},end:{line:243,column:156}}],line:242},"16":{loc:{start:{line:244,column:12},end:{line:246,column:25}},type:"cond-expr",locations:[{start:{line:245,column:16},end:{line:245,column:123}},{start:{line:246,column:16},end:{line:246,column:25}}],line:244},"17":{loc:{start:{line:323,column:42},end:{line:323,column:78}},type:"default-arg",locations:[{start:{line:323,column:53},end:{line:323,column:78}}],line:323}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_1fbabk4t3h.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const automation_client_1=(cov_1fbabk4t3h.s[1]++,require("@atomist/automation-client"));const _=(cov_1fbabk4t3h.s[2]++,require("lodash"));const executeBuild_1=(cov_1fbabk4t3h.s[3]++,require("../../common/delivery/build/executeBuild"));const executeDeploy_1=(cov_1fbabk4t3h.s[4]++,require("../../common/delivery/deploy/executeDeploy"));const executeUndeploy_1=(cov_1fbabk4t3h.s[5]++,require("../../common/delivery/deploy/executeUndeploy"));const logInterpreters_1=(cov_1fbabk4t3h.s[6]++,require("../../common/delivery/goals/support/logInterpreters"));const SdmGoalImplementationMapper_1=(cov_1fbabk4t3h.s[7]++,require("../../common/delivery/goals/support/SdmGoalImplementationMapper"));const PushRules_1=(cov_1fbabk4t3h.s[8]++,require("../../common/listener/support/PushRules"));const commonPushTests_1=(cov_1fbabk4t3h.s[9]++,require("../../common/listener/support/pushtest/commonPushTests"));const deleteRepository_1=(cov_1fbabk4t3h.s[10]++,require("../../handlers/commands/deleteRepository"));const disposeCommand_1=(cov_1fbabk4t3h.s[11]++,require("../../handlers/commands/disposeCommand"));const ShowBuildLog_1=(cov_1fbabk4t3h.s[12]++,require("../../handlers/commands/ShowBuildLog"));const FindArtifactOnImageLinked_1=(cov_1fbabk4t3h.s[13]++,require("../../handlers/events/delivery/build/FindArtifactOnImageLinked"));const InvokeListenersOnBuildComplete_1=(cov_1fbabk4t3h.s[14]++,require("../../handlers/events/delivery/build/InvokeListenersOnBuildComplete"));const SetStatusOnBuildComplete_1=(cov_1fbabk4t3h.s[15]++,require("../../handlers/events/delivery/build/SetStatusOnBuildComplete"));const ReactToSemanticDiffsOnPushImpact_1=(cov_1fbabk4t3h.s[16]++,require("../../handlers/events/delivery/code/ReactToSemanticDiffsOnPushImpact"));const OnDeployStatus_1=(cov_1fbabk4t3h.s[17]++,require("../../handlers/events/delivery/deploy/OnDeployStatus"));const FulfillGoalOnRequested_1=(cov_1fbabk4t3h.s[18]++,require("../../handlers/events/delivery/goals/FulfillGoalOnRequested"));const launchGoalK8_1=(cov_1fbabk4t3h.s[19]++,require("../../handlers/events/delivery/goals/k8s/launchGoalK8"));const RequestDownstreamGoalsOnGoalSuccess_1=(cov_1fbabk4t3h.s[20]++,require("../../handlers/events/delivery/goals/RequestDownstreamGoalsOnGoalSuccess"));const resetGoals_1=(cov_1fbabk4t3h.s[21]++,require("../../handlers/events/delivery/goals/resetGoals"));const RespondOnGoalCompletion_1=(cov_1fbabk4t3h.s[22]++,require("../../handlers/events/delivery/goals/RespondOnGoalCompletion"));const SetGoalsOnPush_1=(cov_1fbabk4t3h.s[23]++,require("../../handlers/events/delivery/goals/SetGoalsOnPush"));const SkipDownstreamGoalsOnGoalFailure_1=(cov_1fbabk4t3h.s[24]++,require("../../handlers/events/delivery/goals/SkipDownstreamGoalsOnGoalFailure"));const executeVerifyEndpoint_1=(cov_1fbabk4t3h.s[25]++,require("../../handlers/events/delivery/verify/executeVerifyEndpoint"));const OnVerifiedDeploymentStatus_1=(cov_1fbabk4t3h.s[26]++,require("../../handlers/events/delivery/verify/OnVerifiedDeploymentStatus"));const ClosedIssueHandler_1=(cov_1fbabk4t3h.s[27]++,require("../../handlers/events/issue/ClosedIssueHandler"));const NewIssueHandler_1=(cov_1fbabk4t3h.s[28]++,require("../../handlers/events/issue/NewIssueHandler"));const UpdatedIssueHandler_1=(cov_1fbabk4t3h.s[29]++,require("../../handlers/events/issue/UpdatedIssueHandler"));const OnChannelLink_1=(cov_1fbabk4t3h.s[30]++,require("../../handlers/events/repo/OnChannelLink"));const OnFirstPushToRepo_1=(cov_1fbabk4t3h.s[31]++,require("../../handlers/events/repo/OnFirstPushToRepo"));const OnPullRequest_1=(cov_1fbabk4t3h.s[32]++,require("../../handlers/events/repo/OnPullRequest"));const OnRepoCreation_1=(cov_1fbabk4t3h.s[33]++,require("../../handlers/events/repo/OnRepoCreation"));const OnRepoOnboarded_1=(cov_1fbabk4t3h.s[34]++,require("../../handlers/events/repo/OnRepoOnboarded"));const OnTag_1=(cov_1fbabk4t3h.s[35]++,require("../../handlers/events/repo/OnTag"));const OnUserJoiningChannel_1=(cov_1fbabk4t3h.s[36]++,require("../../handlers/events/repo/OnUserJoiningChannel"));const FunctionalUnit_1=(cov_1fbabk4t3h.s[37]++,require("../FunctionalUnit"));const wellKnownGoals_1=(cov_1fbabk4t3h.s[38]++,require("../wellKnownGoals"));const ListenerRegistrationSupport_1=(cov_1fbabk4t3h.s[39]++,require("./ListenerRegistrationSupport"));/**
 * Abstract software delivery machine
 */class AbstractSoftwareDeliveryMachine extends(ListenerRegistrationSupport_1.ListenerRegistrationSupport){/**
     * Construct a new software delivery machine, with zero or
     * more goal setters.
     * @param {string} name
     * @param {SoftwareDeliveryMachineOptions} options
     */constructor(name,options){cov_1fbabk4t3h.f[0]++;cov_1fbabk4t3h.s[40]++;super();cov_1fbabk4t3h.s[41]++;this.name=name;cov_1fbabk4t3h.s[42]++;this.options=options;cov_1fbabk4t3h.s[43]++;this.generators=[];cov_1fbabk4t3h.s[44]++;this.editors=[];cov_1fbabk4t3h.s[45]++;this.supportingCommands=[];cov_1fbabk4t3h.s[46]++;this.supportingEvents=[];cov_1fbabk4t3h.s[47]++;this.functionalUnits=[];cov_1fbabk4t3h.s[48]++;this.goalSetters=[];cov_1fbabk4t3h.s[49]++;this.disposalGoalSetters=[];// Maintained depending on whether this SDM might mutate
cov_1fbabk4t3h.s[50]++;this.mightMutate=false;/*
         * Store all the implementations we know
         */cov_1fbabk4t3h.s[51]++;this.goalFulfillmentMapper=new SdmGoalImplementationMapper_1.SdmGoalImplementationMapper(// For now we only support kube or in process
process.env.ATOMIST_GOAL_LAUNCHER==="kubernetes"?(cov_1fbabk4t3h.b[0][0]++,launchGoalK8_1.KubernetesIsolatedGoalLauncher):(cov_1fbabk4t3h.b[0][1]++,undefined));// public for testing
cov_1fbabk4t3h.s[52]++;this.artifactFinder=()=>{cov_1fbabk4t3h.f[1]++;cov_1fbabk4t3h.s[53]++;return new FindArtifactOnImageLinked_1.FindArtifactOnImageLinked(wellKnownGoals_1.ArtifactGoal,this.options.artifactStore,this.artifactListenerRegistrations,this.options.projectLoader,this.options.credentialsResolver);};cov_1fbabk4t3h.s[54]++;this.onBuildComplete=()=>{cov_1fbabk4t3h.f[2]++;cov_1fbabk4t3h.s[55]++;return new SetStatusOnBuildComplete_1.SetGoalOnBuildComplete([wellKnownGoals_1.BuildGoal,wellKnownGoals_1.JustBuildGoal]);};}/**
     * Return the PushMapping that will be used on pushes.
     * Useful in testing goal setting.
     * @return {PushMapping<Goals>}
     */get pushMapping(){cov_1fbabk4t3h.f[3]++;cov_1fbabk4t3h.s[56]++;return new PushRules_1.PushRules("Goal setter",this.goalSetters);}/**
     * Return if this SDM purely observes, rather than changes an org.
     * Note that this cannot be 100% reliable, as arbitrary event handlers
     * could be making commits, initiating deployments etc.
     * @return {boolean}
     */get observesOnly(){cov_1fbabk4t3h.f[4]++;cov_1fbabk4t3h.s[57]++;if(this.mightMutate){cov_1fbabk4t3h.b[1][0]++;cov_1fbabk4t3h.s[58]++;return false;}else{cov_1fbabk4t3h.b[1][1]++;}cov_1fbabk4t3h.s[59]++;return this.autofixRegistrations.length===0;}/**
     * Provide the implementation for a goal.
     * The SDM will run it as soon as the goal is ready (all preconditions are met).
     * If you provide a PushTest, then the SDM can assign different implementations
     * to the same goal based on the code in the project.
     * @param {string} implementationName
     * @param {Goal} goal
     * @param {ExecuteGoalWithLog} goalExecutor
     * @param options PushTest to narrow matching & InterpretLog that can handle
     * the log from the goalExecutor function
     * @return {this}
     */addGoalImplementation(implementationName,goal,goalExecutor,options){cov_1fbabk4t3h.f[5]++;const optsToUse=(cov_1fbabk4t3h.s[60]++,Object.assign({pushTest:commonPushTests_1.AnyPush,logInterpreter:logInterpreters_1.lastLinesLogInterpreter(implementationName,10)},options));const implementation=(cov_1fbabk4t3h.s[61]++,{implementationName,goal,goalExecutor,pushTest:optsToUse.pushTest,logInterpreter:optsToUse.logInterpreter});cov_1fbabk4t3h.s[62]++;this.goalFulfillmentMapper.addImplementation(implementation);cov_1fbabk4t3h.s[63]++;return this;}addVerifyImplementation(){cov_1fbabk4t3h.f[6]++;const stagingVerification=(cov_1fbabk4t3h.s[64]++,{verifiers:this.endpointVerificationListeners,endpointGoal:wellKnownGoals_1.StagingEndpointGoal,requestApproval:true});cov_1fbabk4t3h.s[65]++;return this.addGoalImplementation("VerifyInStaging",wellKnownGoals_1.StagingVerifiedGoal,executeVerifyEndpoint_1.executeVerifyEndpoint(stagingVerification));}addDisposalRules(...goalSetters){cov_1fbabk4t3h.f[7]++;cov_1fbabk4t3h.s[66]++;this.disposalGoalSetters.push(...goalSetters);cov_1fbabk4t3h.s[67]++;return this;}get onRepoCreation(){cov_1fbabk4t3h.f[8]++;cov_1fbabk4t3h.s[68]++;return this.repoCreationListeners.length>0?(cov_1fbabk4t3h.b[2][0]++,()=>{cov_1fbabk4t3h.f[9]++;cov_1fbabk4t3h.s[69]++;return new OnRepoCreation_1.OnRepoCreation(this.repoCreationListeners,this.options.credentialsResolver);}):(cov_1fbabk4t3h.b[2][1]++,undefined);}get onNewRepoWithCode(){cov_1fbabk4t3h.f[10]++;cov_1fbabk4t3h.s[70]++;return this.newRepoWithCodeActions.length>0?(cov_1fbabk4t3h.b[3][0]++,()=>{cov_1fbabk4t3h.f[11]++;cov_1fbabk4t3h.s[71]++;return new OnFirstPushToRepo_1.OnFirstPushToRepo(this.newRepoWithCodeActions,this.options.credentialsResolver);}):(cov_1fbabk4t3h.b[3][1]++,undefined);}get semanticDiffReactor(){cov_1fbabk4t3h.f[12]++;cov_1fbabk4t3h.s[72]++;return this.fingerprintDifferenceListeners.length>0?(cov_1fbabk4t3h.b[4][0]++,()=>{cov_1fbabk4t3h.f[13]++;cov_1fbabk4t3h.s[73]++;return new ReactToSemanticDiffsOnPushImpact_1.ReactToSemanticDiffsOnPushImpact(this.fingerprintDifferenceListeners,this.options.credentialsResolver);}):(cov_1fbabk4t3h.b[4][1]++,undefined);}get goalSetting(){cov_1fbabk4t3h.f[14]++;cov_1fbabk4t3h.s[74]++;if(this.goalSetters.length===0){cov_1fbabk4t3h.b[5][0]++;cov_1fbabk4t3h.s[75]++;automation_client_1.logger.warn("No goal setters");cov_1fbabk4t3h.s[76]++;return FunctionalUnit_1.EmptyFunctionalUnit;}else{cov_1fbabk4t3h.b[5][1]++;}cov_1fbabk4t3h.s[77]++;return{eventHandlers:[()=>{cov_1fbabk4t3h.f[15]++;cov_1fbabk4t3h.s[78]++;return new SetGoalsOnPush_1.SetGoalsOnPush(this.options.projectLoader,this.goalSetters,this.goalsSetListeners,this.goalFulfillmentMapper,this.options.credentialsResolver);}],commandHandlers:[()=>{cov_1fbabk4t3h.f[16]++;cov_1fbabk4t3h.s[79]++;return resetGoals_1.resetGoalsCommand({projectLoader:this.options.projectLoader,goalsListeners:this.goalsSetListeners,goalSetters:this.goalSetters,implementationMapping:this.goalFulfillmentMapper});}]};}get goalConsequences(){cov_1fbabk4t3h.f[17]++;cov_1fbabk4t3h.s[80]++;return{eventHandlers:[()=>{cov_1fbabk4t3h.f[18]++;cov_1fbabk4t3h.s[81]++;return new SkipDownstreamGoalsOnGoalFailure_1.SkipDownstreamGoalsOnGoalFailure();},()=>{cov_1fbabk4t3h.f[19]++;cov_1fbabk4t3h.s[82]++;return new RequestDownstreamGoalsOnGoalSuccess_1.RequestDownstreamGoalsOnGoalSuccess(this.goalFulfillmentMapper);},()=>{cov_1fbabk4t3h.f[20]++;cov_1fbabk4t3h.s[83]++;return new RespondOnGoalCompletion_1.RespondOnGoalCompletion(this.options.credentialsResolver,this.goalCompletionListeners);}],commandHandlers:[]};}get notifyOnDeploy(){cov_1fbabk4t3h.f[21]++;cov_1fbabk4t3h.s[84]++;return this.deploymentListeners.length>0?(cov_1fbabk4t3h.b[6][0]++,()=>{cov_1fbabk4t3h.f[22]++;cov_1fbabk4t3h.s[85]++;return new OnDeployStatus_1.OnDeployStatus(this.deploymentListeners,this.options.credentialsResolver);}):(cov_1fbabk4t3h.b[6][1]++,undefined);}get onVerifiedStatus(){cov_1fbabk4t3h.f[23]++;cov_1fbabk4t3h.s[86]++;return this.verifiedDeploymentListeners.length>0?(cov_1fbabk4t3h.b[7][0]++,()=>{cov_1fbabk4t3h.f[24]++;cov_1fbabk4t3h.s[87]++;return new OnVerifiedDeploymentStatus_1.OnVerifiedDeploymentStatus(this.verifiedDeploymentListeners,this.options.credentialsResolver);}):(cov_1fbabk4t3h.b[7][1]++,undefined);}get disposal(){cov_1fbabk4t3h.f[25]++;cov_1fbabk4t3h.s[88]++;return{commandHandlers:[()=>{cov_1fbabk4t3h.f[26]++;cov_1fbabk4t3h.s[89]++;return disposeCommand_1.disposeCommand({goalSetters:this.disposalGoalSetters,projectLoader:this.options.projectLoader,goalsListeners:this.goalsSetListeners,implementationMapping:this.goalFulfillmentMapper});},deleteRepository_1.deleteRepositoryCommand],eventHandlers:[]};}get showBuildLog(){cov_1fbabk4t3h.f[27]++;cov_1fbabk4t3h.s[90]++;return()=>{cov_1fbabk4t3h.f[28]++;cov_1fbabk4t3h.s[91]++;return ShowBuildLog_1.displayBuildLogHandler();};}get allFunctionalUnits(){cov_1fbabk4t3h.f[29]++;cov_1fbabk4t3h.s[92]++;return this.functionalUnits.concat([this.goalSetting,this.goalConsequences,this.disposal]);}get eventHandlers(){cov_1fbabk4t3h.f[30]++;cov_1fbabk4t3h.s[93]++;return this.supportingEvents.concat(()=>{cov_1fbabk4t3h.f[31]++;cov_1fbabk4t3h.s[94]++;return new FulfillGoalOnRequested_1.FulfillGoalOnRequested(this.goalFulfillmentMapper,this.options.projectLoader,this.options.logFactory);}).concat(_.flatten(this.allFunctionalUnits.map(fu=>{cov_1fbabk4t3h.f[32]++;cov_1fbabk4t3h.s[95]++;return fu.eventHandlers;}))).concat([this.userJoiningChannelListeners.length>0?(cov_1fbabk4t3h.b[8][0]++,()=>{cov_1fbabk4t3h.f[33]++;cov_1fbabk4t3h.s[96]++;return new OnUserJoiningChannel_1.OnUserJoiningChannel(this.userJoiningChannelListeners,this.options.credentialsResolver);}):(cov_1fbabk4t3h.b[8][1]++,undefined),this.buildListeners.length>0?(cov_1fbabk4t3h.b[9][0]++,()=>{cov_1fbabk4t3h.f[34]++;cov_1fbabk4t3h.s[97]++;return new InvokeListenersOnBuildComplete_1.InvokeListenersOnBuildComplete(this.buildListeners,this.options.credentialsResolver);}):(cov_1fbabk4t3h.b[9][1]++,undefined),this.tagListeners.length>0?(cov_1fbabk4t3h.b[10][0]++,()=>{cov_1fbabk4t3h.f[35]++;cov_1fbabk4t3h.s[98]++;return new OnTag_1.OnTag(this.tagListeners,this.options.credentialsResolver);}):(cov_1fbabk4t3h.b[10][1]++,undefined),this.newIssueListeners.length>0?(cov_1fbabk4t3h.b[11][0]++,()=>{cov_1fbabk4t3h.f[36]++;cov_1fbabk4t3h.s[99]++;return new NewIssueHandler_1.NewIssueHandler(this.newIssueListeners,this.options.credentialsResolver);}):(cov_1fbabk4t3h.b[11][1]++,undefined),this.updatedIssueListeners.length>0?(cov_1fbabk4t3h.b[12][0]++,()=>{cov_1fbabk4t3h.f[37]++;cov_1fbabk4t3h.s[100]++;return new UpdatedIssueHandler_1.UpdatedIssueHandler(this.updatedIssueListeners,this.options.credentialsResolver);}):(cov_1fbabk4t3h.b[12][1]++,undefined),this.closedIssueListeners.length>0?(cov_1fbabk4t3h.b[13][0]++,()=>{cov_1fbabk4t3h.f[38]++;cov_1fbabk4t3h.s[101]++;return new ClosedIssueHandler_1.ClosedIssueHandler(this.closedIssueListeners,this.options.credentialsResolver);}):(cov_1fbabk4t3h.b[13][1]++,undefined),this.channelLinkListeners.length>0?(cov_1fbabk4t3h.b[14][0]++,()=>{cov_1fbabk4t3h.f[39]++;cov_1fbabk4t3h.s[102]++;return new OnChannelLink_1.OnChannelLink(this.options.projectLoader,this.channelLinkListeners,this.options.credentialsResolver);}):(cov_1fbabk4t3h.b[14][1]++,undefined),this.pullRequestListeners.length>0?(cov_1fbabk4t3h.b[15][0]++,()=>{cov_1fbabk4t3h.f[40]++;cov_1fbabk4t3h.s[103]++;return new OnPullRequest_1.OnPullRequest(this.options.projectLoader,this.pullRequestListeners,this.options.credentialsResolver);}):(cov_1fbabk4t3h.b[15][1]++,undefined),this.repoOnboardingListeners.length>0?(cov_1fbabk4t3h.b[16][0]++,()=>{cov_1fbabk4t3h.f[41]++;cov_1fbabk4t3h.s[104]++;return new OnRepoOnboarded_1.OnRepoOnboarded(this.repoOnboardingListeners,this.options.credentialsResolver);}):(cov_1fbabk4t3h.b[16][1]++,undefined),this.onRepoCreation,this.onNewRepoWithCode,this.semanticDiffReactor,this.onBuildComplete,this.notifyOnDeploy,this.onVerifiedStatus,this.artifactFinder]).filter(m=>{cov_1fbabk4t3h.f[42]++;cov_1fbabk4t3h.s[105]++;return!!m;});}get commandHandlers(){cov_1fbabk4t3h.f[43]++;cov_1fbabk4t3h.s[106]++;return this.generators.concat(_.flatten(this.allFunctionalUnits.map(fu=>{cov_1fbabk4t3h.f[44]++;cov_1fbabk4t3h.s[107]++;return fu.commandHandlers;}))).concat(this.editors).concat(this.supportingCommands).concat([this.showBuildLog]).filter(m=>{cov_1fbabk4t3h.f[45]++;cov_1fbabk4t3h.s[108]++;return!!m;});}addGenerators(...g){cov_1fbabk4t3h.f[46]++;cov_1fbabk4t3h.s[109]++;this.generators=this.generators.concat(g);cov_1fbabk4t3h.s[110]++;return this;}addEditors(...e){cov_1fbabk4t3h.f[47]++;cov_1fbabk4t3h.s[111]++;this.editors=this.editors.concat(e);cov_1fbabk4t3h.s[112]++;return this;}addSupportingCommands(...e){cov_1fbabk4t3h.f[48]++;cov_1fbabk4t3h.s[113]++;this.supportingCommands.push(...e);cov_1fbabk4t3h.s[114]++;return this;}addSupportingEvents(...e){cov_1fbabk4t3h.f[49]++;cov_1fbabk4t3h.s[115]++;this.supportingEvents.push(...e);cov_1fbabk4t3h.s[116]++;return this;}addFunctionalUnits(...fus){cov_1fbabk4t3h.f[50]++;cov_1fbabk4t3h.s[117]++;this.functionalUnits.push(...fus);cov_1fbabk4t3h.s[118]++;return this;}addBuildRules(...rules){cov_1fbabk4t3h.f[51]++;cov_1fbabk4t3h.s[119]++;this.mightMutate=rules.length>0;cov_1fbabk4t3h.s[120]++;_.flatten(rules).forEach(r=>{cov_1fbabk4t3h.f[52]++;cov_1fbabk4t3h.s[121]++;return this.addGoalImplementation(r.name,wellKnownGoals_1.BuildGoal,executeBuild_1.executeBuild(this.options.projectLoader,r.value),{pushTest:r.pushTest,logInterpreter:r.value.logInterpreter}).addGoalImplementation(r.name,wellKnownGoals_1.JustBuildGoal,executeBuild_1.executeBuild(this.options.projectLoader,r.value),{pushTest:r.pushTest,logInterpreter:r.value.logInterpreter});});cov_1fbabk4t3h.s[122]++;return this;}addDeployRules(...rules){cov_1fbabk4t3h.f[53]++;cov_1fbabk4t3h.s[123]++;this.mightMutate=rules.length>0;cov_1fbabk4t3h.s[124]++;_.flatten(rules).forEach(r=>{cov_1fbabk4t3h.f[54]++;cov_1fbabk4t3h.s[125]++;// deploy
this.addGoalImplementation(r.name,r.value.deployGoal,executeDeploy_1.executeDeploy(this.options.artifactStore,r.value.endpointGoal,r.value),{pushTest:r.pushTest,logInterpreter:r.value.deployer.logInterpreter});// endpoint
cov_1fbabk4t3h.s[126]++;this.knownSideEffect(r.value.endpointGoal,r.value.deployGoal.definition.displayName);// undeploy
cov_1fbabk4t3h.s[127]++;this.addGoalImplementation(r.name,r.value.undeployGoal,executeUndeploy_1.executeUndeploy(r.value),{pushTest:r.pushTest,logInterpreter:r.value.deployer.logInterpreter});});cov_1fbabk4t3h.s[128]++;return this;}/**
     * Declare that a goal will become successful based on something outside.
     * For instance, ArtifactGoal succeeds because of an ImageLink event.
     * This tells the SDM that it does not need to run anything when this
     * goal becomes ready.
     * @param {Goal} goal
     * @param {string} sideEffectName
     * @param {PushTest} pushTest
     */knownSideEffect(goal,sideEffectName,pushTest=(cov_1fbabk4t3h.b[17][0]++,commonPushTests_1.AnyPush)){cov_1fbabk4t3h.f[55]++;cov_1fbabk4t3h.s[129]++;this.goalFulfillmentMapper.addSideEffect({goal,sideEffectName,pushTest});}/**
     * Add the given capabilities from these configurers
     * @param {SoftwareDeliveryMachineConfigurer} configurers
     * @return {this}
     */addCapabilities(...configurers){cov_1fbabk4t3h.f[56]++;cov_1fbabk4t3h.s[130]++;for(const configurer of configurers){cov_1fbabk4t3h.s[131]++;this.configure(configurer);}cov_1fbabk4t3h.s[132]++;return this;}configure(configurer){cov_1fbabk4t3h.f[57]++;cov_1fbabk4t3h.s[133]++;automation_client_1.logger.info("Adding capabilities from configurer '%s'",configurer.name);cov_1fbabk4t3h.s[134]++;configurer.configure(this);cov_1fbabk4t3h.s[135]++;return this;}}cov_1fbabk4t3h.s[136]++;exports.AbstractSoftwareDeliveryMachine=AbstractSoftwareDeliveryMachine;//# sourceMappingURL=data:application/json;charset=utf-8;base64,