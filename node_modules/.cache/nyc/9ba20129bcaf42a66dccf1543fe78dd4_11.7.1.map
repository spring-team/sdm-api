{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/command/generator/BitBucketRepoCreationParameters.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/command/generator/BitBucketRepoCreationParameters.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;AAEH,kEAAgG;AAGhG,wHAAqH;AACrH,sEAAmE;AAEnE,+BAA+B;AAC/B,qCAA6C,SAAQ,qDAAyB;IAW1E,IAAI,WAAW;QACX,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;IACrC,CAAC;IAED;;;;;OAKG;IACH,IAAI,OAAO;QACP,OAAO,IAAI,+CAAsB,CAC7B,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EACrB,IAAI,CAAC,CAAC;IACd,CAAC;CACJ;AAxBG;IADC,0BAAM,CAAC,2BAAO,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC,CAAC;;oEAC5C;AAMnB;IADC,mCAAe,CAAC,oCAAgB,CAAC,YAAY,EAAE,KAAK,CAAC;;+DAChC;AAT1B,0EA2BC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MappedParameter, MappedParameters, Secret, Secrets } from \"@atomist/automation-client\";\nimport { ProjectOperationCredentials } from \"@atomist/automation-client/operations/common/ProjectOperationCredentials\";\nimport { RemoteRepoRef } from \"@atomist/automation-client/operations/common/RepoId\";\nimport { NewRepoCreationParameters } from \"@atomist/automation-client/operations/generate/NewRepoCreationParameters\";\nimport { BitBucketServerRepoRef } from \"../BitBucketServerRepoRef\";\n\n// TODO could this be universal\nexport class BitBucketRepoCreationParameters extends NewRepoCreationParameters {\n\n    @Secret(Secrets.userToken([\"repo\", \"user:email\", \"read:user\"]))\n    public githubToken;\n\n    // @MappedParameter(MappedParameters.GitHubWebHookUrl)\n    // public webhookUrl: string;\n\n    @MappedParameter(MappedParameters.GitHubApiUrl, false)\n    public apiUrl: string;\n\n    get credentials(): ProjectOperationCredentials {\n        throw new Error(\"Override this\");\n    }\n\n    /**\n     * Return a single RepoRef or undefined if we're not identifying a single repo\n     * This implementation returns a GitHub.com repo but it can be overriden\n     * to return any kind of repo\n     * @return {RepoRef}\n     */\n    get repoRef(): RemoteRepoRef {\n        return new BitBucketServerRepoRef(\n            this.apiUrl,\n            this.owner, this.repo,\n            true);\n    }\n}\n"]}