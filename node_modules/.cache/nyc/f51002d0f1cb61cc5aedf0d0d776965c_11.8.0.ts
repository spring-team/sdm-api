"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_1q95n1r8yy=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/blueprint/dsl/goalDsl.ts",hash="72d1265b5e52171a0309442511266c6cfab88f76",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/blueprint/dsl/goalDsl.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:31},end:{line:18,column:92}},"2":{start:{line:19,column:19},end:{line:19,column:68}},"3":{start:{line:20,column:26},end:{line:20,column:91}},"4":{start:{line:21,column:24},end:{line:21,column:50}},"5":{start:{line:24,column:8},end:{line:24,column:38}},"6":{start:{line:27,column:8},end:{line:29,column:9}},"7":{start:{line:28,column:12},end:{line:28,column:35}},"8":{start:{line:30,column:8},end:{line:30,column:56}},"9":{start:{line:33,column:0},end:{line:33,column:46}},"10":{start:{line:41,column:4},end:{line:41,column:139}},"11":{start:{line:43,column:0},end:{line:43,column:46}},"12":{start:{line:48,column:0},end:{line:48,column:88}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:23,column:4},end:{line:23,column:5}},loc:{start:{line:23,column:40},end:{line:25,column:5}},line:23},"1":{name:"(anonymous_1)",decl:{start:{line:26,column:4},end:{line:26,column:5}},loc:{start:{line:26,column:20},end:{line:31,column:5}},line:26},"2":{name:"whenPushSatisfies",decl:{start:{line:40,column:9},end:{line:40,column:26}},loc:{start:{line:40,column:46},end:{line:42,column:1}},line:40}},branchMap:{"0":{loc:{start:{line:27,column:8},end:{line:29,column:9}},type:"if",locations:[{start:{line:27,column:8},end:{line:29,column:9}},{start:{line:27,column:8},end:{line:29,column:9}}],line:27}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_1q95n1r8yy.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const PredicateMappingTerm_1=(cov_1q95n1r8yy.s[1]++,require("../../common/listener/support/PredicateMappingTerm"));const PushRule_1=(cov_1q95n1r8yy.s[2]++,require("../../common/listener/support/PushRule"));const commonPushTests_1=(cov_1q95n1r8yy.s[3]++,require("../../common/listener/support/pushtest/commonPushTests"));const GoalComponent_1=(cov_1q95n1r8yy.s[4]++,require("./GoalComponent"));class GoalSetterMapping extends(PushRule_1.PushRule){constructor(guard1,guards,reason){cov_1q95n1r8yy.f[0]++;cov_1q95n1r8yy.s[5]++;super(guard1,guards,reason);}setGoals(goals){cov_1q95n1r8yy.f[1]++;cov_1q95n1r8yy.s[6]++;if(!goals){cov_1q95n1r8yy.b[0][0]++;cov_1q95n1r8yy.s[7]++;return this.set(goals);}else{cov_1q95n1r8yy.b[0][1]++;}cov_1q95n1r8yy.s[8]++;return this.set(GoalComponent_1.toGoals(goals));}}cov_1q95n1r8yy.s[9]++;exports.GoalSetterMapping=GoalSetterMapping;/**
 * Simple GoalSetter DSL. Allows use of booleans and functions
 * returning boolean in predicate expressions
 * @param {PushTest} guard1
 * @param {PushTest} guards
 */function whenPushSatisfies(guard1,...guards){cov_1q95n1r8yy.f[2]++;cov_1q95n1r8yy.s[10]++;return new GoalSetterMapping(PredicateMappingTerm_1.toPredicateMapping(guard1),guards.map(PredicateMappingTerm_1.toPredicateMapping));}cov_1q95n1r8yy.s[11]++;exports.whenPushSatisfies=whenPushSatisfies;/**
 * PushRule that matches every push
 * @type {GoalSetterMapping}
 */cov_1q95n1r8yy.s[12]++;exports.onAnyPush=new GoalSetterMapping(commonPushTests_1.AnyPush,[],"On any push");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2JsdWVwcmludC9kc2wvZ29hbERzbC50cyIsInNvdXJjZXMiOlsiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2JsdWVwcmludC9kc2wvZ29hbERzbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7O0dBY0c7O0FBS0gsNkZBQThHO0FBQzlHLHFFQUFrRTtBQUNsRSw0RkFBaUY7QUFDakYsbURBQXlEO0FBRXpELHVCQUErQixTQUFRLG1CQUFlO0lBRWxELFlBQVksTUFBZ0IsRUFBRSxNQUFrQixFQUFFLE1BQWU7UUFDN0QsS0FBSyxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVNLFFBQVEsQ0FBQyxLQUFvQjtRQUNoQyxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ1IsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQWMsQ0FBQyxDQUFDO1NBQ25DO1FBQ0QsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLHVCQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUNwQyxDQUFDO0NBRUo7QUFiRCw4Q0FhQztBQUVEOzs7OztHQUtHO0FBQ0gsMkJBQ0ksTUFBb0QsRUFDcEQsR0FBRyxNQUEyRDtJQUM5RCxPQUFPLElBQUksaUJBQWlCLENBQUMseUNBQWtCLENBQUMsTUFBTSxDQUFDLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyx5Q0FBa0IsQ0FBQyxDQUFDLENBQUM7QUFDN0YsQ0FBQztBQUpELDhDQUlDO0FBRUQ7OztHQUdHO0FBQ1UsUUFBQSxTQUFTLEdBQUcsSUFBSSxpQkFBaUIsQ0FBQyx5QkFBTyxFQUFFLEVBQUUsRUFBRSxhQUFhLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgwqkgMjAxOCBBdG9taXN0LCBJbmMuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IEdvYWxzIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9kZWxpdmVyeS9nb2Fscy9Hb2Fsc1wiO1xuaW1wb3J0IHsgUHVzaExpc3RlbmVySW52b2NhdGlvbiB9IGZyb20gXCIuLi8uLi9jb21tb24vbGlzdGVuZXIvUHVzaExpc3RlbmVyXCI7XG5pbXBvcnQgeyBQdXNoVGVzdCB9IGZyb20gXCIuLi8uLi9jb21tb24vbGlzdGVuZXIvUHVzaFRlc3RcIjtcbmltcG9ydCB7IFByZWRpY2F0ZU1hcHBpbmdUZXJtLCB0b1ByZWRpY2F0ZU1hcHBpbmcgfSBmcm9tIFwiLi4vLi4vY29tbW9uL2xpc3RlbmVyL3N1cHBvcnQvUHJlZGljYXRlTWFwcGluZ1Rlcm1cIjtcbmltcG9ydCB7IFB1c2hSdWxlIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9saXN0ZW5lci9zdXBwb3J0L1B1c2hSdWxlXCI7XG5pbXBvcnQgeyBBbnlQdXNoIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9saXN0ZW5lci9zdXBwb3J0L3B1c2h0ZXN0L2NvbW1vblB1c2hUZXN0c1wiO1xuaW1wb3J0IHsgR29hbENvbXBvbmVudCwgdG9Hb2FscyB9IGZyb20gXCIuL0dvYWxDb21wb25lbnRcIjtcblxuZXhwb3J0IGNsYXNzIEdvYWxTZXR0ZXJNYXBwaW5nIGV4dGVuZHMgUHVzaFJ1bGU8R29hbHM+IHtcblxuICAgIGNvbnN0cnVjdG9yKGd1YXJkMTogUHVzaFRlc3QsIGd1YXJkczogUHVzaFRlc3RbXSwgcmVhc29uPzogc3RyaW5nKSB7XG4gICAgICAgIHN1cGVyKGd1YXJkMSwgZ3VhcmRzLCByZWFzb24pO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXRHb2Fscyhnb2FsczogR29hbENvbXBvbmVudCk6IHRoaXMge1xuICAgICAgICBpZiAoIWdvYWxzKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5zZXQoZ29hbHMgYXMgR29hbHMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnNldCh0b0dvYWxzKGdvYWxzKSk7XG4gICAgfVxuXG59XG5cbi8qKlxuICogU2ltcGxlIEdvYWxTZXR0ZXIgRFNMLiBBbGxvd3MgdXNlIG9mIGJvb2xlYW5zIGFuZCBmdW5jdGlvbnNcbiAqIHJldHVybmluZyBib29sZWFuIGluIHByZWRpY2F0ZSBleHByZXNzaW9uc1xuICogQHBhcmFtIHtQdXNoVGVzdH0gZ3VhcmQxXG4gKiBAcGFyYW0ge1B1c2hUZXN0fSBndWFyZHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHdoZW5QdXNoU2F0aXNmaWVzKFxuICAgIGd1YXJkMTogUHJlZGljYXRlTWFwcGluZ1Rlcm08UHVzaExpc3RlbmVySW52b2NhdGlvbj4sXG4gICAgLi4uZ3VhcmRzOiBBcnJheTxQcmVkaWNhdGVNYXBwaW5nVGVybTxQdXNoTGlzdGVuZXJJbnZvY2F0aW9uPj4pOiBHb2FsU2V0dGVyTWFwcGluZyB7XG4gICAgcmV0dXJuIG5ldyBHb2FsU2V0dGVyTWFwcGluZyh0b1ByZWRpY2F0ZU1hcHBpbmcoZ3VhcmQxKSwgZ3VhcmRzLm1hcCh0b1ByZWRpY2F0ZU1hcHBpbmcpKTtcbn1cblxuLyoqXG4gKiBQdXNoUnVsZSB0aGF0IG1hdGNoZXMgZXZlcnkgcHVzaFxuICogQHR5cGUge0dvYWxTZXR0ZXJNYXBwaW5nfVxuICovXG5leHBvcnQgY29uc3Qgb25BbnlQdXNoID0gbmV3IEdvYWxTZXR0ZXJNYXBwaW5nKEFueVB1c2gsIFtdLCBcIk9uIGFueSBwdXNoXCIpO1xuIl19