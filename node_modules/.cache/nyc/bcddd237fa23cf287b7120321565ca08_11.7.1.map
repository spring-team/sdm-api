{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/common/listener/support/nodePushTestsTest.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/common/listener/support/nodePushTestsTest.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;AAEH,4FAAyF;AAEzF,uCAAuC;AAEvC,mGAAiG;AAEjG,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAE3B,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;QAE1B,EAAE,CAAC,kCAAkC,EAAE,GAAS,EAAE;YAC9C,MAAM,OAAO,GAAG,iCAAe,CAAC,EAAE,EAAE,CAAC;YACrC,MAAM,CAAC,GAAG,MAAM,0BAAY,CAAC,OAAO,CAAC,EAAC,OAAO,EAAkC,CAAC,CAAC;YACjF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QACf,CAAC,CAAA,CAAC,CAAC;QAEH,EAAE,CAAC,qCAAqC,EAAE,GAAS,EAAE;YACjD,MAAM,OAAO,GAAG,iCAAe,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,uBAAuB,EAAC,CAAC,CAAC;YAC9F,MAAM,CAAC,GAAG,MAAM,0BAAY,CAAC,OAAO,CAAC,EAAC,OAAO,EAAkC,CAAC,CAAC;YACjF,MAAM,CAAC,CAAC,CAAC,CAAC;QACd,CAAC,CAAA,CAAC,CAAC;QAEH,EAAE,CAAC,4CAA4C,EAAE,GAAS,EAAE;YACxD,MAAM,OAAO,GAAG,iCAAe,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,wBAAwB,EAAE,OAAO,EAAE,uBAAuB,EAAC,CAAC,CAAC;YACxG,MAAM,CAAC,GAAG,MAAM,0BAAY,CAAC,OAAO,CAAC,EAAC,OAAO,EAAkC,CAAC,CAAC;YACjF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QACf,CAAC,CAAA,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InMemoryProject } from \"@atomist/automation-client/project/mem/InMemoryProject\";\n\nimport * as assert from \"power-assert\";\nimport { PushListenerInvocation } from \"../../../../src/common/listener/PushListener\";\nimport { IsTypeScript } from \"../../../../src/common/listener/support/pushtest/node/tsPushTests\";\n\ndescribe(\"nodePushTests\", () => {\n\n    describe(\"IsTypeScript\", () => {\n\n        it(\"should not find ts in empty repo\", async () => {\n            const project = InMemoryProject.of();\n            const r = await IsTypeScript.mapping({project} as any as PushListenerInvocation);\n            assert(!r);\n        });\n\n        it(\"should find ts in repo with ts file\", async () => {\n            const project = InMemoryProject.of({ path: \"src/Thing.ts\", content: \"export class Thing {}\"});\n            const r = await IsTypeScript.mapping({project} as any as PushListenerInvocation);\n            assert(r);\n        });\n\n        it(\"should not find ts in repo with no ts file\", async () => {\n            const project = InMemoryProject.of({ path: \"src/main/java/Thing.kt\", content: \"public class Thing {}\"});\n            const r = await IsTypeScript.mapping({project} as any as PushListenerInvocation);\n            assert(!r);\n        });\n    });\n\n});\n"]}