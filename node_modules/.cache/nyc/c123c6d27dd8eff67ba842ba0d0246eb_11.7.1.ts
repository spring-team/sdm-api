"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_1cb82c1nm5=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/log/StringCapturingProgressLog.ts",hash="e58068b916ed1bb9eea60c762644f28e5c727305",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/log/StringCapturingProgressLog.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:24,column:8},end:{line:24,column:49}},"2":{start:{line:25,column:8},end:{line:25,column:22}},"3":{start:{line:28,column:8},end:{line:28,column:33}},"4":{start:{line:31,column:8},end:{line:31,column:33}},"5":{start:{line:34,column:8},end:{line:39,column:9}},"6":{start:{line:35,column:12},end:{line:35,column:29}},"7":{start:{line:38,column:12},end:{line:38,column:28}},"8":{start:{line:42,column:8},end:{line:42,column:37}},"9":{start:{line:45,column:0},end:{line:45,column:64}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:23,column:4},end:{line:23,column:5}},loc:{start:{line:23,column:18},end:{line:26,column:5}},line:23},"1":{name:"(anonymous_1)",decl:{start:{line:27,column:4},end:{line:27,column:5}},loc:{start:{line:27,column:12},end:{line:29,column:5}},line:27},"2":{name:"(anonymous_2)",decl:{start:{line:30,column:4},end:{line:30,column:5}},loc:{start:{line:30,column:12},end:{line:32,column:5}},line:30},"3":{name:"(anonymous_3)",decl:{start:{line:33,column:4},end:{line:33,column:5}},loc:{start:{line:33,column:16},end:{line:40,column:5}},line:33},"4":{name:"(anonymous_4)",decl:{start:{line:41,column:4},end:{line:41,column:5}},loc:{start:{line:41,column:18},end:{line:43,column:5}},line:41}},branchMap:{"0":{loc:{start:{line:34,column:8},end:{line:39,column:9}},type:"if",locations:[{start:{line:34,column:8},end:{line:39,column:9}},{start:{line:34,column:8},end:{line:39,column:9}}],line:34}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_1cb82c1nm5.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});/**
 * ProgressLog implementation that captures the log into a string and makes it
 * available from the log field
 */class StringCapturingProgressLog{constructor(){cov_1cb82c1nm5.f[0]++;cov_1cb82c1nm5.s[1]++;this.name="StringCapturingProgressLog";cov_1cb82c1nm5.s[2]++;this.log="";}close(){cov_1cb82c1nm5.f[1]++;cov_1cb82c1nm5.s[3]++;return Promise.resolve();}flush(){cov_1cb82c1nm5.f[2]++;cov_1cb82c1nm5.s[4]++;return Promise.resolve();}write(what){cov_1cb82c1nm5.f[3]++;cov_1cb82c1nm5.s[5]++;if(this.log){cov_1cb82c1nm5.b[0][0]++;cov_1cb82c1nm5.s[6]++;this.log+=what;}else{cov_1cb82c1nm5.b[0][1]++;cov_1cb82c1nm5.s[7]++;this.log=what;}}isAvailable(){cov_1cb82c1nm5.f[4]++;cov_1cb82c1nm5.s[8]++;return Promise.resolve(true);}}cov_1cb82c1nm5.s[9]++;exports.StringCapturingProgressLog=StringCapturingProgressLog;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2NvbW1vbi9sb2cvU3RyaW5nQ2FwdHVyaW5nUHJvZ3Jlc3NMb2cudHMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9yb2Rqb2huc29uL3Nmb3J6YW5kby1kZXYvaWRlYS1wcm9qZWN0cy9teS1mbG93L3NyYy9jb21tb24vbG9nL1N0cmluZ0NhcHR1cmluZ1Byb2dyZXNzTG9nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7Ozs7R0FjRzs7QUFJSDs7O0dBR0c7QUFDSDtJQUFBO1FBRW9CLFNBQUksR0FBVyw0QkFBNEIsQ0FBQztRQUVyRCxRQUFHLEdBQVcsRUFBRSxDQUFDO0lBc0I1QixDQUFDO0lBbkJVLEtBQUs7UUFDUixPQUFPLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUM3QixDQUFDO0lBRU0sS0FBSztRQUNSLE9BQU8sT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQzdCLENBQUM7SUFFTSxLQUFLLENBQUMsSUFBWTtRQUNyQixJQUFJLElBQUksQ0FBQyxHQUFHLEVBQUU7WUFDVixJQUFJLENBQUMsR0FBRyxJQUFJLElBQUksQ0FBQztTQUNwQjthQUFNO1lBQ0gsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUM7U0FDbkI7SUFDTCxDQUFDO0lBRU0sV0FBVztRQUNkLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNqQyxDQUFDO0NBQ0o7QUExQkQsZ0VBMEJDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCDCqSAyMDE4IEF0b21pc3QsIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgUHJvZ3Jlc3NMb2cgfSBmcm9tIFwiLi4vLi4vc3BpL2xvZy9Qcm9ncmVzc0xvZ1wiO1xuXG4vKipcbiAqIFByb2dyZXNzTG9nIGltcGxlbWVudGF0aW9uIHRoYXQgY2FwdHVyZXMgdGhlIGxvZyBpbnRvIGEgc3RyaW5nIGFuZCBtYWtlcyBpdFxuICogYXZhaWxhYmxlIGZyb20gdGhlIGxvZyBmaWVsZFxuICovXG5leHBvcnQgY2xhc3MgU3RyaW5nQ2FwdHVyaW5nUHJvZ3Jlc3NMb2cgaW1wbGVtZW50cyBQcm9ncmVzc0xvZyB7XG5cbiAgICBwdWJsaWMgcmVhZG9ubHkgbmFtZTogc3RyaW5nID0gXCJTdHJpbmdDYXB0dXJpbmdQcm9ncmVzc0xvZ1wiO1xuXG4gICAgcHVibGljIGxvZzogc3RyaW5nID0gXCJcIjtcbiAgICBwdWJsaWMgdXJsOiBzdHJpbmc7XG5cbiAgICBwdWJsaWMgY2xvc2UoKTogUHJvbWlzZTxhbnk+IHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgIH1cblxuICAgIHB1YmxpYyBmbHVzaCgpOiBQcm9taXNlPGFueT4ge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgfVxuXG4gICAgcHVibGljIHdyaXRlKHdoYXQ6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5sb2cpIHtcbiAgICAgICAgICAgIHRoaXMubG9nICs9IHdoYXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmxvZyA9IHdoYXQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgaXNBdmFpbGFibGUoKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodHJ1ZSk7XG4gICAgfVxufVxuIl19