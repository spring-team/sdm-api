"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_2ptj7sl9fi=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/command/editor/editorWrappers.ts",hash="c2f2f5ce6fc1c97c18b437df08a4265317f1184e",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/command/editor/editorWrappers.ts",statementMap:{"0":{start:{line:17,column:16},end:{line:24,column:1}},"1":{start:{line:18,column:4},end:{line:23,column:7}},"2":{start:{line:19,column:36},end:{line:19,column:97}},"3":{start:{line:19,column:42},end:{line:19,column:70}},"4":{start:{line:19,column:85},end:{line:19,column:95}},"5":{start:{line:20,column:35},end:{line:20,column:100}},"6":{start:{line:20,column:41},end:{line:20,column:73}},"7":{start:{line:20,column:88},end:{line:20,column:98}},"8":{start:{line:21,column:32},end:{line:21,column:149}},"9":{start:{line:21,column:97},end:{line:21,column:119}},"10":{start:{line:22,column:8},end:{line:22,column:78}},"11":{start:{line:25,column:0},end:{line:25,column:62}},"12":{start:{line:26,column:28},end:{line:26,column:65}},"13":{start:{line:27,column:24},end:{line:27,column:91}},"14":{start:{line:28,column:24},end:{line:28,column:48}},"15":{start:{line:29,column:28},end:{line:29,column:74}},"16":{start:{line:30,column:18},end:{line:30,column:55}},"17":{start:{line:31,column:29},end:{line:31,column:68}},"18":{start:{line:40,column:4},end:{line:43,column:6}},"19":{start:{line:41,column:33},end:{line:41,column:42}},"20":{start:{line:42,column:8},end:{line:42,column:58}},"21":{start:{line:45,column:0},end:{line:45,column:50}},"22":{start:{line:54,column:4},end:{line:70,column:7}},"23":{start:{line:54,column:40},end:{line:70,column:6}},"24":{start:{line:55,column:19},end:{line:55,column:29}},"25":{start:{line:56,column:8},end:{line:69,column:9}},"26":{start:{line:57,column:40},end:{line:57,column:113}},"27":{start:{line:58,column:31},end:{line:58,column:95}},"28":{start:{line:59,column:12},end:{line:59,column:166}},"29":{start:{line:60,column:12},end:{line:62,column:13}},"30":{start:{line:61,column:16},end:{line:61,column:103}},"31":{start:{line:63,column:12},end:{line:63,column:30}},"32":{start:{line:66,column:12},end:{line:66,column:98}},"33":{start:{line:67,column:12},end:{line:67,column:94}},"34":{start:{line:68,column:12},end:{line:68,column:70}},"35":{start:{line:72,column:0},end:{line:72,column:36}},"36":{start:{line:81,column:4},end:{line:99,column:7}},"37":{start:{line:81,column:18},end:{line:99,column:6}},"38":{start:{line:82,column:21},end:{line:84,column:9}},"39":{start:{line:86,column:8},end:{line:96,column:9}},"40":{start:{line:87,column:12},end:{line:87,column:106}},"41":{start:{line:88,column:12},end:{line:91,column:15}},"42":{start:{line:89,column:47},end:{line:89,column:57}},"43":{start:{line:92,column:12},end:{line:95,column:13}},"44":{start:{line:93,column:16},end:{line:93,column:134}},"45":{start:{line:94,column:16},end:{line:94,column:22}},"46":{start:{line:97,column:23},end:{line:97,column:42}},"47":{start:{line:98,column:8},end:{line:98,column:85}},"48":{start:{line:101,column:0},end:{line:101,column:50}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:44},end:{line:17,column:45}},loc:{start:{line:17,column:89},end:{line:24,column:1}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:36},end:{line:18,column:37}},loc:{start:{line:18,column:63},end:{line:23,column:5}},line:18},"2":{name:"fulfilled",decl:{start:{line:19,column:17},end:{line:19,column:26}},loc:{start:{line:19,column:34},end:{line:19,column:99}},line:19},"3":{name:"rejected",decl:{start:{line:20,column:17},end:{line:20,column:25}},loc:{start:{line:20,column:33},end:{line:20,column:102}},line:20},"4":{name:"step",decl:{start:{line:21,column:17},end:{line:21,column:21}},loc:{start:{line:21,column:30},end:{line:21,column:151}},line:21},"5":{name:"(anonymous_5)",decl:{start:{line:21,column:76},end:{line:21,column:77}},loc:{start:{line:21,column:95},end:{line:21,column:121}},line:21},"6":{name:"chattyEditorFactory",decl:{start:{line:39,column:9},end:{line:39,column:28}},loc:{start:{line:39,column:44},end:{line:44,column:1}},line:39},"7":{name:"(anonymous_7)",decl:{start:{line:40,column:11},end:{line:40,column:12}},loc:{start:{line:40,column:21},end:{line:43,column:5}},line:40},"8":{name:"chattyEditor",decl:{start:{line:53,column:9},end:{line:53,column:21}},loc:{start:{line:53,column:52},end:{line:71,column:1}},line:53},"9":{name:"(anonymous_9)",decl:{start:{line:54,column:11},end:{line:54,column:12}},loc:{start:{line:54,column:40},end:{line:70,column:6}},line:54},"10":{name:"(anonymous_10)",decl:{start:{line:54,column:72},end:{line:54,column:73}},loc:{start:{line:54,column:85},end:{line:70,column:5}},line:54},"11":{name:"localCommandsEditor",decl:{start:{line:80,column:9},end:{line:80,column:28}},loc:{start:{line:80,column:102},end:{line:100,column:1}},line:80},"12":{name:"(anonymous_12)",decl:{start:{line:81,column:11},end:{line:81,column:12}},loc:{start:{line:81,column:18},end:{line:99,column:6}},line:81},"13":{name:"(anonymous_13)",decl:{start:{line:81,column:50},end:{line:81,column:51}},loc:{start:{line:81,column:63},end:{line:99,column:5}},line:81},"14":{name:"(anonymous_14)",decl:{start:{line:89,column:29},end:{line:89,column:30}},loc:{start:{line:89,column:47},end:{line:89,column:57}},line:89}},branchMap:{"0":{loc:{start:{line:17,column:16},end:{line:24,column:1}},type:"binary-expr",locations:[{start:{line:17,column:17},end:{line:17,column:21}},{start:{line:17,column:25},end:{line:17,column:39}},{start:{line:17,column:44},end:{line:24,column:1}}],line:17},"1":{loc:{start:{line:18,column:16},end:{line:18,column:34}},type:"binary-expr",locations:[{start:{line:18,column:16},end:{line:18,column:17}},{start:{line:18,column:22},end:{line:18,column:33}}],line:18},"2":{loc:{start:{line:21,column:32},end:{line:21,column:148}},type:"cond-expr",locations:[{start:{line:21,column:46},end:{line:21,column:67}},{start:{line:21,column:70},end:{line:21,column:148}}],line:21},"3":{loc:{start:{line:22,column:51},end:{line:22,column:67}},type:"binary-expr",locations:[{start:{line:22,column:51},end:{line:22,column:61}},{start:{line:22,column:65},end:{line:22,column:67}}],line:22},"4":{loc:{start:{line:60,column:12},end:{line:62,column:13}},type:"if",locations:[{start:{line:60,column:12},end:{line:62,column:13}},{start:{line:60,column:12},end:{line:62,column:13}}],line:60},"5":{loc:{start:{line:80,column:39},end:{line:80,column:100}},type:"default-arg",locations:[{start:{line:80,column:45},end:{line:80,column:100}}],line:80},"6":{loc:{start:{line:92,column:12},end:{line:95,column:13}},type:"if",locations:[{start:{line:92,column:12},end:{line:95,column:13}},{start:{line:92,column:12},end:{line:95,column:13}}],line:92}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0],"6":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var __awaiter=(cov_2ptj7sl9fi.s[0]++,(cov_2ptj7sl9fi.b[0][0]++,this)&&(cov_2ptj7sl9fi.b[0][1]++,this.__awaiter)||(cov_2ptj7sl9fi.b[0][2]++,function(thisArg,_arguments,P,generator){cov_2ptj7sl9fi.f[0]++;cov_2ptj7sl9fi.s[1]++;return new((cov_2ptj7sl9fi.b[1][0]++,P)||(cov_2ptj7sl9fi.b[1][1]++,P=Promise))(function(resolve,reject){cov_2ptj7sl9fi.f[1]++;function fulfilled(value){cov_2ptj7sl9fi.f[2]++;cov_2ptj7sl9fi.s[2]++;try{cov_2ptj7sl9fi.s[3]++;step(generator.next(value));}catch(e){cov_2ptj7sl9fi.s[4]++;reject(e);}}function rejected(value){cov_2ptj7sl9fi.f[3]++;cov_2ptj7sl9fi.s[5]++;try{cov_2ptj7sl9fi.s[6]++;step(generator["throw"](value));}catch(e){cov_2ptj7sl9fi.s[7]++;reject(e);}}function step(result){cov_2ptj7sl9fi.f[4]++;cov_2ptj7sl9fi.s[8]++;result.done?(cov_2ptj7sl9fi.b[2][0]++,resolve(result.value)):(cov_2ptj7sl9fi.b[2][1]++,new P(function(resolve){cov_2ptj7sl9fi.f[5]++;cov_2ptj7sl9fi.s[9]++;resolve(result.value);}).then(fulfilled,rejected));}cov_2ptj7sl9fi.s[10]++;step((generator=generator.apply(thisArg,(cov_2ptj7sl9fi.b[3][0]++,_arguments)||(cov_2ptj7sl9fi.b[3][1]++,[]))).next());});}));cov_2ptj7sl9fi.s[11]++;Object.defineProperty(exports,"__esModule",{value:true});const automation_client_1=(cov_2ptj7sl9fi.s[12]++,require("@atomist/automation-client"));const projectEditor_1=(cov_2ptj7sl9fi.s[13]++,require("@atomist/automation-client/operations/edit/projectEditor"));const child_process_1=(cov_2ptj7sl9fi.s[14]++,require("child_process"));const confirmEditedness_1=(cov_2ptj7sl9fi.s[15]++,require("../../../util/git/confirmEditedness"));const spawned_1=(cov_2ptj7sl9fi.s[16]++,require("../../../util/misc/spawned"));const LoggingProgressLog_1=(cov_2ptj7sl9fi.s[17]++,require("../../log/LoggingProgressLog"));/**
 * Decorate an editor factory to make editors it creates chatty, so they respond to
 * Slack if there's nothing for them to do
 * @param editorName name of the editor
 * @param {(params: PARAMS) => AnyProjectEditor} f
 * @return {(params: PARAMS) => AnyProjectEditor}
 */function chattyEditorFactory(editorName,f){cov_2ptj7sl9fi.f[6]++;cov_2ptj7sl9fi.s[18]++;return params=>{cov_2ptj7sl9fi.f[7]++;const underlyingEditor=(cov_2ptj7sl9fi.s[19]++,f(params));cov_2ptj7sl9fi.s[20]++;return chattyEditor(editorName,underlyingEditor);};}cov_2ptj7sl9fi.s[21]++;exports.chattyEditorFactory=chattyEditorFactory;/**
 * Wrap this editor to make it chatty, so it responds to
 * Slack if there's nothing to do
 * @param editorName name of the editor
 * @param {AnyProjectEditor} underlyingEditor
 * @return {(project: GitProject, context, parms) => Promise<any | EditResult>}
 */function chattyEditor(editorName,underlyingEditor){cov_2ptj7sl9fi.f[8]++;cov_2ptj7sl9fi.s[22]++;return(project,context,parms)=>{cov_2ptj7sl9fi.f[9]++;cov_2ptj7sl9fi.s[23]++;return __awaiter(this,void 0,void 0,function*(){cov_2ptj7sl9fi.f[10]++;const id=(cov_2ptj7sl9fi.s[24]++,project.id);cov_2ptj7sl9fi.s[25]++;try{const tentativeEditResult=(cov_2ptj7sl9fi.s[26]++,yield projectEditor_1.toEditor(underlyingEditor)(project,context,parms));const editResult=(cov_2ptj7sl9fi.s[27]++,yield confirmEditedness_1.confirmEditedness(tentativeEditResult));cov_2ptj7sl9fi.s[28]++;automation_client_1.logger.debug("chattyEditor %s: git status on %j is %j: editResult=%j",editorName,project.id,(yield project.gitStatus()),editResult);cov_2ptj7sl9fi.s[29]++;if(!editResult.edited){cov_2ptj7sl9fi.b[4][0]++;cov_2ptj7sl9fi.s[30]++;yield context.messageClient.respond(`*${editorName}*: Nothing to do on \`${id.url}\``);}else{cov_2ptj7sl9fi.b[4][1]++;}cov_2ptj7sl9fi.s[31]++;return editResult;}catch(err){cov_2ptj7sl9fi.s[32]++;yield context.messageClient.respond(`*${editorName}*: Nothing done on \`${id.url}\``);cov_2ptj7sl9fi.s[33]++;automation_client_1.logger.warn("Editor error acting on %j: %s",project.id,err);cov_2ptj7sl9fi.s[34]++;return{target:project,edited:false,success:false};}});};}cov_2ptj7sl9fi.s[35]++;exports.chattyEditor=chattyEditor;/**
 * Create a project editor wrapping spawned local commands
 * run on the project. For example, allows use of tslint as an editor.
 * @param {SpawnCommand[]} commands to execute
 * @param log progress log (optional, stream to console if not passed in)
 * @return {ProjectEditor}
 */function localCommandsEditor(commands,log=(cov_2ptj7sl9fi.b[5][0]++,new LoggingProgressLog_1.LoggingProgressLog("commands"))){cov_2ptj7sl9fi.f[11]++;cov_2ptj7sl9fi.s[36]++;return p=>{cov_2ptj7sl9fi.f[12]++;cov_2ptj7sl9fi.s[37]++;return __awaiter(this,void 0,void 0,function*(){cov_2ptj7sl9fi.f[13]++;const opts=(cov_2ptj7sl9fi.s[38]++,{cwd:p.baseDir});let commandResult;cov_2ptj7sl9fi.s[39]++;for(const cmd of commands){cov_2ptj7sl9fi.s[40]++;automation_client_1.logger.info("Executing command %s",spawned_1.stringifySpawnCommand(cmd));cov_2ptj7sl9fi.s[41]++;commandResult=yield spawned_1.watchSpawned(child_process_1.spawn(cmd.command,cmd.args,Object.assign({},opts,cmd.options)),log,{errorFinder:(code,signal)=>{cov_2ptj7sl9fi.f[14]++;cov_2ptj7sl9fi.s[42]++;return code!==0;},stripAnsi:true});cov_2ptj7sl9fi.s[43]++;if(commandResult.error){cov_2ptj7sl9fi.b[6][0]++;cov_2ptj7sl9fi.s[44]++;automation_client_1.logger.warn("Error in command %s: %s",spawned_1.stringifySpawnCommand(cmd),commandResult.error);cov_2ptj7sl9fi.s[45]++;break;}else{cov_2ptj7sl9fi.b[6][1]++;}}const status=(cov_2ptj7sl9fi.s[46]++,yield p.gitStatus());cov_2ptj7sl9fi.s[47]++;return{edited:!status.isClean,target:p,success:!commandResult.error};});};}cov_2ptj7sl9fi.s[48]++;exports.localCommandsEditor=localCommandsEditor;//# sourceMappingURL=data:application/json;charset=utf-8;base64,