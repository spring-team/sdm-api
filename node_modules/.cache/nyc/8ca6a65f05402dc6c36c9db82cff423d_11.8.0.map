{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/blueprint/support/ListenerRegistrationSupport.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/blueprint/support/ListenerRegistrationSupport.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AutofixRegistration } from \"../../common/delivery/code/autofix/AutofixRegistration\";\nimport { FingerprinterRegistration } from \"../../common/delivery/code/fingerprint/FingerprinterRegistration\";\nimport { PushReactionRegisterable } from \"../../common/delivery/code/PushReactionRegistration\";\nimport { ReviewerRegistration } from \"../../common/delivery/code/review/ReviewerRegistration\";\nimport { ArtifactListenerRegisterable } from \"../../common/listener/ArtifactListener\";\nimport { BuildListener } from \"../../common/listener/BuildListener\";\nimport { ChannelLinkListener } from \"../../common/listener/ChannelLinkListenerInvocation\";\nimport { ClosedIssueListener } from \"../../common/listener/ClosedIssueListener\";\nimport { DeploymentListener } from \"../../common/listener/DeploymentListener\";\nimport { FingerprintDifferenceListener } from \"../../common/listener/FingerprintDifferenceListener\";\nimport { FingerprintListener } from \"../../common/listener/FingerprintListener\";\nimport { GoalCompletionListener, GoalsSetListener } from \"../../common/listener/GoalsSetListener\";\nimport { NewIssueListener } from \"../../common/listener/NewIssueListener\";\nimport { ProjectListener } from \"../../common/listener/ProjectListener\";\nimport { PullRequestListener } from \"../../common/listener/PullRequestListener\";\nimport { PushListener } from \"../../common/listener/PushListener\";\nimport { RepoCreationListener } from \"../../common/listener/RepoCreationListener\";\nimport { ReviewListener } from \"../../common/listener/ReviewListener\";\nimport { TagListener } from \"../../common/listener/TagListener\";\nimport { UpdatedIssueListener } from \"../../common/listener/UpdatedIssueListener\";\nimport { UserJoiningChannelListener } from \"../../common/listener/UserJoiningChannelListener\";\nimport { VerifiedDeploymentListener } from \"../../common/listener/VerifiedDeploymentListener\";\nimport { EndpointVerificationListener } from \"../../handlers/events/delivery/verify/executeVerifyEndpoint\";\nimport { ListenerRegistration } from \"../ListenerRegistration\";\n\n/**\n * Listener management offering a fluent builder pattern for registrations.\n * This class is purely a registration store, and has no other behavior.\n */\nexport class ListenerRegistrationSupport implements ListenerRegistration {\n\n    protected readonly buildListeners: BuildListener[] = [];\n\n    protected readonly userJoiningChannelListeners: UserJoiningChannelListener[] = [];\n\n    protected readonly tagListeners: TagListener[] = [];\n\n    protected readonly newIssueListeners: NewIssueListener[] = [];\n\n    protected readonly updatedIssueListeners: UpdatedIssueListener[] = [];\n\n    protected readonly closedIssueListeners: ClosedIssueListener[] = [];\n\n    protected readonly repoCreationListeners: RepoCreationListener[] = [];\n\n    protected readonly repoOnboardingListeners: ProjectListener[] = [];\n\n    protected readonly pullRequestListeners: PullRequestListener[] = [];\n\n    protected readonly newRepoWithCodeActions: PushListener[] = [];\n\n    protected readonly channelLinkListeners: ChannelLinkListener[] = [];\n\n    protected readonly goalsSetListeners: GoalsSetListener[] = [];\n\n    protected readonly reviewerRegistrations: ReviewerRegistration[] = [];\n\n    protected readonly reviewListeners: ReviewListener[] = [];\n\n    protected readonly pushReactionRegistrations: PushReactionRegisterable[] = [];\n\n    protected readonly autofixRegistrations: AutofixRegistration[] = [];\n\n    protected readonly artifactListenerRegistrations: ArtifactListenerRegisterable[] = [];\n\n    protected readonly fingerprinterRegistrations: FingerprinterRegistration[] = [];\n\n    protected readonly fingerprintListeners: FingerprintListener[] = [];\n\n    protected readonly fingerprintDifferenceListeners: FingerprintDifferenceListener[] = [];\n\n    protected readonly deploymentListeners?: DeploymentListener[] = [];\n\n    protected readonly verifiedDeploymentListeners: VerifiedDeploymentListener[] = [];\n\n    protected readonly endpointVerificationListeners: EndpointVerificationListener[] = [];\n\n    protected readonly goalCompletionListeners: GoalCompletionListener[] = [];\n\n    public addNewIssueListeners(...e: NewIssueListener[]): this {\n        this.newIssueListeners.push(...e);\n        return this;\n    }\n\n    public addUpdatedIssueListeners(...e: UpdatedIssueListener[]): this {\n        this.updatedIssueListeners.push(...e);\n        return this;\n    }\n\n    /**\n     * These are invoked when a goal reaches status \"failure\" or \"success\"\n     * @param {GoalCompletionListener} e\n     * @returns {this}\n     */\n    public addGoalCompletionListeners(...e: GoalCompletionListener[]): this {\n        this.goalCompletionListeners.push(...e);\n        return this;\n    }\n\n    public addClosedIssueListeners(...e: ClosedIssueListener[]): this {\n        this.closedIssueListeners.push(...e);\n        return this;\n    }\n\n    public addTagListeners(...e: TagListener[]): this {\n        this.tagListeners.push(...e);\n        return this;\n    }\n\n    public addChannelLinkListeners(...e: ChannelLinkListener[]): this {\n        this.channelLinkListeners.push(...e);\n        return this;\n    }\n\n    public addBuildListeners(...e: BuildListener[]): this {\n        this.buildListeners.push(...e);\n        return this;\n    }\n\n    /**\n     * You probably mean to use addNewRepoWithCodeActions!\n     * This responds to a repo creation, but there may be no\n     * code in it.\n     * @param {RepoCreationListener} rcls\n     * @return {this}\n     */\n    public addRepoCreationListeners(...rcls: RepoCreationListener[]): this {\n        this.repoCreationListeners.push(...rcls);\n        return this;\n    }\n\n    public addRepoOnboardingListeners(...rols: ProjectListener[]): this {\n        this.repoOnboardingListeners.push(...rols);\n        return this;\n    }\n\n    public addNewRepoWithCodeActions(...pls: PushListener[]): this {\n        this.newRepoWithCodeActions.push(...pls);\n        return this;\n    }\n\n    public addPullRequestListeners(...pls: PullRequestListener[]): this {\n        this.pullRequestListeners.push(...pls);\n        return this;\n    }\n\n    public addGoalsSetListeners(...listeners: GoalsSetListener[]): this {\n        this.goalsSetListeners.push(...listeners);\n        return this;\n    }\n\n    public addReviewerRegistrations(...reviewers: ReviewerRegistration[]): this {\n        this.reviewerRegistrations.push(...reviewers);\n        return this;\n    }\n\n    /**\n     * Add review listeners. Will be invoked during a ReviewGoal\n     * @param {ReviewListener} listeners\n     * @return {this}\n     */\n    public addReviewListeners(...listeners: ReviewListener[]): this {\n        this.reviewListeners.push(...listeners);\n        return this;\n    }\n\n    /**\n     * Add reactions to a push: That is, functions that run during execution of a\n     * PushReaction goal.\n     * @param {PushReactionRegistration} prrs\n     * @return {this}\n     */\n    public addPushReactions(...prrs: PushReactionRegisterable[]): this {\n        this.pushReactionRegistrations.push(...prrs);\n        return this;\n    }\n\n    public addArtifactListeners(...alrs: ArtifactListenerRegisterable[]): this {\n        this.artifactListenerRegistrations.push(...alrs);\n        return this;\n    }\n\n    /**\n     * Editors automatically invoked on eligible commits.\n     * Note: be sure that these editors check and don't cause\n     * infinite recursion!!\n     */\n    public addAutofixes(...ars: AutofixRegistration[]): this {\n        this.autofixRegistrations.push(...ars);\n        return this;\n    }\n\n    public addFingerprinterRegistrations(...f: FingerprinterRegistration[]): this {\n        this.fingerprinterRegistrations.push(...f);\n        return this;\n    }\n\n    public addFingerprintListeners(...l: FingerprintListener[]): this {\n        this.fingerprintListeners.push(...l);\n        return this;\n    }\n\n    public addFingerprintDifferenceListeners(...fh: FingerprintDifferenceListener[]): this {\n        this.fingerprintDifferenceListeners.push(...fh);\n        return this;\n    }\n\n    public addDeploymentListeners(...l: DeploymentListener[]): this {\n        this.deploymentListeners.push(...l);\n        return this;\n    }\n\n    public addVerifiedDeploymentListeners(...l: VerifiedDeploymentListener[]): this {\n        this.verifiedDeploymentListeners.push(...l);\n        return this;\n    }\n\n    public addEndpointVerificationListeners(...l: EndpointVerificationListener[]): this {\n        this.endpointVerificationListeners.push(...l);\n        return this;\n    }\n\n    public addUserJoiningChannelListeners(...l: UserJoiningChannelListener[]): this {\n        this.userJoiningChannelListeners.push(...l);\n        return this;\n    }\n\n}\n"]}