"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_q8rxs2pdr=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/spi/log/logFactory.ts",hash="b438178cf44fbfc9eef9ee15f43ef7446d34760f",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/spi/log/logFactory.ts",statementMap:{"0":{start:{line:17,column:16},end:{line:24,column:1}},"1":{start:{line:18,column:4},end:{line:23,column:7}},"2":{start:{line:19,column:36},end:{line:19,column:97}},"3":{start:{line:19,column:42},end:{line:19,column:70}},"4":{start:{line:19,column:85},end:{line:19,column:95}},"5":{start:{line:20,column:35},end:{line:20,column:100}},"6":{start:{line:20,column:41},end:{line:20,column:73}},"7":{start:{line:20,column:88},end:{line:20,column:98}},"8":{start:{line:21,column:32},end:{line:21,column:149}},"9":{start:{line:21,column:97},end:{line:21,column:119}},"10":{start:{line:22,column:8},end:{line:22,column:78}},"11":{start:{line:25,column:0},end:{line:25,column:62}},"12":{start:{line:26,column:28},end:{line:26,column:65}},"13":{start:{line:27,column:38},end:{line:27,column:93}},"14":{start:{line:28,column:31},end:{line:28,column:79}},"15":{start:{line:29,column:36},end:{line:29,column:89}},"16":{start:{line:30,column:29},end:{line:30,column:75}},"17":{start:{line:31,column:32},end:{line:31,column:81}},"18":{start:{line:40,column:31},end:{line:40,column:126}},"19":{start:{line:40,column:63},end:{line:40,column:126}},"20":{start:{line:41,column:4},end:{line:46,column:5}},"21":{start:{line:42,column:8},end:{line:42,column:81}},"22":{start:{line:43,column:8},end:{line:45,column:10}},"23":{start:{line:44,column:12},end:{line:44,column:196}},"24":{start:{line:47,column:4},end:{line:51,column:7}},"25":{start:{line:47,column:33},end:{line:51,column:6}},"26":{start:{line:48,column:21},end:{line:48,column:33}},"27":{start:{line:49,column:30},end:{line:49,column:133}},"28":{start:{line:50,column:8},end:{line:50,column:161}},"29":{start:{line:53,column:0},end:{line:53,column:32}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:44},end:{line:17,column:45}},loc:{start:{line:17,column:89},end:{line:24,column:1}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:36},end:{line:18,column:37}},loc:{start:{line:18,column:63},end:{line:23,column:5}},line:18},"2":{name:"fulfilled",decl:{start:{line:19,column:17},end:{line:19,column:26}},loc:{start:{line:19,column:34},end:{line:19,column:99}},line:19},"3":{name:"rejected",decl:{start:{line:20,column:17},end:{line:20,column:25}},loc:{start:{line:20,column:33},end:{line:20,column:102}},line:20},"4":{name:"step",decl:{start:{line:21,column:17},end:{line:21,column:21}},loc:{start:{line:21,column:30},end:{line:21,column:151}},line:21},"5":{name:"(anonymous_5)",decl:{start:{line:21,column:76},end:{line:21,column:77}},loc:{start:{line:21,column:95},end:{line:21,column:121}},line:21},"6":{name:"logFactory",decl:{start:{line:39,column:9},end:{line:39,column:19}},loc:{start:{line:39,column:52},end:{line:52,column:1}},line:39},"7":{name:"(anonymous_7)",decl:{start:{line:40,column:31},end:{line:40,column:32}},loc:{start:{line:40,column:63},end:{line:40,column:126}},line:40},"8":{name:"(anonymous_8)",decl:{start:{line:43,column:31},end:{line:43,column:32}},loc:{start:{line:43,column:63},end:{line:45,column:9}},line:43},"9":{name:"(anonymous_9)",decl:{start:{line:47,column:11},end:{line:47,column:12}},loc:{start:{line:47,column:33},end:{line:51,column:6}},line:47},"10":{name:"(anonymous_10)",decl:{start:{line:47,column:65},end:{line:47,column:66}},loc:{start:{line:47,column:78},end:{line:51,column:5}},line:47}},branchMap:{"0":{loc:{start:{line:17,column:16},end:{line:24,column:1}},type:"binary-expr",locations:[{start:{line:17,column:17},end:{line:17,column:21}},{start:{line:17,column:25},end:{line:17,column:39}},{start:{line:17,column:44},end:{line:24,column:1}}],line:17},"1":{loc:{start:{line:18,column:16},end:{line:18,column:34}},type:"binary-expr",locations:[{start:{line:18,column:16},end:{line:18,column:17}},{start:{line:18,column:22},end:{line:18,column:33}}],line:18},"2":{loc:{start:{line:21,column:32},end:{line:21,column:148}},type:"cond-expr",locations:[{start:{line:21,column:46},end:{line:21,column:67}},{start:{line:21,column:70},end:{line:21,column:148}}],line:21},"3":{loc:{start:{line:22,column:51},end:{line:22,column:67}},type:"binary-expr",locations:[{start:{line:22,column:51},end:{line:22,column:61}},{start:{line:22,column:65},end:{line:22,column:67}}],line:22},"4":{loc:{start:{line:41,column:4},end:{line:46,column:5}},type:"if",locations:[{start:{line:41,column:4},end:{line:46,column:5}},{start:{line:41,column:4},end:{line:46,column:5}}],line:41}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var __awaiter=(cov_q8rxs2pdr.s[0]++,(cov_q8rxs2pdr.b[0][0]++,this)&&(cov_q8rxs2pdr.b[0][1]++,this.__awaiter)||(cov_q8rxs2pdr.b[0][2]++,function(thisArg,_arguments,P,generator){cov_q8rxs2pdr.f[0]++;cov_q8rxs2pdr.s[1]++;return new((cov_q8rxs2pdr.b[1][0]++,P)||(cov_q8rxs2pdr.b[1][1]++,P=Promise))(function(resolve,reject){cov_q8rxs2pdr.f[1]++;function fulfilled(value){cov_q8rxs2pdr.f[2]++;cov_q8rxs2pdr.s[2]++;try{cov_q8rxs2pdr.s[3]++;step(generator.next(value));}catch(e){cov_q8rxs2pdr.s[4]++;reject(e);}}function rejected(value){cov_q8rxs2pdr.f[3]++;cov_q8rxs2pdr.s[5]++;try{cov_q8rxs2pdr.s[6]++;step(generator["throw"](value));}catch(e){cov_q8rxs2pdr.s[7]++;reject(e);}}function step(result){cov_q8rxs2pdr.f[4]++;cov_q8rxs2pdr.s[8]++;result.done?(cov_q8rxs2pdr.b[2][0]++,resolve(result.value)):(cov_q8rxs2pdr.b[2][1]++,new P(function(resolve){cov_q8rxs2pdr.f[5]++;cov_q8rxs2pdr.s[9]++;resolve(result.value);}).then(fulfilled,rejected));}cov_q8rxs2pdr.s[10]++;step((generator=generator.apply(thisArg,(cov_q8rxs2pdr.b[3][0]++,_arguments)||(cov_q8rxs2pdr.b[3][1]++,[]))).next());});}));cov_q8rxs2pdr.s[11]++;Object.defineProperty(exports,"__esModule",{value:true});const automation_client_1=(cov_q8rxs2pdr.s[12]++,require("@atomist/automation-client"));const DashboardDisplayProgressLog_1=(cov_q8rxs2pdr.s[13]++,require("../../common/log/DashboardDisplayProgressLog"));const EphemeralProgressLog_1=(cov_q8rxs2pdr.s[14]++,require("../../common/log/EphemeralProgressLog"));const firstAvailableProgressLog_1=(cov_q8rxs2pdr.s[15]++,require("../../common/log/firstAvailableProgressLog"));const LoggingProgressLog_1=(cov_q8rxs2pdr.s[16]++,require("../../common/log/LoggingProgressLog"));const WriteToAllProgressLog_1=(cov_q8rxs2pdr.s[17]++,require("../../common/log/WriteToAllProgressLog"));/**
 * Create a progress log that will use Rolar logging service if available,
 * otherwise falling back to logging.
 * @param {string} rolarBaseUrl
 * @param {string} dashboardBaseUrl
 * @return {ProgressLogFactory}
 */function logFactory(rolarBaseUrl,dashboardBaseUrl){cov_q8rxs2pdr.f[6]++;cov_q8rxs2pdr.s[18]++;let persistentLogFactory=(context,sdmGoal,fallback)=>{cov_q8rxs2pdr.f[7]++;cov_q8rxs2pdr.s[19]++;return firstAvailableProgressLog_1.firstAvailableProgressLog(fallback);};cov_q8rxs2pdr.s[20]++;if(rolarBaseUrl){cov_q8rxs2pdr.b[4][0]++;cov_q8rxs2pdr.s[21]++;automation_client_1.logger.info("Logging with Rolar at "+rolarBaseUrl);cov_q8rxs2pdr.s[22]++;persistentLogFactory=(context,sdmGoal,fallback)=>{cov_q8rxs2pdr.f[8]++;cov_q8rxs2pdr.s[23]++;return firstAvailableProgressLog_1.firstAvailableProgressLog(new DashboardDisplayProgressLog_1.DashboardDisplayProgressLog(dashboardBaseUrl,rolarBaseUrl,context,sdmGoal),fallback);};}else{cov_q8rxs2pdr.b[4][1]++;}cov_q8rxs2pdr.s[24]++;return(context,sdmGoal)=>{cov_q8rxs2pdr.f[9]++;cov_q8rxs2pdr.s[25]++;return __awaiter(this,void 0,void 0,function*(){cov_q8rxs2pdr.f[10]++;const name=(cov_q8rxs2pdr.s[26]++,sdmGoal.name);const persistentLog=(cov_q8rxs2pdr.s[27]++,yield persistentLogFactory(context,sdmGoal,new LoggingProgressLog_1.LoggingProgressLog(name,"info")));cov_q8rxs2pdr.s[28]++;return new WriteToAllProgressLog_1.WriteToAllProgressLog(name,(yield EphemeralProgressLog_1.createEphemeralProgressLog(context,sdmGoal)),persistentLog);});};}cov_q8rxs2pdr.s[29]++;exports.logFactory=logFactory;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL3NwaS9sb2cvbG9nRmFjdG9yeS50cyIsInNvdXJjZXMiOlsiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL3NwaS9sb2cvbG9nRmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7O0dBY0c7Ozs7Ozs7Ozs7QUFFSCxrRUFBb0Q7QUFDcEQsOEZBQXlGO0FBQ3pGLGdGQUFtRjtBQUNuRiwwRkFBdUY7QUFDdkYsNEVBQXlFO0FBQ3pFLGtGQUErRTtBQUcvRTs7Ozs7O0dBTUc7QUFDSCxvQkFBMkIsWUFBcUIsRUFBRSxnQkFBeUI7SUFDdkUsSUFBSSxvQkFBb0IsR0FBRyxDQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxxREFBeUIsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUMvRixJQUFJLFlBQVksRUFBRTtRQUNkLDBCQUFNLENBQUMsSUFBSSxDQUFDLHdCQUF3QixHQUFHLFlBQVksQ0FBQyxDQUFDO1FBQ3JELG9CQUFvQixHQUFHLENBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsRUFBRTtZQUNsRCxPQUFPLHFEQUF5QixDQUM1QixJQUFJLHlEQUEyQixDQUFDLGdCQUFnQixFQUFFLFlBQVksRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLEVBQ2pGLFFBQVEsQ0FDWCxDQUFDO1FBQ04sQ0FBQyxDQUFDO0tBQ0w7SUFDRCxPQUFPLENBQU8sT0FBTyxFQUFFLE9BQU8sRUFBRSxFQUFFO1FBQzlCLE1BQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUM7UUFDMUIsTUFBTSxhQUFhLEdBQUcsTUFBTSxvQkFBb0IsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLElBQUksdUNBQWtCLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDekcsT0FBTyxJQUFJLDZDQUFxQixDQUFDLElBQUksRUFBRSxNQUFNLGlEQUEwQixDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsRUFBRSxhQUFhLENBQUMsQ0FBQztJQUM5RyxDQUFDLENBQUEsQ0FBQztBQUNOLENBQUM7QUFoQkQsZ0NBZ0JDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCDCqSAyMDE4IEF0b21pc3QsIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSBcIkBhdG9taXN0L2F1dG9tYXRpb24tY2xpZW50XCI7XG5pbXBvcnQge0Rhc2hib2FyZERpc3BsYXlQcm9ncmVzc0xvZ30gZnJvbSBcIi4uLy4uL2NvbW1vbi9sb2cvRGFzaGJvYXJkRGlzcGxheVByb2dyZXNzTG9nXCI7XG5pbXBvcnQgeyBjcmVhdGVFcGhlbWVyYWxQcm9ncmVzc0xvZyB9IGZyb20gXCIuLi8uLi9jb21tb24vbG9nL0VwaGVtZXJhbFByb2dyZXNzTG9nXCI7XG5pbXBvcnQgeyBmaXJzdEF2YWlsYWJsZVByb2dyZXNzTG9nIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9sb2cvZmlyc3RBdmFpbGFibGVQcm9ncmVzc0xvZ1wiO1xuaW1wb3J0IHsgTG9nZ2luZ1Byb2dyZXNzTG9nIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9sb2cvTG9nZ2luZ1Byb2dyZXNzTG9nXCI7XG5pbXBvcnQgeyBXcml0ZVRvQWxsUHJvZ3Jlc3NMb2cgfSBmcm9tIFwiLi4vLi4vY29tbW9uL2xvZy9Xcml0ZVRvQWxsUHJvZ3Jlc3NMb2dcIjtcbmltcG9ydCB7IFByb2dyZXNzTG9nRmFjdG9yeSB9IGZyb20gXCIuL1Byb2dyZXNzTG9nXCI7XG5cbi8qKlxuICogQ3JlYXRlIGEgcHJvZ3Jlc3MgbG9nIHRoYXQgd2lsbCB1c2UgUm9sYXIgbG9nZ2luZyBzZXJ2aWNlIGlmIGF2YWlsYWJsZSxcbiAqIG90aGVyd2lzZSBmYWxsaW5nIGJhY2sgdG8gbG9nZ2luZy5cbiAqIEBwYXJhbSB7c3RyaW5nfSByb2xhckJhc2VVcmxcbiAqIEBwYXJhbSB7c3RyaW5nfSBkYXNoYm9hcmRCYXNlVXJsXG4gKiBAcmV0dXJuIHtQcm9ncmVzc0xvZ0ZhY3Rvcnl9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBsb2dGYWN0b3J5KHJvbGFyQmFzZVVybD86IHN0cmluZywgZGFzaGJvYXJkQmFzZVVybD86IHN0cmluZyk6IFByb2dyZXNzTG9nRmFjdG9yeSB7XG4gICAgbGV0IHBlcnNpc3RlbnRMb2dGYWN0b3J5ID0gKGNvbnRleHQsIHNkbUdvYWwsIGZhbGxiYWNrKSA9PiBmaXJzdEF2YWlsYWJsZVByb2dyZXNzTG9nKGZhbGxiYWNrKTtcbiAgICBpZiAocm9sYXJCYXNlVXJsKSB7XG4gICAgICAgIGxvZ2dlci5pbmZvKFwiTG9nZ2luZyB3aXRoIFJvbGFyIGF0IFwiICsgcm9sYXJCYXNlVXJsKTtcbiAgICAgICAgcGVyc2lzdGVudExvZ0ZhY3RvcnkgPSAoY29udGV4dCwgc2RtR29hbCwgZmFsbGJhY2spID0+IHtcbiAgICAgICAgICAgIHJldHVybiBmaXJzdEF2YWlsYWJsZVByb2dyZXNzTG9nKFxuICAgICAgICAgICAgICAgIG5ldyBEYXNoYm9hcmREaXNwbGF5UHJvZ3Jlc3NMb2coZGFzaGJvYXJkQmFzZVVybCwgcm9sYXJCYXNlVXJsLCBjb250ZXh0LCBzZG1Hb2FsKSxcbiAgICAgICAgICAgICAgICBmYWxsYmFjayxcbiAgICAgICAgICAgICk7XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBhc3luYyAoY29udGV4dCwgc2RtR29hbCkgPT4ge1xuICAgICAgICBjb25zdCBuYW1lID0gc2RtR29hbC5uYW1lO1xuICAgICAgICBjb25zdCBwZXJzaXN0ZW50TG9nID0gYXdhaXQgcGVyc2lzdGVudExvZ0ZhY3RvcnkoY29udGV4dCwgc2RtR29hbCwgbmV3IExvZ2dpbmdQcm9ncmVzc0xvZyhuYW1lLCBcImluZm9cIikpO1xuICAgICAgICByZXR1cm4gbmV3IFdyaXRlVG9BbGxQcm9ncmVzc0xvZyhuYW1lLCBhd2FpdCBjcmVhdGVFcGhlbWVyYWxQcm9ncmVzc0xvZyhjb250ZXh0LCBzZG1Hb2FsKSwgcGVyc2lzdGVudExvZyk7XG4gICAgfTtcbn1cbiJdfQ==