{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/log/StringCapturingProgressLog.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/log/StringCapturingProgressLog.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAIH;;;GAGG;AACH;IAAA;QAEoB,SAAI,GAAW,4BAA4B,CAAC;QAErD,QAAG,GAAW,EAAE,CAAC;IAsB5B,CAAC;IAnBU,KAAK;QACR,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAEM,KAAK;QACR,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAEM,KAAK,CAAC,IAAY;QACrB,IAAI,IAAI,CAAC,GAAG,EAAE;YACV,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC;SACpB;aAAM;YACH,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;SACnB;IACL,CAAC;IAEM,WAAW;QACd,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;CACJ;AA1BD,gEA0BC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProgressLog } from \"../../spi/log/ProgressLog\";\n\n/**\n * ProgressLog implementation that captures the log into a string and makes it\n * available from the log field\n */\nexport class StringCapturingProgressLog implements ProgressLog {\n\n    public readonly name: string = \"StringCapturingProgressLog\";\n\n    public log: string = \"\";\n    public url: string;\n\n    public close(): Promise<any> {\n        return Promise.resolve();\n    }\n\n    public flush(): Promise<any> {\n        return Promise.resolve();\n    }\n\n    public write(what: string): void {\n        if (this.log) {\n            this.log += what;\n        } else {\n            this.log = what;\n        }\n    }\n\n    public isAvailable(): Promise<boolean> {\n        return Promise.resolve(true);\n    }\n}\n"]}