{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/repo/projectLoaderRepoLoader.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/repo/projectLoaderRepoLoader.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;AAOH;;;;;GAKG;AACH,iCAAwC,EAAiB,EAAE,WAAwC;IAC/F,OAAO,CAAM,EAAE,EAAC,EAAE;QACd,IAAI,OAAO,CAAC;QACZ,MAAM,EAAE,CAAC,aAAa,CAAC,EAAC,EAAE,EAAE,EAAmB,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAC,EAAE,CAAM,CAAC,EAAC,EAAE;YACtF,OAAO,GAAG,CAAC,CAAC;QAChB,CAAC,CAAA,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;IACnB,CAAC,CAAA,CAAC;AACN,CAAC;AARD,0DAQC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProjectOperationCredentials } from \"@atomist/automation-client/operations/common/ProjectOperationCredentials\";\nimport { RemoteRepoRef } from \"@atomist/automation-client/operations/common/RepoId\";\nimport { RepoLoader } from \"@atomist/automation-client/operations/common/repoLoader\";\nimport { ProjectLoader } from \"./ProjectLoader\";\n\n/**\n * Adapter from newer ProjectLoader to older RepoLoader for use in editors\n * @param pl ProjectLoader\n * @param credentials credentials to use to load projects\n * @return {RepoLoader}\n */\nexport function projectLoaderRepoLoader(pl: ProjectLoader, credentials: ProjectOperationCredentials): RepoLoader {\n    return async id => {\n        let project;\n        await pl.doWithProject({id: id as RemoteRepoRef, credentials, readOnly: false}, async p => {\n            project = p;\n        });\n        return project;\n    };\n}\n"]}