"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_kua2qjnr6=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/goals/common/commonGoals.ts",hash="067e8802c00abe8f7c2345d754a2e8464faa4910",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/goals/common/commonGoals.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:25},end:{line:18,column:72}},"2":{start:{line:19,column:15},end:{line:19,column:33}},"3":{start:{line:20,column:16},end:{line:20,column:35}},"4":{start:{line:21,column:24},end:{line:21,column:66}},"5":{start:{line:22,column:0},end:{line:28,column:3}},"6":{start:{line:29,column:0},end:{line:38,column:31}},"7":{start:{line:39,column:0},end:{line:47,column:56}},"8":{start:{line:48,column:0},end:{line:54,column:3}},"9":{start:{line:55,column:0},end:{line:61,column:3}},"10":{start:{line:63,column:0},end:{line:69,column:41}},"11":{start:{line:75,column:0},end:{line:75,column:81}}},fnMap:{},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},f:{},b:{},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_kua2qjnr6.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const wellKnownGoals_1=(cov_kua2qjnr6.s[1]++,require("../../../../blueprint/wellKnownGoals"));const Goal_1=(cov_kua2qjnr6.s[2]++,require("../Goal"));const Goals_1=(cov_kua2qjnr6.s[3]++,require("../Goals"));const gitHubContext_1=(cov_kua2qjnr6.s[4]++,require("../support/github/gitHubContext"));cov_kua2qjnr6.s[5]++;exports.VersionGoal=new Goal_1.Goal({uniqueName:"Version",environment:gitHubContext_1.IndependentOfEnvironment,orderedName:"0.1-version",workingDescription:"Calculating project version...",completedDescription:"Versioned"});cov_kua2qjnr6.s[6]++;exports.DockerBuildGoal=new Goal_1.GoalWithPrecondition({uniqueName:"DockerBuild",environment:gitHubContext_1.IndependentOfEnvironment,orderedName:"3-docker",displayName:"docker build",workingDescription:"Running Docker build...",completedDescription:"Docker build successful",failedDescription:"Failed to build Docker image",isolated:true},wellKnownGoals_1.BuildGoal);cov_kua2qjnr6.s[7]++;exports.TagGoal=new Goal_1.GoalWithPrecondition({uniqueName:"Tag",environment:gitHubContext_1.IndependentOfEnvironment,orderedName:"4-tag",displayName:"tag",workingDescription:"Tagging...",completedDescription:"Tagged",failedDescription:"Failed to create Tag"},exports.DockerBuildGoal,wellKnownGoals_1.BuildGoal);cov_kua2qjnr6.s[8]++;exports.StagingUndeploymentGoal=new Goal_1.Goal({uniqueName:"UndeployFromTest",environment:gitHubContext_1.ProjectDisposalEnvironment,orderedName:"2-staging-undeploy",displayName:"undeploy from test",completedDescription:"not deployed in test"});cov_kua2qjnr6.s[9]++;exports.LocalUndeploymentGoal=new Goal_1.Goal({uniqueName:"UndeployHere",environment:gitHubContext_1.ProjectDisposalEnvironment,orderedName:"1-undeploy-locally",failedDescription:"Failed at local undeploy",completedDescription:"not deployed locally"});// not an enforced precondition, but it's real enough to graph
cov_kua2qjnr6.s[10]++;exports.LocalEndpointGoal=new Goal_1.GoalWithPrecondition({uniqueName:"FindLocalEndpoint",environment:gitHubContext_1.IndependentOfEnvironment,orderedName:"2-endpoint",displayName:"locate local service endpoint",completedDescription:"Here is the local service endpoint"},wellKnownGoals_1.LocalDeploymentGoal);/**
 * Special Goals object to be returned if changes are immaterial.
 * The identity of this object is important.
 * @type {Goals}
 */cov_kua2qjnr6.s[11]++;exports.NoGoals=new Goals_1.Goals("No action needed",wellKnownGoals_1.NoGoal);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2NvbW1vbi9kZWxpdmVyeS9nb2Fscy9jb21tb24vY29tbW9uR29hbHMudHMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9yb2Rqb2huc29uL3Nmb3J6YW5kby1kZXYvaWRlYS1wcm9qZWN0cy9teS1mbG93L3NyYy9jb21tb24vZGVsaXZlcnkvZ29hbHMvY29tbW9uL2NvbW1vbkdvYWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7Ozs7R0FjRzs7QUFFSCx5RUFBOEY7QUFDOUYsa0NBQXFEO0FBQ3JELG9DQUFpQztBQUNqQyxtRUFBdUc7QUFFMUYsUUFBQSxXQUFXLEdBQUcsSUFBSSxXQUFJLENBQUM7SUFDaEMsVUFBVSxFQUFFLFNBQVM7SUFDckIsV0FBVyxFQUFFLHdDQUF3QjtJQUNyQyxXQUFXLEVBQUUsYUFBYTtJQUMxQixrQkFBa0IsRUFBRSxnQ0FBZ0M7SUFDcEQsb0JBQW9CLEVBQUUsV0FBVztDQUNwQyxDQUFDLENBQUM7QUFFVSxRQUFBLGVBQWUsR0FBRyxJQUFJLDJCQUFvQixDQUFDO0lBQ3BELFVBQVUsRUFBRSxhQUFhO0lBQ3pCLFdBQVcsRUFBRSx3Q0FBd0I7SUFDckMsV0FBVyxFQUFFLFVBQVU7SUFDdkIsV0FBVyxFQUFFLGNBQWM7SUFDM0Isa0JBQWtCLEVBQUUseUJBQXlCO0lBQzdDLG9CQUFvQixFQUFFLHlCQUF5QjtJQUMvQyxpQkFBaUIsRUFBRSw4QkFBOEI7SUFDakQsUUFBUSxFQUFFLElBQUk7Q0FDakIsRUFBRSwwQkFBUyxDQUFDLENBQUM7QUFFRCxRQUFBLE9BQU8sR0FBRyxJQUFJLDJCQUFvQixDQUFDO0lBQzVDLFVBQVUsRUFBRSxLQUFLO0lBQ2pCLFdBQVcsRUFBRSx3Q0FBd0I7SUFDckMsV0FBVyxFQUFFLE9BQU87SUFDcEIsV0FBVyxFQUFFLEtBQUs7SUFDbEIsa0JBQWtCLEVBQUUsWUFBWTtJQUNoQyxvQkFBb0IsRUFBRSxRQUFRO0lBQzlCLGlCQUFpQixFQUFFLHNCQUFzQjtDQUM1QyxFQUFFLHVCQUFlLEVBQUUsMEJBQVMsQ0FBQyxDQUFDO0FBRWxCLFFBQUEsdUJBQXVCLEdBQUcsSUFBSSxXQUFJLENBQUM7SUFDNUMsVUFBVSxFQUFFLGtCQUFrQjtJQUM5QixXQUFXLEVBQUUsMENBQTBCO0lBQ3ZDLFdBQVcsRUFBRSxvQkFBb0I7SUFDakMsV0FBVyxFQUFFLG9CQUFvQjtJQUNqQyxvQkFBb0IsRUFBRSxzQkFBc0I7Q0FDL0MsQ0FBQyxDQUFDO0FBRVUsUUFBQSxxQkFBcUIsR0FBRyxJQUFJLFdBQUksQ0FBQztJQUMxQyxVQUFVLEVBQUUsY0FBYztJQUMxQixXQUFXLEVBQUUsMENBQTBCO0lBQ3ZDLFdBQVcsRUFBRSxvQkFBb0I7SUFDakMsaUJBQWlCLEVBQUUsMEJBQTBCO0lBQzdDLG9CQUFvQixFQUFFLHNCQUFzQjtDQUMvQyxDQUFDLENBQUM7QUFFSCw4REFBOEQ7QUFDakQsUUFBQSxpQkFBaUIsR0FBRyxJQUFJLDJCQUFvQixDQUFDO0lBQ3RELFVBQVUsRUFBRSxtQkFBbUI7SUFDL0IsV0FBVyxFQUFFLHdDQUF3QjtJQUNyQyxXQUFXLEVBQUUsWUFBWTtJQUN6QixXQUFXLEVBQUUsK0JBQStCO0lBQzVDLG9CQUFvQixFQUFFLG9DQUFvQztDQUU3RCxFQUFFLG9DQUFtQixDQUFDLENBQUM7QUFFeEI7Ozs7R0FJRztBQUNVLFFBQUEsT0FBTyxHQUFHLElBQUksYUFBSyxDQUM1QixrQkFBa0IsRUFDbEIsdUJBQU0sQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCDCqSAyMDE4IEF0b21pc3QsIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQnVpbGRHb2FsLCBMb2NhbERlcGxveW1lbnRHb2FsLCBOb0dvYWwgfSBmcm9tIFwiLi4vLi4vLi4vLi4vYmx1ZXByaW50L3dlbGxLbm93bkdvYWxzXCI7XG5pbXBvcnQgeyBHb2FsLCBHb2FsV2l0aFByZWNvbmRpdGlvbiB9IGZyb20gXCIuLi9Hb2FsXCI7XG5pbXBvcnQgeyBHb2FscyB9IGZyb20gXCIuLi9Hb2Fsc1wiO1xuaW1wb3J0IHsgSW5kZXBlbmRlbnRPZkVudmlyb25tZW50LCBQcm9qZWN0RGlzcG9zYWxFbnZpcm9ubWVudCB9IGZyb20gXCIuLi9zdXBwb3J0L2dpdGh1Yi9naXRIdWJDb250ZXh0XCI7XG5cbmV4cG9ydCBjb25zdCBWZXJzaW9uR29hbCA9IG5ldyBHb2FsKHtcbiAgICB1bmlxdWVOYW1lOiBcIlZlcnNpb25cIixcbiAgICBlbnZpcm9ubWVudDogSW5kZXBlbmRlbnRPZkVudmlyb25tZW50LFxuICAgIG9yZGVyZWROYW1lOiBcIjAuMS12ZXJzaW9uXCIsXG4gICAgd29ya2luZ0Rlc2NyaXB0aW9uOiBcIkNhbGN1bGF0aW5nIHByb2plY3QgdmVyc2lvbi4uLlwiLFxuICAgIGNvbXBsZXRlZERlc2NyaXB0aW9uOiBcIlZlcnNpb25lZFwiLFxufSk7XG5cbmV4cG9ydCBjb25zdCBEb2NrZXJCdWlsZEdvYWwgPSBuZXcgR29hbFdpdGhQcmVjb25kaXRpb24oe1xuICAgIHVuaXF1ZU5hbWU6IFwiRG9ja2VyQnVpbGRcIixcbiAgICBlbnZpcm9ubWVudDogSW5kZXBlbmRlbnRPZkVudmlyb25tZW50LFxuICAgIG9yZGVyZWROYW1lOiBcIjMtZG9ja2VyXCIsXG4gICAgZGlzcGxheU5hbWU6IFwiZG9ja2VyIGJ1aWxkXCIsXG4gICAgd29ya2luZ0Rlc2NyaXB0aW9uOiBcIlJ1bm5pbmcgRG9ja2VyIGJ1aWxkLi4uXCIsXG4gICAgY29tcGxldGVkRGVzY3JpcHRpb246IFwiRG9ja2VyIGJ1aWxkIHN1Y2Nlc3NmdWxcIixcbiAgICBmYWlsZWREZXNjcmlwdGlvbjogXCJGYWlsZWQgdG8gYnVpbGQgRG9ja2VyIGltYWdlXCIsXG4gICAgaXNvbGF0ZWQ6IHRydWUsXG59LCBCdWlsZEdvYWwpO1xuXG5leHBvcnQgY29uc3QgVGFnR29hbCA9IG5ldyBHb2FsV2l0aFByZWNvbmRpdGlvbih7XG4gICAgdW5pcXVlTmFtZTogXCJUYWdcIixcbiAgICBlbnZpcm9ubWVudDogSW5kZXBlbmRlbnRPZkVudmlyb25tZW50LFxuICAgIG9yZGVyZWROYW1lOiBcIjQtdGFnXCIsXG4gICAgZGlzcGxheU5hbWU6IFwidGFnXCIsXG4gICAgd29ya2luZ0Rlc2NyaXB0aW9uOiBcIlRhZ2dpbmcuLi5cIixcbiAgICBjb21wbGV0ZWREZXNjcmlwdGlvbjogXCJUYWdnZWRcIixcbiAgICBmYWlsZWREZXNjcmlwdGlvbjogXCJGYWlsZWQgdG8gY3JlYXRlIFRhZ1wiLFxufSwgRG9ja2VyQnVpbGRHb2FsLCBCdWlsZEdvYWwpO1xuXG5leHBvcnQgY29uc3QgU3RhZ2luZ1VuZGVwbG95bWVudEdvYWwgPSBuZXcgR29hbCh7XG4gICAgdW5pcXVlTmFtZTogXCJVbmRlcGxveUZyb21UZXN0XCIsXG4gICAgZW52aXJvbm1lbnQ6IFByb2plY3REaXNwb3NhbEVudmlyb25tZW50LFxuICAgIG9yZGVyZWROYW1lOiBcIjItc3RhZ2luZy11bmRlcGxveVwiLFxuICAgIGRpc3BsYXlOYW1lOiBcInVuZGVwbG95IGZyb20gdGVzdFwiLFxuICAgIGNvbXBsZXRlZERlc2NyaXB0aW9uOiBcIm5vdCBkZXBsb3llZCBpbiB0ZXN0XCIsXG59KTtcblxuZXhwb3J0IGNvbnN0IExvY2FsVW5kZXBsb3ltZW50R29hbCA9IG5ldyBHb2FsKHtcbiAgICB1bmlxdWVOYW1lOiBcIlVuZGVwbG95SGVyZVwiLFxuICAgIGVudmlyb25tZW50OiBQcm9qZWN0RGlzcG9zYWxFbnZpcm9ubWVudCxcbiAgICBvcmRlcmVkTmFtZTogXCIxLXVuZGVwbG95LWxvY2FsbHlcIixcbiAgICBmYWlsZWREZXNjcmlwdGlvbjogXCJGYWlsZWQgYXQgbG9jYWwgdW5kZXBsb3lcIixcbiAgICBjb21wbGV0ZWREZXNjcmlwdGlvbjogXCJub3QgZGVwbG95ZWQgbG9jYWxseVwiLFxufSk7XG5cbi8vIG5vdCBhbiBlbmZvcmNlZCBwcmVjb25kaXRpb24sIGJ1dCBpdCdzIHJlYWwgZW5vdWdoIHRvIGdyYXBoXG5leHBvcnQgY29uc3QgTG9jYWxFbmRwb2ludEdvYWwgPSBuZXcgR29hbFdpdGhQcmVjb25kaXRpb24oe1xuICAgIHVuaXF1ZU5hbWU6IFwiRmluZExvY2FsRW5kcG9pbnRcIixcbiAgICBlbnZpcm9ubWVudDogSW5kZXBlbmRlbnRPZkVudmlyb25tZW50LFxuICAgIG9yZGVyZWROYW1lOiBcIjItZW5kcG9pbnRcIixcbiAgICBkaXNwbGF5TmFtZTogXCJsb2NhdGUgbG9jYWwgc2VydmljZSBlbmRwb2ludFwiLFxuICAgIGNvbXBsZXRlZERlc2NyaXB0aW9uOiBcIkhlcmUgaXMgdGhlIGxvY2FsIHNlcnZpY2UgZW5kcG9pbnRcIixcblxufSwgTG9jYWxEZXBsb3ltZW50R29hbCk7XG5cbi8qKlxuICogU3BlY2lhbCBHb2FscyBvYmplY3QgdG8gYmUgcmV0dXJuZWQgaWYgY2hhbmdlcyBhcmUgaW1tYXRlcmlhbC5cbiAqIFRoZSBpZGVudGl0eSBvZiB0aGlzIG9iamVjdCBpcyBpbXBvcnRhbnQuXG4gKiBAdHlwZSB7R29hbHN9XG4gKi9cbmV4cG9ydCBjb25zdCBOb0dvYWxzID0gbmV3IEdvYWxzKFxuICAgIFwiTm8gYWN0aW9uIG5lZWRlZFwiLFxuICAgIE5vR29hbCk7XG4iXX0=