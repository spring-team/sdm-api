"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_nqvoncqba=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/util/git/repoRef.ts",hash="cbe2a6fd43428b4964f598e942bca3c23b716434",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/util/git/repoRef.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:28},end:{line:18,column:65}},"2":{start:{line:19,column:24},end:{line:19,column:93}},"3":{start:{line:20,column:10},end:{line:20,column:27}},"4":{start:{line:21,column:12},end:{line:21,column:28}},"5":{start:{line:22,column:33},end:{line:22,column:87}},"6":{start:{line:24,column:25},end:{line:24,column:60}},"7":{start:{line:25,column:4},end:{line:48,column:5}},"8":{start:{line:28,column:12},end:{line:34,column:15}},"9":{start:{line:36,column:32},end:{line:36,column:58}},"10":{start:{line:37,column:12},end:{line:43,column:15}},"11":{start:{line:45,column:12},end:{line:45,column:65}},"12":{start:{line:47,column:12},end:{line:47,column:87}},"13":{start:{line:50,column:0},end:{line:50,column:42}},"14":{start:{line:52,column:16},end:{line:52,column:34}},"15":{start:{line:53,column:15},end:{line:53,column:116}},"16":{start:{line:54,column:4},end:{line:54,column:30}},"17":{start:{line:57,column:4},end:{line:57,column:14}},"18":{start:{line:59,column:0},end:{line:59,column:60}},"19":{start:{line:61,column:4},end:{line:61,column:45}},"20":{start:{line:63,column:0},end:{line:63,column:48}},"21":{start:{line:65,column:4},end:{line:65,column:54}},"22":{start:{line:67,column:0},end:{line:67,column:52}},"23":{start:{line:69,column:4},end:{line:75,column:7}},"24":{start:{line:77,column:0},end:{line:77,column:46}},"25":{start:{line:79,column:4},end:{line:100,column:5}},"26":{start:{line:82,column:12},end:{line:88,column:15}},"27":{start:{line:90,column:32},end:{line:90,column:44}},"28":{start:{line:91,column:12},end:{line:97,column:15}},"29":{start:{line:99,column:12},end:{line:99,column:96}},"30":{start:{line:102,column:0},end:{line:102,column:48}},"31":{start:{line:111,column:25},end:{line:111,column:65}},"32":{start:{line:112,column:19},end:{line:112,column:53}},"33":{start:{line:113,column:4},end:{line:113,column:91}},"34":{start:{line:114,column:4},end:{line:136,column:5}},"35":{start:{line:119,column:12},end:{line:125,column:15}},"36":{start:{line:127,column:12},end:{line:133,column:15}},"37":{start:{line:135,column:12},end:{line:135,column:105}},"38":{start:{line:138,column:0},end:{line:138,column:42}}},fnMap:{"0":{name:"repoRefFromPush",decl:{start:{line:23,column:9},end:{line:23,column:24}},loc:{start:{line:23,column:31},end:{line:49,column:1}},line:23},"1":{name:"toBitBucketServerRepoRef",decl:{start:{line:51,column:9},end:{line:51,column:33}},loc:{start:{line:51,column:42},end:{line:58,column:1}},line:51},"2":{name:"providerIdFromPush",decl:{start:{line:60,column:9},end:{line:60,column:27}},loc:{start:{line:60,column:34},end:{line:62,column:1}},line:60},"3":{name:"providerIdFromStatus",decl:{start:{line:64,column:9},end:{line:64,column:29}},loc:{start:{line:64,column:38},end:{line:66,column:1}},line:64},"4":{name:"repoRefFromStatus",decl:{start:{line:68,column:9},end:{line:68,column:26}},loc:{start:{line:68,column:35},end:{line:76,column:1}},line:68},"5":{name:"repoRefFromSdmGoal",decl:{start:{line:78,column:9},end:{line:78,column:27}},loc:{start:{line:78,column:47},end:{line:101,column:1}},line:78},"6":{name:"toRemoteRepoRef",decl:{start:{line:110,column:9},end:{line:110,column:24}},loc:{start:{line:110,column:42},end:{line:137,column:1}},line:110}},branchMap:{"0":{loc:{start:{line:25,column:4},end:{line:48,column:5}},type:"switch",locations:[{start:{line:26,column:8},end:{line:26,column:41}},{start:{line:27,column:8},end:{line:34,column:15}},{start:{line:35,column:8},end:{line:43,column:15}},{start:{line:44,column:8},end:{line:45,column:65}},{start:{line:46,column:8},end:{line:47,column:87}}],line:25},"1":{loc:{start:{line:79,column:4},end:{line:100,column:5}},type:"switch",locations:[{start:{line:80,column:8},end:{line:80,column:41}},{start:{line:81,column:8},end:{line:88,column:15}},{start:{line:89,column:8},end:{line:97,column:15}},{start:{line:98,column:8},end:{line:99,column:96}}],line:79},"2":{loc:{start:{line:110,column:31},end:{line:110,column:40}},type:"default-arg",locations:[{start:{line:110,column:38},end:{line:110,column:40}}],line:110},"3":{loc:{start:{line:114,column:4},end:{line:136,column:5}},type:"switch",locations:[{start:{line:115,column:8},end:{line:115,column:23}},{start:{line:116,column:8},end:{line:116,column:18}},{start:{line:117,column:8},end:{line:117,column:41}},{start:{line:118,column:8},end:{line:125,column:15}},{start:{line:126,column:8},end:{line:133,column:15}},{start:{line:134,column:8},end:{line:135,column:105}}],line:114}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0,0,0,0,0],"1":[0,0,0,0],"2":[0],"3":[0,0,0,0,0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_nqvoncqba.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const automation_client_1=(cov_nqvoncqba.s[1]++,require("@atomist/automation-client"));const GitHubRepoRef_1=(cov_nqvoncqba.s[2]++,require("@atomist/automation-client/operations/common/GitHubRepoRef"));const _=(cov_nqvoncqba.s[3]++,require("lodash"));const __1=(cov_nqvoncqba.s[4]++,require("../.."));const BitBucketServerRepoRef_1=(cov_nqvoncqba.s[5]++,require("../../common/command/BitBucketServerRepoRef"));function repoRefFromPush(push){cov_nqvoncqba.f[0]++;const providerType=(cov_nqvoncqba.s[6]++,push.repo.org.provider.providerType);cov_nqvoncqba.s[7]++;switch(providerType){case __1.ProviderType.github_com:cov_nqvoncqba.b[0][0]++;case __1.ProviderType.ghe:cov_nqvoncqba.b[0][1]++;cov_nqvoncqba.s[8]++;return GitHubRepoRef_1.GitHubRepoRef.from({owner:push.repo.owner,repo:push.repo.name,sha:push.after.sha,rawApiBase:push.repo.org.provider.apiUrl,branch:push.branch});case __1.ProviderType.bitbucket:cov_nqvoncqba.b[0][2]++;const providerUrl=(cov_nqvoncqba.s[9]++,push.repo.org.provider.url);cov_nqvoncqba.s[10]++;return toBitBucketServerRepoRef({providerUrl,owner:push.repo.owner,name:push.repo.name,sha:push.after.sha,branch:push.branch});case __1.ProviderType.bitbucket_cloud:cov_nqvoncqba.b[0][3]++;cov_nqvoncqba.s[11]++;throw new Error("BitBucket Cloud not yet supported");default:cov_nqvoncqba.b[0][4]++;cov_nqvoncqba.s[12]++;throw new Error(`Provider ${providerType} not currently supported in SDM`);}}cov_nqvoncqba.s[13]++;exports.repoRefFromPush=repoRefFromPush;function toBitBucketServerRepoRef(params){cov_nqvoncqba.f[1]++;const url=(cov_nqvoncqba.s[14]++,params.providerUrl);const id=(cov_nqvoncqba.s[15]++,new BitBucketServerRepoRef_1.BitBucketServerRepoRef(url,params.owner,params.name,true,params.sha));cov_nqvoncqba.s[16]++;id.branch=params.branch;// id.cloneUrl = (creds: BasicAuthCredentials) =>
//     `http://${encodeURIComponent(creds.username)}:${encodeURIComponent(creds.password)}@${id.remoteBase}${id.pathComponent}.git`;
cov_nqvoncqba.s[17]++;return id;}cov_nqvoncqba.s[18]++;exports.toBitBucketServerRepoRef=toBitBucketServerRepoRef;function providerIdFromPush(push){cov_nqvoncqba.f[2]++;cov_nqvoncqba.s[19]++;return push.repo.org.provider.providerId;}cov_nqvoncqba.s[20]++;exports.providerIdFromPush=providerIdFromPush;function providerIdFromStatus(status){cov_nqvoncqba.f[3]++;cov_nqvoncqba.s[21]++;return status.commit.repo.org.provider.providerId;}cov_nqvoncqba.s[22]++;exports.providerIdFromStatus=providerIdFromStatus;function repoRefFromStatus(status){cov_nqvoncqba.f[4]++;cov_nqvoncqba.s[23]++;return GitHubRepoRef_1.GitHubRepoRef.from({owner:status.commit.repo.owner,repo:status.commit.repo.name,sha:status.commit.sha,rawApiBase:status.commit.repo.org.provider.apiUrl,branch:_.get(status,"commit.pushes[0].branch")});}cov_nqvoncqba.s[24]++;exports.repoRefFromStatus=repoRefFromStatus;function repoRefFromSdmGoal(sdmGoal,provider){cov_nqvoncqba.f[5]++;cov_nqvoncqba.s[25]++;switch(provider.providerType){case __1.ProviderType.github_com:cov_nqvoncqba.b[1][0]++;case __1.ProviderType.ghe:cov_nqvoncqba.b[1][1]++;cov_nqvoncqba.s[26]++;return GitHubRepoRef_1.GitHubRepoRef.from({owner:sdmGoal.repo.owner,repo:sdmGoal.repo.name,sha:sdmGoal.sha,branch:sdmGoal.branch,rawApiBase:provider.apiUrl});case __1.ProviderType.bitbucket:cov_nqvoncqba.b[1][2]++;const providerUrl=(cov_nqvoncqba.s[27]++,provider.url);cov_nqvoncqba.s[28]++;return toBitBucketServerRepoRef({providerUrl,owner:sdmGoal.repo.owner,name:sdmGoal.repo.name,sha:sdmGoal.sha,branch:sdmGoal.branch});default:cov_nqvoncqba.b[1][3]++;cov_nqvoncqba.s[29]++;throw new Error(`Provider ${provider.providerType} not currently supported in SDM`);}}cov_nqvoncqba.s[30]++;exports.repoRefFromSdmGoal=repoRefFromSdmGoal;/**
 * Convert GraphQL return to our remote repo ref, instantiating
 * the correct type based on provider
 * @param {CoreRepoFieldsAndChannels.Fragment} repo
 * @param opts options - sha or branch
 * @return {RemoteRepoRef}
 */function toRemoteRepoRef(repo,opts=(cov_nqvoncqba.b[2][0]++,{})){cov_nqvoncqba.f[6]++;const providerType=(cov_nqvoncqba.s[31]++,_.get(repo,"org.provider.providerType"));const apiUrl=(cov_nqvoncqba.s[32]++,_.get(repo,"org.provider.apiUrl"));cov_nqvoncqba.s[33]++;automation_client_1.logger.info("toRemoteRepoRef with GraphQL-sourced repo: %j",repo);cov_nqvoncqba.s[34]++;switch(providerType){case undefined:cov_nqvoncqba.b[3][0]++;case null:cov_nqvoncqba.b[3][1]++;case __1.ProviderType.github_com:cov_nqvoncqba.b[3][2]++;case __1.ProviderType.ghe:cov_nqvoncqba.b[3][3]++;cov_nqvoncqba.s[35]++;return GitHubRepoRef_1.GitHubRepoRef.from({owner:repo.owner,repo:repo.name,sha:opts.sha,branch:opts.branch,rawApiBase:apiUrl});case __1.ProviderType.bitbucket:cov_nqvoncqba.b[3][4]++;cov_nqvoncqba.s[36]++;return toBitBucketServerRepoRef({owner:repo.owner,name:repo.name,sha:opts.sha,branch:opts.branch,providerUrl:apiUrl});default:cov_nqvoncqba.b[3][5]++;cov_nqvoncqba.s[37]++;throw new Error(`Provider ${repo.org.provider.providerType} not currently supported in SDM`);}}cov_nqvoncqba.s[38]++;exports.toRemoteRepoRef=toRemoteRepoRef;//# sourceMappingURL=data:application/json;charset=utf-8;base64,