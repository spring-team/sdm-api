{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/deploy/pcf/CloudFoundryBlueGreener.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/deploy/pcf/CloudFoundryBlueGreener.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as _ from \"lodash\";\n\nimport {ReadStream} from \"fs\";\nimport {ProgressLog} from \"../../../../spi/log/ProgressLog\";\nimport {CloudFoundryApi} from \"./CloudFoundryApi\";\nimport {ManifestApplication} from \"./CloudFoundryManifest\";\nimport {CloudFoundryPusher} from \"./CloudFoundryPusher\";\nimport {CloudFoundryDeployment} from \"./CloudFoundryTarget\";\n\nexport class BlueGreenNamer {\n    constructor(private readonly currentAppName: string) {\n    }\n\n    public getCurrentAppName() {\n        return `${this.currentAppName}`;\n    }\n\n    public getPreviousAppName() {\n        return `${this.currentAppName}-old`;\n    }\n\n    public getNextAppName() {\n        return `${this.currentAppName}-new`;\n    }\n}\n\nexport class CloudFoundryBlueGreener {\n\n    constructor(private readonly cfApi: CloudFoundryApi,\n                private readonly pusher: CloudFoundryPusher,\n                private readonly namer: BlueGreenNamer,\n                private readonly log: ProgressLog) {\n    }\n\n    public async cleanUpExistingBlueGreenApps() {\n        const spaceGuid = await this.pusher.getSpaceGuid();\n        const previousApp = await this.cfApi.getApp(spaceGuid, this.namer.getPreviousAppName());\n        if (previousApp) {\n            this.log.write(`Removing app ${this.pusher.spaceName}:${this.namer.getPreviousAppName()}.`);\n            await this.cfApi.deleteApp(previousApp.metadata.guid);\n        }\n        const nextApp = await this.cfApi.getApp(spaceGuid, this.namer.getNextAppName());\n        if (nextApp) {\n            await this.cfApi.deleteApp(nextApp.metadata.guid);\n            this.log.write(`Removing app ${this.pusher.spaceName}:${this.namer.getNextAppName()}.`);\n        }\n    }\n\n    public async createNextAppWithRoutes(manifestApp: ManifestApplication,\n                                         packageFile: ReadStream): Promise<CloudFoundryDeployment> {\n        const spaceGuid = await this.pusher.getSpaceGuid();\n        const appProperties = _.assign({}, manifestApp);\n        const currentApp = await this.cfApi.getApp(spaceGuid, this.namer.getCurrentAppName());\n        let currentRoutes = [];\n        if (currentApp) {\n            appProperties.name = this.namer.getNextAppName();\n            currentRoutes = await this.cfApi.getAppRoutes(currentApp.metadata.guid);\n        }\n        if (currentRoutes.length === 0) {\n            appProperties[\"random-route\"] = true;\n        }\n        this.log.write(`Creating app ${this.pusher.spaceName}:${appProperties.name}.`);\n        const deployment = await this.pusher.push(appProperties, packageFile, this.log);\n        if (currentRoutes.length > 0) {\n            this.log.write(`Adding routes to app ${this.pusher.spaceName}:${appProperties.name}.`);\n            const nextApp = await this.cfApi.getApp(spaceGuid, appProperties.name);\n            currentRoutes.forEach(async route => {\n                await this.cfApi.addRouteToApp(spaceGuid, nextApp.metadata.guid, route.entity.host,\n                    route.entity.domain_guid);\n            });\n            const anyRoute = currentRoutes[0];\n            const domain = await this.cfApi.getDomainByGuid(anyRoute.entity.domain_guid);\n            const endpoint = `https://${anyRoute.entity.host}.${domain.entity.name}`;\n            return _.assign({}, deployment, {endpoint});\n        }\n        return deployment;\n    }\n\n    public async retireCurrentApp() {\n        const spaceGuid = await this.pusher.getSpaceGuid();\n        const nextApp = await this.cfApi.getApp(spaceGuid, this.namer.getNextAppName());\n        if (!nextApp) {\n            return;\n        }\n        const currentApp = await this.cfApi.getApp(spaceGuid, this.namer.getCurrentAppName());\n        if (!currentApp) {\n            return;\n        }\n        const currentRoutes = await this.cfApi.getAppRoutes(currentApp.metadata.guid);\n        if (currentRoutes.length > 0) {\n            this.log.write(`Removing routes from app ${this.pusher.spaceName}:${this.namer.getNextAppName()}.`);\n            const domain = this.pusher.defaultDomain;\n            currentRoutes.forEach(async route => {\n                await this.cfApi.removeRouteFromApp(spaceGuid, currentApp.metadata.guid, route.entity.host, domain);\n            });\n        }\n        this.log.write(`Renaming app ${this.pusher.spaceName}:${this.namer.getCurrentAppName()} `\n            + `to ${this.namer.getPreviousAppName()}.`);\n        await this.cfApi.renameApp(currentApp.metadata.guid, this.namer.getPreviousAppName());\n        this.log.write(`Stopping app ${this.pusher.spaceName}:${this.namer.getPreviousAppName()}.`);\n        await this.cfApi.stopApp(currentApp.metadata.guid);\n        this.log.write(`Renaming app ${this.pusher.spaceName}:${this.namer.getNextAppName()} `\n            + `to ${this.namer.getCurrentAppName()}.`);\n        await this.cfApi.renameApp(nextApp.metadata.guid, this.namer.getCurrentAppName());\n        return nextApp;\n    }\n\n}\n"]}