{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/handlers/commands/SelfDescribe.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/handlers/commands/SelfDescribe.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;AAGH,oEAAqF;AAGrF,0EAAuE;AAE1D,QAAA,uBAAuB,GAAG,cAAc,CAAC;AAEtD;;;;GAIG;AACH,6BAAoC,GAA4B;IAC5D,OAAO,GAAG,EAAE,CAAC,8BAAkB,CAC3B,cAAc,CAAC,GAAG,CAAC,EACnB,iCAAe,EACf,+BAAuB,EACvB,mBAAmB,EACnB,cAAc,CAAC,CAAC;AACxB,CAAC;AAPD,kDAOC;AAED,wBAAwB,GAA4B;IAChD,OAAO,CAAM,GAAG,EAAC,EAAE;QACf,MAAM,OAAO,GAAG,6DAA6D,GAAG,CAAC,IAAI,GAAG,CAAC;QACzF,MAAM,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACzC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC;IAChC,CAAC,CAAA,CAAC;AACN,CAAC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HandleCommand } from \"@atomist/automation-client\";\nimport { commandHandlerFrom, OnCommand } from \"@atomist/automation-client/onCommand\";\nimport { Maker } from \"@atomist/automation-client/util/constructionUtils\";\nimport { SoftwareDeliveryMachine } from \"../../blueprint/SoftwareDeliveryMachine\";\nimport { EmptyParameters } from \"../../common/command/EmptyParameters\";\n\nexport const SelfDescribeCommandName = \"SelfDescribe\";\n\n/**\n * Return a command handler that can describe the present software delivery machine\n * @param {SoftwareDeliveryMachine} sdm\n * @return {HandleCommand<EmptyParameters>}\n */\nexport function selfDescribeHandler(sdm: SoftwareDeliveryMachine): Maker<HandleCommand> {\n    return () => commandHandlerFrom(\n        handleDescribe(sdm),\n        EmptyParameters,\n        SelfDescribeCommandName,\n        \"Describe this SDM\",\n        \"describe sdm\");\n}\n\nfunction handleDescribe(sdm: SoftwareDeliveryMachine): OnCommand {\n    return async ctx => {\n        const message = `I am a brilliant SDM, eager to work for you.\\nMy name is _${sdm.name}_`;\n        await ctx.messageClient.respond(message);\n        return { code: 0, message };\n    };\n}\n"]}