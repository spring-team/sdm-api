{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/goals/Goal.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/goals/Goal.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { logger } from \"@atomist/automation-client\";\nimport { RepoRef } from \"@atomist/automation-client/operations/common/RepoId\";\nimport { requiresApproval } from \"../../../handlers/events/delivery/verify/approvalGate\";\nimport { BaseContext, GitHubStatusAndFriends, GitHubStatusContext, GoalEnvironment } from \"./support/github/gitHubContext\";\n\n/**\n * Core data for a goal\n */\nexport interface GoalDefinition {\n\n    /**\n     * Must be unique among goals\n     * Should be camel case\n     */\n    uniqueName: string;\n\n    environment: GoalEnvironment;\n    orderedName: string;\n    displayName?: string;\n    completedDescription?: string;\n    workingDescription?: string;\n    failedDescription?: string;\n    waitingForApprovalDescription?: string;\n\n    // when set to true, this goal will execute in its own container/client\n    isolated?: boolean;\n\n    // when set to true, this goal requires approval before it is marked success\n    approvalRequired?: boolean;\n}\n\nexport type PreconditionsStatus = \"waiting\" | \"success\" | \"failure\";\n\nconst ValidGoalName = /^[a-zA-Z_][a-zA-Z0-9_]*$/;\n\n/**\n * Represents a delivery action, such as Build or Deploy.\n */\nexport class Goal {\n\n    public readonly context: GitHubStatusContext;\n    public readonly name: string;\n    public readonly definition: GoalDefinition;\n    public readonly uniqueCamelCaseName: string;\n\n    get environment() {\n        return this.definition.environment;\n    }\n\n    get successDescription() {\n        return this.definition.completedDescription || (\"Complete: \" + this.name);\n    }\n\n    get inProcessDescription() {\n        return this.definition.workingDescription || (\"Working: \" + this.name);\n    }\n\n    get failureDescription() {\n        return this.definition.failedDescription || (\"Failed: \" + this.name);\n    }\n\n    get requestedDescription() {\n        return \"Planned: \" + this.name;\n    }\n\n    get waitingForApprovalDescription() {\n        return this.definition.waitingForApprovalDescription || (this.successDescription + \"(but needs approval)\");\n    }\n\n    get retryIntent() {\n        return \"trigger \" + this.name;\n    }\n\n    constructor(definition: GoalDefinition) {\n        if (!ValidGoalName.test(definition.uniqueName)) {\n            throw new Error(`${definition.uniqueName} is not a valid goal name: Must be camel case`);\n        }\n        this.definition = definition;\n        this.context = BaseContext + definition.environment + definition.orderedName;\n\n        this.uniqueCamelCaseName = definition.uniqueName;\n\n        const numberAndName = /([0-9\\.]+)-(.*)/;\n        const matchGoal = definition.orderedName.match(numberAndName);\n        if (!matchGoal) {\n            logger.debug(`Ordered name was not '#-name'. Did not find number and name in ${definition.orderedName}`);\n        }\n\n        this.name = definition.displayName || (matchGoal && matchGoal[2]) || definition.orderedName;\n     \n    }\n\n    // TODO decouple from github statuses\n    public async preconditionsStatus(id: RepoRef,\n                                     sub: GitHubStatusAndFriends): Promise<PreconditionsStatus> {\n        return \"success\";\n    }\n}\n\nexport class GoalWithPrecondition extends Goal {\n\n    public readonly dependsOn: Goal[];\n\n    constructor(definition: GoalDefinition, ...dependsOn: Goal[]) {\n        super(definition);\n        this.dependsOn = dependsOn;\n    }\n\n    public async preconditionsStatus(idForLogging: RepoRef,\n                                     sub: GitHubStatusAndFriends): Promise<PreconditionsStatus> {\n        const checks = this.dependsOn.map(pg => checkPreconditionStatus(sub, pg));\n        logger.debug(\"Preconditions: %j\", checks);\n        const errors: string[] = checks.filter(r => r.error !== undefined)\n            .map(r => r.error);\n        const reasonsToWait: string[] = checks.filter(r => r.wait !== undefined).map(r => r.wait);\n\n        errors.forEach(e => logger.debug(\"Could not establish preconditions for \" + this.name + \": \" + e));\n        reasonsToWait.forEach(e => logger.debug(\"Not triggering \" + this.name + \": \" + e));\n        if (errors.length > 0) {\n            logger.info(\"Preconditions failed on goal %s with dependencies '%s' on %j: Errors=[%s]; reasons to wait=[%s]\",\n                this.name, this.dependsOn.map(g => g.name),\n                idForLogging, errors.join(\",\"), reasonsToWait.join(\",\"));\n            return \"failure\";\n        }\n        if (reasonsToWait.length > 0) {\n            logger.debug(\"Preconditions not yet met on goal %s with dependencies '%s' on %j: Errors=[%s]; reasons to wait=[%s]\",\n                this.name, this.dependsOn.map(g => g.name),\n                idForLogging, errors.join(\",\"), reasonsToWait.join(\",\"));\n            return \"waiting\";\n        }\n        return \"success\";\n    }\n}\n\nexport function hasPreconditions(goal: Goal): goal is GoalWithPrecondition {\n    return !!(goal as GoalWithPrecondition).dependsOn;\n}\n\nfunction checkPreconditionStatus(sub: GitHubStatusAndFriends, pg: Goal): { wait?: string, error?: string } {\n    const detectedStatus = sub.siblings.find(gs => gs.context === pg.context);\n    if (!detectedStatus) {\n        return { wait: \"Did not find a status for \" + pg.context };\n    }\n    if (detectedStatus.state === \"pending\") {\n        return { wait: \"Precondition '\" + pg.name + \"' not yet successful\" };\n    }\n    if (detectedStatus.state !== \"success\") {\n        return { error: \"Precondition '\" + pg.name + `' in state [${detectedStatus.state}]` };\n    }\n    if (requiresApproval(detectedStatus)) {\n        return { wait: \"Precondition '\" + pg.name + \"' requires approval\" };\n    }\n    return {};\n}\n\nexport function currentGoalIsStillPending(currentGoal: GitHubStatusContext, status: GitHubStatusAndFriends): boolean {\n    const myStatus = status.siblings.find(s => s.context === currentGoal);\n    if (!myStatus) {\n        logger.debug(\"Status.context is %s but there is nothing with this context\", currentGoal);\n        return false;\n    }\n    if (myStatus.state === \"pending\" && myStatus.description.startsWith(\"Planning\")) {\n        return true;\n    }\n    if (myStatus.state === \"failure\" && myStatus.description.startsWith(\"Skip\")) {\n        return true;\n    }\n    logger.debug(`${currentGoal} is not still planned or skipped, so I'm not running it.\n    State: ${myStatus.state} Description: ${myStatus.description}`);\n    return false;\n}\n"]}