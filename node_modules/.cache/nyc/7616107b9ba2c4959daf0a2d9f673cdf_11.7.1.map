{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/handlers/events/delivery/build/local/npm/npmBuilderTest.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/handlers/events/delivery/build/local/npm/npmBuilderTest.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AAEH;;;;;;;;;;;;;;;;;GAiBG;AAEH;;;;;;;;;;;;;;;;;;;;;EAqBE","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*class TestableNpmBuilder extends SpawnBuilder {\n\n    public runningBuild: LocalBuildInProgress;\n\n    constructor(buildCommand: SpawnCommand, private readonly handleResult: (success: boolean) => any) {\n        super(undefined, async () => new ConsoleProgressLog(), CloningProjectLoader, npmBuilderOptions([Install, buildCommand]));\n    }\n\n    protected async onStarted(runningBuild: LocalBuildInProgress, branch: string): Promise<LocalBuildInProgress> {\n        this.runningBuild = runningBuild;\n        return runningBuild;\n    }\n\n    protected async onExit(token: string, success: boolean, rb: LocalBuildInProgress, atomistTeam: string, branch: string): Promise<any> {\n        this.handleResult(success);\n        return true;\n    }\n}*/\n\n/* describe(\"NpmBuilder\", () => {\n\n    // Not necessary when we're dog fooding...just slows down the test suite\n    it.skip(\"should compile\", async () => {\n        const b = new TestableNpmBuilder(RunCompile,\n            success => assert(success, \"Build should have succeeded\"));\n        await b.initiateBuild({token: process.env.GITHUB_TOKEN},\n            new GitHubRepoRef(\"spring-team\", \"github-sdm\"),\n            async () => true,  {branch: \"master\"}, new ConsoleProgressLog(), {} as HandlerContext);\n    }); // .timeout(300000);\n\n    // This is slow and unnecessary, as dog fooding usage tests this\n    it.skip(\"should test\", async () => {\n        const b = new TestableNpmBuilder(NpmRunBuild,\n            success => assert(success, \"Build should have succeeded\"));\n        await b.initiateBuild({token: process.env.GITHUB_TOKEN},\n            new GitHubRepoRef(\"spring-team\", \"github-sdm\"),\n            async () => true, {branch: \"master\"}, new ConsoleProgressLog(), {} as HandlerContext);\n    }); // .timeout(300000);\n\n});\n*/\n"]}