{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/util/fingerprint/elementRequestTest.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/util/fingerprint/elementRequestTest.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,4FAAyF;AACzF,iFAA4E;AAE5E,uCAAuC;AAEvC,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAE5B,EAAE,CAAC,qBAAqB,EAAE,GAAG,EAAE;QAE3B,EAAE,CAAC,iBAAiB,EAAE,GAAS,EAAE;YAC7B,MAAM,CAAC,GAAG,iCAAe,CAAC,EAAE,CAAC;gBACzB,IAAI,EAAE,WAAW;gBACjB,OAAO,EACH,+DAA+D;aACtE,CAAC,CAAC;YACH,MAAM,SAAS,GAAG,MAAM,6BAAY,CAAC,CAAC,CAAC,CAAC;YACxC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YAC5C,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,EACnC,oCAAoC,CAAC,CAAC;YAC1C,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAC1B,WAAW,CAAC,CAAC;QACrB,CAAC,CAAA,CAAC,CAAC;QAEH,EAAE,CAAC,0BAA0B,EAAE,GAAS,EAAE;YACtC,MAAM,CAAC,GAAG,iCAAe,CAAC,EAAE,CAAC;gBACzB,IAAI,EAAE,WAAW;gBACjB,OAAO,EACH,mFAAmF;aAC1F,CAAC,CAAC;YACH,MAAM,SAAS,GAAG,MAAM,6BAAY,CAAC,CAAC,EAAE;gBACpC,iBAAiB,EAAE,OAAO;aAC7B,CAAC,CAAC;YACH,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YAC5C,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,EACnC,oCAAoC,CAAC,CAAC;YAC1C,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAC1B,WAAW,CAAC,CAAC;YACjB,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC,CAAA,CAAC,CAAC;IAEP,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC","sourcesContent":["import { InMemoryProject } from \"@atomist/automation-client/project/mem/InMemoryProject\";\nimport { findElements } from \"../../../src/util/fingerprint/elementRequest\";\n\nimport * as assert from \"power-assert\";\n\ndescribe(\"elementRequest\", () => {\n\n    it(\"supports JavaScript\", () => {\n\n        it(\"finds functions\", async () => {\n            const p = InMemoryProject.of({\n                path: \"script.js\",\n                content:\n                    \"function it(a, b) { // get rid of this \\nreturn \\n 'frogs'; }\",\n            });\n            const functions = await findElements(p);\n            assert.equal(functions.length, 1);\n            assert.equal(functions[0].identifier, \"it\");\n            assert.equal(functions[0].canonicalBody,\n                \"function it(a, b){return 'frogs';}\");\n            assert.equal(functions[0].path,\n                \"script.js\");\n        });\n\n        it(\"finds matching functions\", async () => {\n            const p = InMemoryProject.of({\n                path: \"script.js\",\n                content:\n                    \"function it(a, b) { // get rid of this \\nreturn \\n 'frogs'; } function notIt() {}\",\n            });\n            const functions = await findElements(p, {\n                identifierPattern: /^i.*$/,\n            });\n            assert.equal(functions.length, 1);\n            assert.equal(functions[0].identifier, \"it\");\n            assert.equal(functions[0].canonicalBody,\n                \"function it(a, b){return 'frogs';}\");\n            assert.equal(functions[0].path,\n                \"script.js\");\n            assert(!!functions[0].sha);\n        });\n\n    });\n\n});\n"]}