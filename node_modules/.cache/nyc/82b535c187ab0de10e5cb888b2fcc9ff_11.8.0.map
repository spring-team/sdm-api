{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/code/review/checkstyle/checkStyleReportToReview.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/code/review/checkstyle/checkStyleReportToReview.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH,kEAAoD;AAMpD,4BAA4B;AAM5B,kCAAyC,MAAe,EACf,EAAoB,EACpB,OAAe;IACpD,OAAO;QACH,MAAM;QACN,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;KACnE,CAAC;AACN,CAAC;AAPD,4DAOC;AAED,sBAAsB,IAAgB,EAAE,OAAe;IACnD,gFAAgF;IAChF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;IAC3E,0BAAM,CAAC,KAAK,CAAC,4DAA4D,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;IACrG,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACzB,QAAQ,EAAE,YAAY;QACtB,QAAQ,EAAE,CAAC,CAAC,QAAQ;QACpB,MAAM,EAAE,CAAC,CAAC,OAAO;QACjB,cAAc,EAAE;YACZ,IAAI;YACJ,SAAS,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,EAAE,CAAC,CAAC;SACb;KACJ,CAAC,CAAC,CAAC;AACR,CAAC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { logger } from \"@atomist/automation-client\";\nimport { RepoRef } from \"@atomist/automation-client/operations/common/RepoId\";\nimport {\n    ProjectReview,\n    ReviewComment,\n} from \"@atomist/automation-client/operations/review/ReviewResult\";\nimport * as _ from \"lodash\";\nimport {\n    CheckstyleReport,\n    FileReport,\n} from \"./CheckstyleReport\";\n\nexport function checkstyleReportToReview(repoId: RepoRef,\n                                         cr: CheckstyleReport,\n                                         baseDir: string): ProjectReview {\n    return {\n        repoId,\n        comments: _.flatten(cr.files.map(f => fileComments(f, baseDir))),\n    };\n}\n\nfunction fileComments(file: FileReport, baseDir: string): ReviewComment[] {\n    // This is a bit complex but necessary as we can get some content before baseDir\n    const path = file.name.substr(file.name.indexOf(baseDir) + baseDir.length);\n    logger.debug(\"Processing file comments for [%s], baseDir=[%s], path=[%s]\", file.name, baseDir, path);\n    return file.errors.map(e => ({\n        category: \"checkstyle\",\n        severity: e.severity,\n        detail: e.message,\n        sourceLocation: {\n            path,\n            lineFrom1: e.line > 0 ? e.line : 0,\n            offset: -1,\n        },\n    }));\n}\n"]}