{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/util/github/ghub.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/util/github/ghub.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { logger } from \"@atomist/automation-client\";\nimport { GitHubRepoRef, isGitHubRepoRef } from \"@atomist/automation-client/operations/common/GitHubRepoRef\";\nimport { ProjectOperationCredentials } from \"@atomist/automation-client/operations/common/ProjectOperationCredentials\";\nimport { RemoteRepoRef } from \"@atomist/automation-client/operations/common/RepoId\";\nimport { Issue } from \"@atomist/automation-client/util/gitHub\";\nimport { doWithRetry } from \"@atomist/automation-client/util/retry\";\nimport axios, { AxiosPromise, AxiosRequestConfig } from \"axios\";\nimport { toToken } from \"../credentials/toToken\";\n\nexport type State = \"error\" | \"failure\" | \"pending\" | \"success\";\n\n/**\n * GitHub status\n */\nexport interface Status {\n    state: State;\n    target_url?: string;\n    description?: string;\n    context?: string;\n}\n\n/**\n * Create a GitHub status\n * @param {string | ProjectOperationCredentials} creds\n * @param {GitHubRepoRef} rr\n * @param {Status} inputStatus\n * @return {AxiosPromise}\n */\nexport function createStatus(creds: string | ProjectOperationCredentials, rr: GitHubRepoRef, inputStatus: Status): AxiosPromise {\n    const config = authHeaders(toToken(creds));\n    const saferStatus = ensureValidUrl(inputStatus);\n    const url = `${rr.apiBase}/repos/${rr.owner}/${rr.repo}/statuses/${rr.sha}`;\n    logger.info(\"Updating github status: %s to %j\", url, saferStatus);\n    return doWithRetry(() =>\n        axios.post(url, saferStatus, config).catch(err =>\n            Promise.reject(new Error(`Error hitting ${url} to set status ${JSON.stringify(saferStatus)}: ${err.message}`)),\n        ), `Updating github status: ${url} to ${JSON.stringify(saferStatus)}`, {});\n}\n\n/*\n * If you send a targetUrl that doesn't work, GitHub will not accept the status.\n * Commonly on findArtifact, we get a Docker image name instead, and people really want\n * to put that in the URL but it doesn't work.\n *\n * This limitation exists only because we are using GitHub Statuses for Goals right now,\n * and when we move to a custom event it won't be the same problem. So it makes sense\n * to encode the limitation here.\n *\n * Yes the description is going to be ugly. Deal with it.\n */\nfunction ensureValidUrl(inputStatus: Status): Status {\n\n    if (!inputStatus.target_url) {\n        return inputStatus;\n    }\n    if (inputStatus.target_url.startsWith(\"http\")) {\n        return inputStatus;\n    }\n    logger.warn(\"Illegal to send a non-url in target_url, so I'm appending it to the description\");\n    return {\n        target_url: undefined,\n        description: inputStatus.description + \" at \" + inputStatus.target_url,\n        state: inputStatus.state,\n        context: inputStatus.context,\n    };\n}\n\nexport interface Tag {\n    tag: string;\n    message: string;\n\n    /** Commit sha */\n    object: string;\n    type: string;\n    tagger: {\n        name: string;\n        email: string;\n        date: string;\n    };\n}\n\nexport function createTag(creds: string | ProjectOperationCredentials, rr: GitHubRepoRef, tag: Tag): AxiosPromise {\n    const config = authHeaders(toToken(creds));\n    const url = `${rr.apiBase}/repos/${rr.owner}/${rr.repo}/git/tags`;\n    logger.info(\"Updating github tag: %s to %j\", url, tag);\n    return doWithRetry(() => axios.post(url, tag, config)\n        .catch(err =>\n            Promise.reject(new Error(`Error hitting ${url} to set tag ${JSON.stringify(tag)}: ${err.message}`)),\n        ), `Updating github tag: ${url} to ${JSON.stringify(tag)}`, {});\n}\n\nexport function createTagReference(creds: string | ProjectOperationCredentials, rr: GitHubRepoRef, tag: Tag): AxiosPromise {\n    const config = authHeaders(toToken(creds));\n    const url = `${rr.apiBase}/repos/${rr.owner}/${rr.repo}/git/refs`;\n    logger.info(\"Creating github reference: %s to %j\", url, tag);\n    return doWithRetry(() => axios.post(url, {ref: `refs/tags/${tag.tag}`, sha: tag.object}, config)\n        .catch(err =>\n            Promise.reject(new Error(`Error hitting ${url} to set tag ${JSON.stringify(tag)}: ${err.message}`)),\n        ), `Updating github tag: ${url} to ${JSON.stringify(tag)}`, {});\n}\n\nexport function deleteRepository(creds: string | ProjectOperationCredentials, rr: GitHubRepoRef): AxiosPromise {\n    const config = authHeaders(toToken(creds));\n    const url = `${rr.apiBase}/repos/${rr.owner}/${rr.repo}`;\n    logger.info(\"Deleting repository: %s\", url);\n    return axios.delete(url, config)\n        .catch(err => {\n                logger.error(err.message);\n                logger.error(err.response.body);\n                return Promise.reject(new Error(`Error hitting ${url} to delete repo`));\n            },\n        );\n}\n\nexport interface Release {\n    tag_name: string;\n    target_commitish?: string;\n    name?: string;\n    body?: string;\n    draft?: boolean;\n    prerelease?: boolean;\n}\n\nexport function createRelease(creds: string | ProjectOperationCredentials, rr: GitHubRepoRef, release: Release): AxiosPromise {\n    const config = authHeaders(toToken(creds));\n    const url = `${rr.apiBase}/repos/${rr.owner}/${rr.repo}/releases`;\n    logger.info(\"Updating github release: %s to %j\", url, release);\n    return doWithRetry(() => axios.post(url, release, config)\n        .catch(err =>\n            Promise.reject(new Error(`Error hitting ${url} to set release ${JSON.stringify(release)}: ${err.message}`)),\n        ), `Updating github release: ${url} to ${JSON.stringify(release)}`, {});\n}\n\nexport interface GitHubCommitsBetween {\n    commits: Array<{\n        sha: string;\n        author: { login: string };\n        commit: { message: string };\n    }>;\n}\n\n/**\n * List commits between these shas\n * @param {string | ProjectOperationCredentials} creds\n * @param {GitHubRepoRef} rr\n * @param {string} startSha\n * @param {string} endSha\n * @return {Promise<GitHubCommitsBetween>}\n */\nexport function listCommitsBetween(creds: string | ProjectOperationCredentials,\n                                   rr: GitHubRepoRef,\n                                   startSha: string,\n                                   endSha: string): Promise<GitHubCommitsBetween> {\n    const config = authHeaders(toToken(creds));\n    const url = `${rr.apiBase}/repos/${rr.owner}/${rr.repo}/compare/${startSha}...${endSha}`;\n    return axios.get(url, config)\n        .then(ap => ap.data);\n}\n\nexport function authHeaders(token: string): AxiosRequestConfig {\n    return token ? {\n            headers: {\n                Authorization: `token ${token}`,\n            },\n        }\n        : {};\n}\n\nexport function tipOfDefaultBranch(creds: string | ProjectOperationCredentials, rr: GitHubRepoRef): Promise<string> {\n    // TODO: use real default branch\n    const config = authHeaders(toToken(creds));\n    const url = `${rr.apiBase}/repos/${rr.owner}/${rr.repo}/branches/master`;\n    return axios.get(url, config)\n        .then(ap => ap.data.commit.sha);\n}\n\nexport function isPublicRepo(creds: string | ProjectOperationCredentials, rr: GitHubRepoRef): Promise<boolean> {\n    const config = authHeaders(toToken(creds));\n    const url = `${rr.apiBase}/repos/${rr.owner}/${rr.repo}`;\n    return axios.get(url, config)\n        .then(ap => {\n            const privateness = ap.data.private;\n            logger.info(`Retrieved ${url}. Private is '${privateness}'`);\n            return !privateness;\n        })\n        .catch(ap => {\n            logger.warn(`Could not access ${url} to determine repo visibility: ${ap.response.status}`);\n            return false;\n        });\n}\n\n// TODO move to client\nexport function updateIssue(creds: string | ProjectOperationCredentials,\n                            rr: RemoteRepoRef,\n                            issueNumber: number,\n                            issue: Issue): AxiosPromise {\n    const grr = isGitHubRepoRef(rr) ? rr : new GitHubRepoRef(rr.owner, rr.repo, rr.sha);\n    const url = `${grr.apiBase}/repos/${grr.owner}/${grr.repo}/issues/${issueNumber}`;\n    logger.debug(`Request to '${url}' to update issue`);\n    return axios.patch(url, issue, authHeaders(toToken(creds)));\n}\n\nexport async function listTopics(creds: string | ProjectOperationCredentials, rr: RemoteRepoRef): Promise<string[]> {\n    const headers = {\n        headers: {\n            ...authHeaders(toToken(creds)).headers,\n            Accept: \"application/vnd.github.mercy-preview+json\",\n        },\n    };\n    const grr = isGitHubRepoRef(rr) ? rr : new GitHubRepoRef(rr.owner, rr.repo, rr.sha);\n    const url = `${grr.apiBase}/repos/${grr.owner}/${grr.repo}/topics`;\n    const topics = await axios.get(url, headers);\n    return topics.data.names;\n}\n"]}