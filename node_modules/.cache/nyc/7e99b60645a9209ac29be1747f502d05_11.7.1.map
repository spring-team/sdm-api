{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/deploy/pcf/CloudFoundryPusher.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/deploy/pcf/CloudFoundryPusher.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as _ from \"lodash\";\n\nimport {ReadStream} from \"fs\";\nimport randomWord = require(\"random-word\");\nimport {ProgressLog} from \"../../../../spi/log/ProgressLog\";\nimport {CloudFoundryApi} from \"./CloudFoundryApi\";\nimport {ManifestApplication} from \"./CloudFoundryManifest\";\nimport {CloudFoundryDeployment} from \"./CloudFoundryTarget\";\n\nexport interface ServicesModifications {\n    servicesToAdd: any[];\n    servicesToRemove: any[];\n}\n\n/**\n * Uses the Cloud Foundry API to (mostly) reimplement their CLI push.\n * It supports using the manifest, but not all attributes.\n * It currently attaches a default route rather than the routes specified in the manifest.\n * This is separate from the deployer so that the API could easily be mocked for testing.\n */\nexport class CloudFoundryPusher {\n\n    private spaceGuid: string;\n\n    constructor(private readonly api: CloudFoundryApi,\n                public readonly spaceName: string,\n                public readonly defaultDomain: string = \"cfapps.io\") {\n\n    }\n\n    public async getSpaceGuid(): Promise<string> {\n        if (!this.spaceGuid) {\n            const space = await this.api.getSpaceByName(this.spaceName);\n            this.spaceGuid = space.metadata.guid;\n        }\n        return this.spaceGuid;\n    }\n\n    public async push(manifestApp: ManifestApplication,\n                      packageFile: ReadStream,\n                      log: ProgressLog): Promise<CloudFoundryDeployment> {\n        const spaceGuid = await this.getSpaceGuid();\n        const existingApp = await this.api.getApp(spaceGuid, manifestApp.name);\n        const app = existingApp ? existingApp : await this.api.createApp(spaceGuid, manifestApp);\n        const appGuid = app.metadata.guid;\n        const appNameForLog = `${this.spaceName}:${manifestApp.name}`;\n        log.write(`Uploading package for ${appNameForLog}...`);\n        // tslint:disable-next-line:no-floating-promises\n        log.flush();\n        const packageUploadResult = await this.api.uploadPackage(appGuid, packageFile);\n        log.write(`Building package for ${appNameForLog}...`);\n        // tslint:disable-next-line:no-floating-promises\n        log.flush();\n        const buildResult = await this.api.buildDroplet(packageUploadResult.data.guid);\n        const serviceNames = !manifestApp.services ? [] : manifestApp.services;\n        const serviceModifications = await this.appServiceModifications(appGuid, serviceNames);\n        await this.api.stopApp(appGuid);\n        log.write(`Stopped app for updates to ${appNameForLog}.`);\n        await this.api.setCurrentDropletForApp(appGuid, buildResult.data.droplet.guid);\n        if (serviceModifications.servicesToAdd.length > 0) {\n            const addServiceNames = serviceModifications.servicesToAdd.map(s => s.entity.name);\n            log.write(`Adding services ${addServiceNames} to ${appNameForLog}.`);\n            await this.api.addServices(appGuid, serviceModifications.servicesToAdd);\n        }\n        if (serviceModifications.servicesToRemove.length > 0) {\n            const removeServiceNames = serviceModifications.servicesToRemove.map(s => s.entity.name);\n            log.write(`Removing services ${removeServiceNames} from ${appNameForLog}.`);\n            await this.api.removeServices(appGuid, serviceModifications.servicesToRemove);\n        }\n\n        let hostName;\n        if (manifestApp[\"random-route\"]) {\n            const appRoutes = await this.api.getAppRoutes(appGuid);\n            if (appRoutes.length === 0) {\n                hostName = `${manifestApp.name}-${randomWord()}-${randomWord()}`;\n                log.write(`Adding random route to ${appNameForLog}.`);\n                const domain = await this.api.getDomain(this.defaultDomain);\n                const domainGuid = domain.metadata.guid;\n                await this.api.addRouteToApp(spaceGuid, appGuid, hostName, domainGuid);\n            } else {\n                hostName = appRoutes[0].entity.host;\n            }\n        }\n\n        log.write(`Updating app with manifest ${appNameForLog}.`);\n        await this.api.updateAppWithManifest(appGuid, manifestApp);\n        log.write(`Starting ${appNameForLog}...`);\n        // tslint:disable-next-line:no-floating-promises\n        log.flush();\n        await this.api.startApp(appGuid);\n        log.write(`Push complete for ${appNameForLog}.`);\n        // tslint:disable-next-line:no-floating-promises\n        log.flush();\n        return {\n            endpoint: !!hostName ? this.constructEndpoint(hostName) : undefined,\n            appName: manifestApp.name,\n        };\n    }\n\n    public constructEndpoint(hostName: string): string {\n        return `https://${hostName}.${this.defaultDomain}`;\n    }\n\n    public async appServiceModifications(appGuid: string, serviceNames: string[]): Promise<ServicesModifications> {\n        const services = await this.api.getUserServices();\n        const specifiedServices: any[] = serviceNames.map(serviceName => {\n            return services.find(s => s.entity.name === serviceName);\n        });\n        const existingServiceBindings = await this.api.getAppServiceBindings(appGuid);\n        const existingServiceBindingGuids = existingServiceBindings\n            .map(esb => esb.entity.service_instance_guid);\n        const servicesToAdd = _.filter(specifiedServices, service => {\n            return !_.includes(existingServiceBindingGuids, service.metadata.guid);\n        });\n        const specifiedServiceGuids = specifiedServices.map(s => s.metadata.guid);\n        const servicesToRemove = _.filter(existingServiceBindings, (service: any) => {\n            return !_.includes(specifiedServiceGuids, service.entity.service_instance_guid);\n        });\n        return {\n            servicesToAdd,\n            servicesToRemove,\n        };\n    }\n}\n"]}