{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/typings/types.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/typings/types.ts"],"names":[],"mappings":";AAAA,oBAAoB;;AAIpB,yBAAyB;AACzB,IAAY,UAGX;AAHD,WAAY,UAAU;IACpB,2BAAa,CAAA;IACb,+BAAiB,CAAA;AACnB,CAAC,EAHW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAGrB;AAED,6BAA6B;AAC7B,IAAY,cAyBX;AAzBD,WAAY,cAAc;IACxB,iDAA+B,CAAA;IAC/B,mDAAiC,CAAA;IACjC,mCAAiB,CAAA;IACjB,qCAAmB,CAAA;IACnB,2CAAyB,CAAA;IACzB,6CAA2B,CAAA;IAC3B,uCAAqB,CAAA;IACrB,yCAAuB,CAAA;IACvB,yCAAuB,CAAA;IACvB,2CAAyB,CAAA;IACzB,uCAAqB,CAAA;IACrB,yCAAuB,CAAA;IACvB,yCAAuB,CAAA;IACvB,2CAAyB,CAAA;IACzB,iDAA+B,CAAA;IAC/B,mDAAiC,CAAA;IACjC,2CAAyB,CAAA;IACzB,6CAA2B,CAAA;IAC3B,iDAA+B,CAAA;IAC/B,mDAAiC,CAAA;IACjC,iDAA+B,CAAA;IAC/B,mDAAiC,CAAA;IACjC,+CAA6B,CAAA;IAC7B,iDAA+B,CAAA;AACjC,CAAC,EAzBW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAyBzB;AAED,4BAA4B;AAC5B,IAAY,aAmBX;AAnBD,WAAY,aAAa;IACvB,gDAA+B,CAAA;IAC/B,kDAAiC,CAAA;IACjC,kCAAiB,CAAA;IACjB,oCAAmB,CAAA;IACnB,wCAAuB,CAAA;IACvB,0CAAyB,CAAA;IACzB,sCAAqB,CAAA;IACrB,wCAAuB,CAAA;IACvB,8DAA6C,CAAA;IAC7C,gEAA+C,CAAA;IAC/C,8DAA6C,CAAA;IAC7C,gEAA+C,CAAA;IAC/C,8DAA6C,CAAA;IAC7C,gEAA+C,CAAA;IAC/C,8CAA6B,CAAA;IAC7B,gDAA+B,CAAA;IAC/B,wDAAuC,CAAA;IACvC,0DAAyC,CAAA;AAC3C,CAAC,EAnBW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAmBxB;AAED,6BAA6B;AAC7B,IAAY,cAWX;AAXD,WAAY,cAAc;IACxB,iDAA+B,CAAA;IAC/B,mDAAiC,CAAA;IACjC,mCAAiB,CAAA;IACjB,qCAAmB,CAAA;IACnB,uCAAqB,CAAA;IACrB,yCAAuB,CAAA;IACvB,6CAA2B,CAAA;IAC3B,+CAA6B,CAAA;IAC7B,yCAAuB,CAAA;IACvB,2CAAyB,CAAA;AAC3B,CAAC,EAXW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAWzB;AAED,mCAAmC;AACnC,IAAY,oBAiBX;AAjBD,WAAY,oBAAoB;IAC9B,uDAA+B,CAAA;IAC/B,yDAAiC,CAAA;IACjC,yCAAiB,CAAA;IACjB,2CAAmB,CAAA;IACnB,6CAAqB,CAAA;IACrB,+CAAuB,CAAA;IACvB,qDAA6B,CAAA;IAC7B,uDAA+B,CAAA;IAC/B,iEAAyC,CAAA;IACzC,mEAA2C,CAAA;IAC3C,uDAA+B,CAAA;IAC/B,yDAAiC,CAAA;IACjC,uDAA+B,CAAA;IAC/B,yDAAiC,CAAA;IACjC,iEAAyC,CAAA;IACzC,mEAA2C,CAAA;AAC7C,CAAC,EAjBW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAiB/B;AAED,8BAA8B;AAC9B,IAAY,eAuBX;AAvBD,WAAY,eAAe;IACzB,kDAA+B,CAAA;IAC/B,oDAAiC,CAAA;IACjC,oCAAiB,CAAA;IACjB,sCAAmB,CAAA;IACnB,oDAAiC,CAAA;IACjC,sDAAmC,CAAA;IACnC,4CAAyB,CAAA;IACzB,8CAA2B,CAAA;IAC3B,gDAA6B,CAAA;IAC7B,kDAA+B,CAAA;IAC/B,wDAAqC,CAAA;IACrC,0DAAuC,CAAA;IACvC,8CAA2B,CAAA;IAC3B,gDAA6B,CAAA;IAC7B,4DAAyC,CAAA;IACzC,8DAA2C,CAAA;IAC3C,8CAA2B,CAAA;IAC3B,gDAA6B,CAAA;IAC7B,0CAAuB,CAAA;IACvB,4CAAyB,CAAA;IACzB,0DAAuC,CAAA;IACvC,4DAAyC,CAAA;AAC3C,CAAC,EAvBW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAuB1B;AAED,6BAA6B;AAC7B,IAAY,cAKX;AALD,WAAY,cAAc;IACxB,iDAA+B,CAAA;IAC/B,mDAAiC,CAAA;IACjC,6CAA2B,CAAA;IAC3B,+CAA6B,CAAA;AAC/B,CAAC,EALW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAKzB;AAED,gCAAgC;AAChC,IAAY,iBAOX;AAPD,WAAY,iBAAiB;IAC3B,oDAA+B,CAAA;IAC/B,sDAAiC,CAAA;IACjC,4CAAuB,CAAA;IACvB,8CAAyB,CAAA;IACzB,0CAAqB,CAAA;IACrB,4CAAuB,CAAA;AACzB,CAAC,EAPW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAO5B;AAED,2BAA2B;AAC3B,IAAY,YAKX;AALD,WAAY,YAAY;IACtB,mDAAmC,CAAA;IACnC,yCAAyB,CAAA;IACzB,2BAAW,CAAA;IACX,uCAAuB,CAAA;AACzB,CAAC,EALW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAKvB;AAED,sCAAsC;AACtC,IAAY,uBAeX;AAfD,WAAY,uBAAuB;IACjC,0DAA+B,CAAA;IAC/B,4DAAiC,CAAA;IACjC,4CAAiB,CAAA;IACjB,8CAAmB,CAAA;IACnB,8CAAmB,CAAA;IACnB,gDAAqB,CAAA;IACrB,4DAAiC,CAAA;IACjC,8DAAmC,CAAA;IACnC,oDAAyB,CAAA;IACzB,sDAA2B,CAAA;IAC3B,oDAAyB,CAAA;IACzB,sDAA2B,CAAA;IAC3B,gEAAqC,CAAA;IACrC,kEAAuC,CAAA;AACzC,CAAC,EAfW,uBAAuB,GAAvB,+BAAuB,KAAvB,+BAAuB,QAelC;AAED,4BAA4B;AAC5B,IAAY,aAWX;AAXD,WAAY,aAAa;IACvB,gDAA+B,CAAA;IAC/B,kDAAiC,CAAA;IACjC,kCAAiB,CAAA;IACjB,oCAAmB,CAAA;IACnB,sCAAqB,CAAA;IACrB,wCAAuB,CAAA;IACvB,oDAAmC,CAAA;IACnC,sDAAqC,CAAA;IACrC,4CAA2B,CAAA;IAC3B,8CAA6B,CAAA;AAC/B,CAAC,EAXW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAWxB;AAED,8BAA8B;AAC9B,IAAY,eAWX;AAXD,WAAY,eAAe;IACzB,kDAA+B,CAAA;IAC/B,oDAAiC,CAAA;IACjC,oCAAiB,CAAA;IACjB,sCAAmB,CAAA;IACnB,gDAA6B,CAAA;IAC7B,kDAA+B,CAAA;IAC/B,8CAA2B,CAAA;IAC3B,gDAA6B,CAAA;IAC7B,wCAAqB,CAAA;IACrB,0CAAuB,CAAA;AACzB,CAAC,EAXW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAW1B;AAED,wBAAwB;AACxB,IAAY,SAGX;AAHD,WAAY,SAAS;IACnB,0BAAa,CAAA;IACb,0CAA6B,CAAA;AAC/B,CAAC,EAHW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAGpB;AAED,2BAA2B;AAC3B,IAAY,YASX;AATD,WAAY,YAAY;IACtB,+CAA+B,CAAA;IAC/B,iDAAiC,CAAA;IACjC,iCAAiB,CAAA;IACjB,mCAAmB,CAAA;IACnB,uCAAuB,CAAA;IACvB,yCAAyB,CAAA;IACzB,+CAA+B,CAAA;IAC/B,iDAAiC,CAAA;AACnC,CAAC,EATW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QASvB;AAED,mCAAmC;AACnC,IAAY,oBAeX;AAfD,WAAY,oBAAoB;IAC9B,uDAA+B,CAAA;IAC/B,yDAAiC,CAAA;IACjC,yCAAiB,CAAA;IACjB,2CAAmB,CAAA;IACnB,2CAAmB,CAAA;IACnB,6CAAqB,CAAA;IACrB,yDAAiC,CAAA;IACjC,2DAAmC,CAAA;IACnC,iDAAyB,CAAA;IACzB,mDAA2B,CAAA;IAC3B,iDAAyB,CAAA;IACzB,mDAA2B,CAAA;IAC3B,6DAAqC,CAAA;IACrC,+DAAuC,CAAA;AACzC,CAAC,EAfW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAe/B;AAED,0BAA0B;AAC1B,IAAY,WAGX;AAHD,WAAY,WAAW;IACrB,4CAA6B,CAAA;IAC7B,wCAAyB,CAAA;AAC3B,CAAC,EAHW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAGtB;AAED,wCAAwC;AACxC,IAAY,yBASX;AATD,WAAY,yBAAyB;IACnC,4DAA+B,CAAA;IAC/B,8DAAiC,CAAA;IACjC,8CAAiB,CAAA;IACjB,gDAAmB,CAAA;IACnB,gDAAmB,CAAA;IACnB,kDAAqB,CAAA;IACrB,gEAAmC,CAAA;IACnC,kEAAqC,CAAA;AACvC,CAAC,EATW,yBAAyB,GAAzB,iCAAyB,KAAzB,iCAAyB,QASpC;AAED,+BAA+B;AAC/B,IAAY,gBASX;AATD,WAAY,gBAAgB;IAC1B,mDAA+B,CAAA;IAC/B,qDAAiC,CAAA;IACjC,qCAAiB,CAAA;IACjB,uCAAmB,CAAA;IACnB,uCAAmB,CAAA;IACnB,yCAAqB,CAAA;IACrB,uDAAmC,CAAA;IACnC,yDAAqC,CAAA;AACvC,CAAC,EATW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAS3B;AAED,gCAAgC;AAChC,IAAY,iBAeX;AAfD,WAAY,iBAAiB;IAC3B,oDAA+B,CAAA;IAC/B,sDAAiC,CAAA;IACjC,sCAAiB,CAAA;IACjB,wCAAmB,CAAA;IACnB,0CAAqB,CAAA;IACrB,4CAAuB,CAAA;IACvB,kDAA6B,CAAA;IAC7B,oDAA+B,CAAA;IAC/B,8CAAyB,CAAA;IACzB,gDAA2B,CAAA;IAC3B,0DAAqC,CAAA;IACrC,4DAAuC,CAAA;IACvC,wDAAmC,CAAA;IACnC,0DAAqC,CAAA;AACvC,CAAC,EAfW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAe5B;AAED,mCAAmC;AACnC,IAAY,oBAKX;AALD,WAAY,oBAAoB;IAC9B,uDAA+B,CAAA;IAC/B,yDAAiC,CAAA;IACjC,yCAAiB,CAAA;IACjB,2CAAmB,CAAA;AACrB,CAAC,EALW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAK/B;AAED,mCAAmC;AACnC,IAAY,oBAiCX;AAjCD,WAAY,oBAAoB;IAC9B,uDAA+B,CAAA;IAC/B,yDAAiC,CAAA;IACjC,yCAAiB,CAAA;IACjB,2CAAmB,CAAA;IACnB,iDAAyB,CAAA;IACzB,mDAA2B,CAAA;IAC3B,6CAAqB,CAAA;IACrB,+CAAuB,CAAA;IACvB,6CAAqB,CAAA;IACrB,+CAAuB,CAAA;IACvB,6CAAqB,CAAA;IACrB,+CAAuB,CAAA;IACvB,+CAAuB,CAAA;IACvB,iDAAyB,CAAA;IACzB,iDAAyB,CAAA;IACzB,mDAA2B,CAAA;IAC3B,uDAA+B,CAAA;IAC/B,yDAAiC,CAAA;IACjC,iEAAyC,CAAA;IACzC,mEAA2C,CAAA;IAC3C,yDAAiC,CAAA;IACjC,2DAAmC,CAAA;IACnC,+CAAuB,CAAA;IACvB,iDAAyB,CAAA;IACzB,uDAA+B,CAAA;IAC/B,yDAAiC,CAAA;IACjC,uDAA+B,CAAA;IAC/B,yDAAiC,CAAA;IACjC,qDAA6B,CAAA;IAC7B,uDAA+B,CAAA;IAC/B,qDAA6B,CAAA;IAC7B,uDAA+B,CAAA;AACjC,CAAC,EAjCW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAiC/B;AAED,8BAA8B;AAC9B,IAAY,eASX;AATD,WAAY,eAAe;IACzB,kDAA+B,CAAA;IAC/B,oDAAiC,CAAA;IACjC,sCAAmB,CAAA;IACnB,wCAAqB,CAAA;IACrB,8CAA2B,CAAA;IAC3B,gDAA6B,CAAA;IAC7B,kDAA+B,CAAA;IAC/B,oDAAiC,CAAA;AACnC,CAAC,EATW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAS1B;AAED,0BAA0B;AAC1B,IAAY,WAMX;AAND,WAAY,WAAW;IACrB,gCAAiB,CAAA;IACjB,gCAAiB,CAAA;IACjB,gCAAiB,CAAA;IACjB,kCAAmB,CAAA;IACnB,oCAAqB,CAAA;AACvB,CAAC,EANW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAMtB;AAED,2BAA2B;AAC3B,IAAY,YAKX;AALD,WAAY,YAAY;IACtB,6CAA6B,CAAA;IAC7B,6BAAa,CAAA;IACb,2BAAW,CAAA;IACX,6BAAa,CAAA;AACf,CAAC,EALW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAKvB;AAED,6BAA6B;AAC7B,IAAY,cAmCX;AAnCD,WAAY,cAAc;IACxB,iDAA+B,CAAA;IAC/B,mDAAiC,CAAA;IACjC,mCAAiB,CAAA;IACjB,qCAAmB,CAAA;IACnB,6CAA2B,CAAA;IAC3B,+CAA6B,CAAA;IAC7B,uCAAqB,CAAA;IACrB,yCAAuB,CAAA;IACvB,2CAAyB,CAAA;IACzB,6CAA2B,CAAA;IAC3B,+CAA6B,CAAA;IAC7B,iDAA+B,CAAA;IAC/B,mDAAiC,CAAA;IACjC,qDAAmC,CAAA;IACnC,6CAA2B,CAAA;IAC3B,+CAA6B,CAAA;IAC7B,+CAA6B,CAAA;IAC7B,iDAA+B,CAAA;IAC/B,iEAA+C,CAAA;IAC/C,mEAAiD,CAAA;IACjD,iDAA+B,CAAA;IAC/B,mDAAiC,CAAA;IACjC,mDAAiC,CAAA;IACjC,qDAAmC,CAAA;IACnC,iDAA+B,CAAA;IAC/B,mDAAiC,CAAA;IACjC,mDAAiC,CAAA;IACjC,qDAAmC,CAAA;IACnC,6CAA2B,CAAA;IAC3B,+CAA6B,CAAA;IAC7B,yCAAuB,CAAA;IACvB,2CAAyB,CAAA;IACzB,uCAAqB,CAAA;IACrB,yCAAuB,CAAA;AACzB,CAAC,EAnCW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAmCzB;AAED,4BAA4B;AAC5B,IAAY,aASX;AATD,WAAY,aAAa;IACvB,gDAA+B,CAAA;IAC/B,kDAAiC,CAAA;IACjC,kCAAiB,CAAA;IACjB,oCAAmB,CAAA;IACnB,gDAA+B,CAAA;IAC/B,kDAAiC,CAAA;IACjC,0CAAyB,CAAA;IACzB,4CAA2B,CAAA;AAC7B,CAAC,EATW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QASxB;AAED,2BAA2B;AAC3B,IAAY,YAaX;AAbD,WAAY,YAAY;IACtB,+CAA+B,CAAA;IAC/B,iDAAiC,CAAA;IACjC,iCAAiB,CAAA;IACjB,mCAAmB,CAAA;IACnB,qCAAqB,CAAA;IACrB,uCAAuB,CAAA;IACvB,mDAAmC,CAAA;IACnC,qDAAqC,CAAA;IACrC,mCAAmB,CAAA;IACnB,qCAAqB,CAAA;IACrB,+CAA+B,CAAA;IAC/B,iDAAiC,CAAA;AACnC,CAAC,EAbW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAavB;AAED,+BAA+B;AAC/B,IAAY,gBASX;AATD,WAAY,gBAAgB;IAC1B,mDAA+B,CAAA;IAC/B,qDAAiC,CAAA;IACjC,qCAAiB,CAAA;IACjB,uCAAmB,CAAA;IACnB,yCAAqB,CAAA;IACrB,2CAAuB,CAAA;IACvB,mDAA+B,CAAA;IAC/B,qDAAiC,CAAA;AACnC,CAAC,EATW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAS3B;AAED,mCAAmC;AACnC,IAAY,oBASX;AATD,WAAY,oBAAoB;IAC9B,uDAA+B,CAAA;IAC/B,yDAAiC,CAAA;IACjC,+CAAuB,CAAA;IACvB,iDAAyB,CAAA;IACzB,uDAA+B,CAAA;IAC/B,yDAAiC,CAAA;IACjC,uDAA+B,CAAA;IAC/B,yDAAiC,CAAA;AACnC,CAAC,EATW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAS/B;AAED,6BAA6B;AAC7B,IAAY,cA6BX;AA7BD,WAAY,cAAc;IACxB,iDAA+B,CAAA;IAC/B,mDAAiC,CAAA;IACjC,uCAAqB,CAAA;IACrB,yCAAuB,CAAA;IACvB,yCAAuB,CAAA;IACvB,2CAAyB,CAAA;IACzB,qDAAmC,CAAA;IACnC,uDAAqC,CAAA;IACrC,iDAA+B,CAAA;IAC/B,mDAAiC,CAAA;IACjC,+CAA6B,CAAA;IAC7B,iDAA+B,CAAA;IAC/B,iDAA+B,CAAA;IAC/B,mDAAiC,CAAA;IACjC,mDAAiC,CAAA;IACjC,qDAAmC,CAAA;IACnC,uCAAqB,CAAA;IACrB,yCAAuB,CAAA;IACvB,yCAAuB,CAAA;IACvB,2CAAyB,CAAA;IACzB,iDAA+B,CAAA;IAC/B,mDAAiC,CAAA;IACjC,6CAA2B,CAAA;IAC3B,+CAA6B,CAAA;IAC7B,uDAAqC,CAAA;IACrC,yDAAuC,CAAA;IACvC,6DAA2C,CAAA;IAC3C,+DAA6C,CAAA;AAC/C,CAAC,EA7BW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QA6BzB;AAED,mCAAmC;AACnC,IAAY,oBAyBX;AAzBD,WAAY,oBAAoB;IAC9B,uDAA+B,CAAA;IAC/B,yDAAiC,CAAA;IACjC,6CAAqB,CAAA;IACrB,+CAAuB,CAAA;IACvB,uDAA+B,CAAA;IAC/B,yDAAiC,CAAA;IACjC,uDAA+B,CAAA;IAC/B,yDAAiC,CAAA;IACjC,2DAAmC,CAAA;IACnC,6DAAqC,CAAA;IACrC,+DAAuC,CAAA;IACvC,iEAAyC,CAAA;IACzC,+CAAuB,CAAA;IACvB,iDAAyB,CAAA;IACzB,+CAAuB,CAAA;IACvB,iDAAyB,CAAA;IACzB,6DAAqC,CAAA;IACrC,+DAAuC,CAAA;IACvC,yDAAiC,CAAA;IACjC,2DAAmC,CAAA;IACnC,mEAA2C,CAAA;IAC3C,qEAA6C,CAAA;IAC7C,2DAAmC,CAAA;IACnC,6DAAqC,CAAA;AACvC,CAAC,EAzBW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAyB/B;AAED,yCAAyC;AACzC,IAAY,0BAiBX;AAjBD,WAAY,0BAA0B;IACpC,6DAA+B,CAAA;IAC/B,+DAAiC,CAAA;IACjC,iEAAmC,CAAA;IACnC,mEAAqC,CAAA;IACrC,iEAAmC,CAAA;IACnC,mEAAqC,CAAA;IACrC,6DAA+B,CAAA;IAC/B,+DAAiC,CAAA;IACjC,2DAA6B,CAAA;IAC7B,6DAA+B,CAAA;IAC/B,6DAA+B,CAAA;IAC/B,+DAAiC,CAAA;IACjC,6DAA+B,CAAA;IAC/B,+DAAiC,CAAA;IACjC,iFAAmD,CAAA;IACnD,mFAAqD,CAAA;AACvD,CAAC,EAjBW,0BAA0B,GAA1B,kCAA0B,KAA1B,kCAA0B,QAiBrC;AAED,sCAAsC;AACtC,IAAY,uBAiBX;AAjBD,WAAY,uBAAuB;IACjC,0DAA+B,CAAA;IAC/B,4DAAiC,CAAA;IACjC,4CAAiB,CAAA;IACjB,8CAAmB,CAAA;IACnB,gDAAqB,CAAA;IACrB,kDAAuB,CAAA;IACvB,gDAAqB,CAAA;IACrB,kDAAuB,CAAA;IACvB,oDAAyB,CAAA;IACzB,sDAA2B,CAAA;IAC3B,0DAA+B,CAAA;IAC/B,4DAAiC,CAAA;IACjC,sDAA2B,CAAA;IAC3B,wDAA6B,CAAA;IAC7B,kDAAuB,CAAA;IACvB,oDAAyB,CAAA;AAC3B,CAAC,EAjBW,uBAAuB,GAAvB,+BAAuB,KAAvB,+BAAuB,QAiBlC;AAED,gCAAgC;AAChC,IAAY,iBAaX;AAbD,WAAY,iBAAiB;IAC3B,oDAA+B,CAAA;IAC/B,sDAAiC,CAAA;IACjC,sCAAiB,CAAA;IACjB,wCAAmB,CAAA;IACnB,0CAAqB,CAAA;IACrB,4CAAuB,CAAA;IACvB,sDAAiC,CAAA;IACjC,wDAAmC,CAAA;IACnC,kDAA6B,CAAA;IAC7B,oDAA+B,CAAA;IAC/B,8CAAyB,CAAA;IACzB,gDAA2B,CAAA;AAC7B,CAAC,EAbW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAa5B;AAED,0BAA0B;AAC1B,IAAY,WAKX;AALD,WAAY,WAAW;IACrB,kCAAmB,CAAA;IACnB,kCAAmB,CAAA;IACnB,8BAAe,CAAA;IACf,kCAAmB,CAAA;AACrB,CAAC,EALW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAKtB;AAED,8BAA8B;AAC9B,IAAY,eAeX;AAfD,WAAY,eAAe;IACzB,kDAA+B,CAAA;IAC/B,oDAAiC,CAAA;IACjC,oCAAiB,CAAA;IACjB,sCAAmB,CAAA;IACnB,0CAAuB,CAAA;IACvB,4CAAyB,CAAA;IACzB,sDAAmC,CAAA;IACnC,wDAAqC,CAAA;IACrC,kDAA+B,CAAA;IAC/B,oDAAiC,CAAA;IACjC,8CAA2B,CAAA;IAC3B,gDAA6B,CAAA;IAC7B,kDAA+B,CAAA;IAC/B,oDAAiC,CAAA;AACnC,CAAC,EAfW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAe1B;AAED,iCAAiC;AACjC,IAAY,kBAeX;AAfD,WAAY,kBAAkB;IAC5B,qDAA+B,CAAA;IAC/B,uDAAiC,CAAA;IACjC,yCAAmB,CAAA;IACnB,2CAAqB,CAAA;IACrB,yCAAmB,CAAA;IACnB,2CAAqB,CAAA;IACrB,qDAA+B,CAAA;IAC/B,uDAAiC,CAAA;IACjC,2CAAqB,CAAA;IACrB,6CAAuB,CAAA;IACvB,6CAAuB,CAAA;IACvB,+CAAyB,CAAA;IACzB,iDAA2B,CAAA;IAC3B,mDAA6B,CAAA;AAC/B,CAAC,EAfW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAe7B;AAED,mCAAmC;AACnC,IAAY,oBAeX;AAfD,WAAY,oBAAoB;IAC9B,uDAA+B,CAAA;IAC/B,yDAAiC,CAAA;IACjC,yCAAiB,CAAA;IACjB,2CAAmB,CAAA;IACnB,+CAAuB,CAAA;IACvB,iDAAyB,CAAA;IACzB,6CAAqB,CAAA;IACrB,+CAAuB,CAAA;IACvB,uDAA+B,CAAA;IAC/B,yDAAiC,CAAA;IACjC,iDAAyB,CAAA;IACzB,mDAA2B,CAAA;IAC3B,6CAAqB,CAAA;IACrB,+CAAuB,CAAA;AACzB,CAAC,EAfW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAe/B;AAED,mCAAmC;AACnC,IAAY,oBASX;AATD,WAAY,oBAAoB;IAC9B,uDAA+B,CAAA;IAC/B,yDAAiC,CAAA;IACjC,6CAAqB,CAAA;IACrB,+CAAuB,CAAA;IACvB,2CAAmB,CAAA;IACnB,6CAAqB,CAAA;IACrB,6CAAqB,CAAA;IACrB,+CAAuB,CAAA;AACzB,CAAC,EATW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAS/B;AAED,oCAAoC;AACpC,IAAY,qBASX;AATD,WAAY,qBAAqB;IAC/B,wDAA+B,CAAA;IAC/B,0DAAiC,CAAA;IACjC,0CAAiB,CAAA;IACjB,4CAAmB,CAAA;IACnB,4CAAmB,CAAA;IACnB,8CAAqB,CAAA;IACrB,8CAAqB,CAAA;IACrB,gDAAuB,CAAA;AACzB,CAAC,EATW,qBAAqB,GAArB,6BAAqB,KAArB,6BAAqB,QAShC;AAED,8BAA8B;AAC9B,IAAY,eASX;AATD,WAAY,eAAe;IACzB,kDAA+B,CAAA;IAC/B,oDAAiC,CAAA;IACjC,oCAAiB,CAAA;IACjB,sCAAmB,CAAA;IACnB,wCAAqB,CAAA;IACrB,0CAAuB,CAAA;IACvB,kDAA+B,CAAA;IAC/B,oDAAiC,CAAA;AACnC,CAAC,EATW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAS1B;AAED,0BAA0B;AAC1B,IAAY,WAMX;AAND,WAAY,WAAW;IACrB,sCAAuB,CAAA;IACvB,kCAAmB,CAAA;IACnB,oCAAqB,CAAA;IACrB,sCAAuB,CAAA;IACvB,sDAAuC,CAAA;AACzC,CAAC,EANW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAMtB;AAED,8BAA8B;AAC9B,IAAY,eAeX;AAfD,WAAY,eAAe;IACzB,kDAA+B,CAAA;IAC/B,oDAAiC,CAAA;IACjC,oCAAiB,CAAA;IACjB,sCAAmB,CAAA;IACnB,gDAA6B,CAAA;IAC7B,kDAA+B,CAAA;IAC/B,wCAAqB,CAAA;IACrB,0CAAuB,CAAA;IACvB,0CAAuB,CAAA;IACvB,4CAAyB,CAAA;IACzB,sDAAmC,CAAA;IACnC,wDAAqC,CAAA;IACrC,8CAA2B,CAAA;IAC3B,gDAA6B,CAAA;AAC/B,CAAC,EAfW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAe1B;AAED,iCAAiC;AACjC,IAAY,kBAIX;AAJD,WAAY,kBAAkB;IAC5B,uCAAiB,CAAA;IACjB,iDAA2B,CAAA;IAC3B,qCAAe,CAAA;AACjB,CAAC,EAJW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAI7B;AAED,+BAA+B;AAC/B,IAAY,gBAmBX;AAnBD,WAAY,gBAAgB;IAC1B,mDAA+B,CAAA;IAC/B,qDAAiC,CAAA;IACjC,qCAAiB,CAAA;IACjB,uCAAmB,CAAA;IACnB,yCAAqB,CAAA;IACrB,2CAAuB,CAAA;IACvB,mDAA+B,CAAA;IAC/B,qDAAiC,CAAA;IACjC,iDAA6B,CAAA;IAC7B,mDAA+B,CAAA;IAC/B,yCAAqB,CAAA;IACrB,2CAAuB,CAAA;IACvB,iDAA6B,CAAA;IAC7B,mDAA+B,CAAA;IAC/B,+CAA2B,CAAA;IAC3B,iDAA6B,CAAA;IAC7B,uDAAmC,CAAA;IACnC,yDAAqC,CAAA;AACvC,CAAC,EAnBW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAmB3B;AAED,qCAAqC;AACrC,IAAY,sBASX;AATD,WAAY,sBAAsB;IAChC,yDAA+B,CAAA;IAC/B,2DAAiC,CAAA;IACjC,2CAAiB,CAAA;IACjB,6CAAmB,CAAA;IACnB,+CAAqB,CAAA;IACrB,iDAAuB,CAAA;IACvB,yDAA+B,CAAA;IAC/B,2DAAiC,CAAA;AACnC,CAAC,EATW,sBAAsB,GAAtB,8BAAsB,KAAtB,8BAAsB,QASjC;AAED,mCAAmC;AACnC,IAAY,oBAKX;AALD,WAAY,oBAAoB;IAC9B,uDAA+B,CAAA;IAC/B,yDAAiC,CAAA;IACjC,uDAA+B,CAAA;IAC/B,yDAAiC,CAAA;AACnC,CAAC,EALW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAK/B;AAED,kCAAkC;AAClC,IAAY,mBASX;AATD,WAAY,mBAAmB;IAC7B,sDAA+B,CAAA;IAC/B,wDAAiC,CAAA;IACjC,wCAAiB,CAAA;IACjB,0CAAmB,CAAA;IACnB,0CAAmB,CAAA;IACnB,4CAAqB,CAAA;IACrB,4CAAqB,CAAA;IACrB,8CAAuB,CAAA;AACzB,CAAC,EATW,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QAS9B;AAED,yCAAyC;AACzC,IAAY,0BASX;AATD,WAAY,0BAA0B;IACpC,6DAA+B,CAAA;IAC/B,+DAAiC,CAAA;IACjC,+CAAiB,CAAA;IACjB,iDAAmB,CAAA;IACnB,iDAAmB,CAAA;IACnB,mDAAqB,CAAA;IACrB,mDAAqB,CAAA;IACrB,qDAAuB,CAAA;AACzB,CAAC,EATW,0BAA0B,GAA1B,kCAA0B,KAA1B,kCAA0B,QASrC;AAED,yCAAyC;AACzC,IAAY,0BAKX;AALD,WAAY,0BAA0B;IACpC,6DAA+B,CAAA;IAC/B,+DAAiC,CAAA;IACjC,+CAAiB,CAAA;IACjB,iDAAmB,CAAA;AACrB,CAAC,EALW,0BAA0B,GAA1B,kCAA0B,KAA1B,kCAA0B,QAKrC;AAED,qDAAqD;AACrD,IAAY,SAGX;AAHD,WAAY,SAAS;IACnB,0BAAa,CAAA;IACb,wBAAW,CAAA;AACb,CAAC,EAHW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAGpB","sourcesContent":["/* tslint:disable */\n\n/* Long type */\nexport type Long = any;\n/* Enum for IssueState */\nexport enum IssueState {\n  open = \"open\",\n  closed = \"closed\"\n}\n\n/* Ordering Enum for Issue */\nexport enum _IssueOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  number_asc = \"number_asc\",\n  number_desc = \"number_desc\",\n  name_asc = \"name_asc\",\n  name_desc = \"name_desc\",\n  title_asc = \"title_asc\",\n  title_desc = \"title_desc\",\n  body_asc = \"body_asc\",\n  body_desc = \"body_desc\",\n  state_asc = \"state_asc\",\n  state_desc = \"state_desc\",\n  timestamp_asc = \"timestamp_asc\",\n  timestamp_desc = \"timestamp_desc\",\n  action_asc = \"action_asc\",\n  action_desc = \"action_desc\",\n  createdAt_asc = \"createdAt_asc\",\n  createdAt_desc = \"createdAt_desc\",\n  updatedAt_asc = \"updatedAt_asc\",\n  updatedAt_desc = \"updatedAt_desc\",\n  closedAt_asc = \"closedAt_asc\",\n  closedAt_desc = \"closedAt_desc\"\n}\n\n/* Ordering Enum for Repo */\nexport enum _RepoOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  owner_asc = \"owner_asc\",\n  owner_desc = \"owner_desc\",\n  name_asc = \"name_asc\",\n  name_desc = \"name_desc\",\n  allowRebaseMerge_asc = \"allowRebaseMerge_asc\",\n  allowRebaseMerge_desc = \"allowRebaseMerge_desc\",\n  allowSquashMerge_asc = \"allowSquashMerge_asc\",\n  allowSquashMerge_desc = \"allowSquashMerge_desc\",\n  allowMergeCommit_asc = \"allowMergeCommit_asc\",\n  allowMergeCommit_desc = \"allowMergeCommit_desc\",\n  gitHubId_asc = \"gitHubId_asc\",\n  gitHubId_desc = \"gitHubId_desc\",\n  defaultBranch_asc = \"defaultBranch_asc\",\n  defaultBranch_desc = \"defaultBranch_desc\"\n}\n\n/* Ordering Enum for Label */\nexport enum _LabelOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  name_asc = \"name_asc\",\n  name_desc = \"name_desc\",\n  default_asc = \"default_asc\",\n  default_desc = \"default_desc\",\n  color_asc = \"color_asc\",\n  color_desc = \"color_desc\"\n}\n\n/* Ordering Enum for ChatChannel */\nexport enum _ChatChannelOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  name_asc = \"name_asc\",\n  name_desc = \"name_desc\",\n  provider_asc = \"provider_asc\",\n  provider_desc = \"provider_desc\",\n  normalizedName_asc = \"normalizedName_asc\",\n  normalizedName_desc = \"normalizedName_desc\",\n  channelId_asc = \"channelId_asc\",\n  channelId_desc = \"channelId_desc\",\n  isDefault_asc = \"isDefault_asc\",\n  isDefault_desc = \"isDefault_desc\",\n  botInvitedSelf_asc = \"botInvitedSelf_asc\",\n  botInvitedSelf_desc = \"botInvitedSelf_desc\"\n}\n\n/* Ordering Enum for ChatId */\nexport enum _ChatIdOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  screenName_asc = \"screenName_asc\",\n  screenName_desc = \"screenName_desc\",\n  userId_asc = \"userId_asc\",\n  userId_desc = \"userId_desc\",\n  provider_asc = \"provider_asc\",\n  provider_desc = \"provider_desc\",\n  isAtomistBot_asc = \"isAtomistBot_asc\",\n  isAtomistBot_desc = \"isAtomistBot_desc\",\n  isOwner_asc = \"isOwner_asc\",\n  isOwner_desc = \"isOwner_desc\",\n  isPrimaryOwner_asc = \"isPrimaryOwner_asc\",\n  isPrimaryOwner_desc = \"isPrimaryOwner_desc\",\n  isAdmin_asc = \"isAdmin_asc\",\n  isAdmin_desc = \"isAdmin_desc\",\n  isBot_asc = \"isBot_asc\",\n  isBot_desc = \"isBot_desc\",\n  timezoneLabel_asc = \"timezoneLabel_asc\",\n  timezoneLabel_desc = \"timezoneLabel_desc\"\n}\n\n/* Ordering Enum for Email */\nexport enum _EmailOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  address_asc = \"address_asc\",\n  address_desc = \"address_desc\"\n}\n\n/* Ordering Enum for GitHubId */\nexport enum _GitHubIdOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  login_asc = \"login_asc\",\n  login_desc = \"login_desc\",\n  name_asc = \"name_asc\",\n  name_desc = \"name_desc\"\n}\n\n/* Enum for ProviderType */\nexport enum ProviderType {\n  bitbucket_cloud = \"bitbucket_cloud\",\n  github_com = \"github_com\",\n  ghe = \"ghe\",\n  bitbucket = \"bitbucket\"\n}\n\n/* Ordering Enum for GitHubProvider */\nexport enum _GitHubProviderOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  url_asc = \"url_asc\",\n  url_desc = \"url_desc\",\n  providerId_asc = \"providerId_asc\",\n  providerId_desc = \"providerId_desc\",\n  apiUrl_asc = \"apiUrl_asc\",\n  apiUrl_desc = \"apiUrl_desc\",\n  gitUrl_asc = \"gitUrl_asc\",\n  gitUrl_desc = \"gitUrl_desc\",\n  providerType_asc = \"providerType_asc\",\n  providerType_desc = \"providerType_desc\"\n}\n\n/* Ordering Enum for Team */\nexport enum _TeamOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  name_asc = \"name_asc\",\n  name_desc = \"name_desc\",\n  description_asc = \"description_asc\",\n  description_desc = \"description_desc\",\n  iconUrl_asc = \"iconUrl_asc\",\n  iconUrl_desc = \"iconUrl_desc\"\n}\n\n/* Ordering Enum for Person */\nexport enum _PersonOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  forename_asc = \"forename_asc\",\n  forename_desc = \"forename_desc\",\n  surname_asc = \"surname_asc\",\n  surname_desc = \"surname_desc\",\n  name_asc = \"name_asc\",\n  name_desc = \"name_desc\"\n}\n\n/* Enum for OwnerType */\nexport enum OwnerType {\n  user = \"user\",\n  organization = \"organization\"\n}\n\n/* Ordering Enum for Org */\nexport enum _OrgOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  owner_asc = \"owner_asc\",\n  owner_desc = \"owner_desc\",\n  ownerType_asc = \"ownerType_asc\",\n  ownerType_desc = \"ownerType_desc\"\n}\n\n/* Ordering Enum for SCMProvider */\nexport enum _SCMProviderOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  url_asc = \"url_asc\",\n  url_desc = \"url_desc\",\n  providerId_asc = \"providerId_asc\",\n  providerId_desc = \"providerId_desc\",\n  apiUrl_asc = \"apiUrl_asc\",\n  apiUrl_desc = \"apiUrl_desc\",\n  gitUrl_asc = \"gitUrl_asc\",\n  gitUrl_desc = \"gitUrl_desc\",\n  providerType_asc = \"providerType_asc\",\n  providerType_desc = \"providerType_desc\"\n}\n\n/* Enum for WebhookType */\nexport enum WebhookType {\n  organization = \"organization\",\n  repository = \"repository\"\n}\n\n/* Ordering Enum for GitHubOrgWebhook */\nexport enum _GitHubOrgWebhookOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  url_asc = \"url_asc\",\n  url_desc = \"url_desc\",\n  webhookType_asc = \"webhookType_asc\",\n  webhookType_desc = \"webhookType_desc\"\n}\n\n/* Ordering Enum for Webhook */\nexport enum _WebhookOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  url_asc = \"url_asc\",\n  url_desc = \"url_desc\",\n  webhookType_asc = \"webhookType_asc\",\n  webhookType_desc = \"webhookType_desc\"\n}\n\n/* Ordering Enum for ChatTeam */\nexport enum _ChatTeamOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  name_asc = \"name_asc\",\n  name_desc = \"name_desc\",\n  provider_asc = \"provider_asc\",\n  provider_desc = \"provider_desc\",\n  domain_asc = \"domain_asc\",\n  domain_desc = \"domain_desc\",\n  messageCount_asc = \"messageCount_asc\",\n  messageCount_desc = \"messageCount_desc\",\n  emailDomain_asc = \"emailDomain_asc\",\n  emailDomain_desc = \"emailDomain_desc\"\n}\n\n/* Ordering Enum for ChannelLink */\nexport enum _ChannelLinkOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\"\n}\n\n/* Ordering Enum for PullRequest */\nexport enum _PullRequestOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  number_asc = \"number_asc\",\n  number_desc = \"number_desc\",\n  prId_asc = \"prId_asc\",\n  prId_desc = \"prId_desc\",\n  name_asc = \"name_asc\",\n  name_desc = \"name_desc\",\n  body_asc = \"body_asc\",\n  body_desc = \"body_desc\",\n  state_asc = \"state_asc\",\n  state_desc = \"state_desc\",\n  merged_asc = \"merged_asc\",\n  merged_desc = \"merged_desc\",\n  timestamp_asc = \"timestamp_asc\",\n  timestamp_desc = \"timestamp_desc\",\n  baseBranchName_asc = \"baseBranchName_asc\",\n  baseBranchName_desc = \"baseBranchName_desc\",\n  branchName_asc = \"branchName_asc\",\n  branchName_desc = \"branchName_desc\",\n  title_asc = \"title_asc\",\n  title_desc = \"title_desc\",\n  createdAt_asc = \"createdAt_asc\",\n  createdAt_desc = \"createdAt_desc\",\n  updatedAt_asc = \"updatedAt_asc\",\n  updatedAt_desc = \"updatedAt_desc\",\n  closedAt_asc = \"closedAt_asc\",\n  closedAt_desc = \"closedAt_desc\",\n  mergedAt_asc = \"mergedAt_asc\",\n  mergedAt_desc = \"mergedAt_desc\"\n}\n\n/* Ordering Enum for Commit */\nexport enum _CommitOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  sha_asc = \"sha_asc\",\n  sha_desc = \"sha_desc\",\n  message_asc = \"message_asc\",\n  message_desc = \"message_desc\",\n  timestamp_asc = \"timestamp_asc\",\n  timestamp_desc = \"timestamp_desc\"\n}\n\n/* Enum for BuildStatus */\nexport enum BuildStatus {\n  passed = \"passed\",\n  broken = \"broken\",\n  failed = \"failed\",\n  started = \"started\",\n  canceled = \"canceled\"\n}\n\n/* Enum for BuildTrigger */\nexport enum BuildTrigger {\n  pull_request = \"pull_request\",\n  push = \"push\",\n  tag = \"tag\",\n  cron = \"cron\"\n}\n\n/* Ordering Enum for Build */\nexport enum _BuildOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  buildId_asc = \"buildId_asc\",\n  buildId_desc = \"buildId_desc\",\n  name_asc = \"name_asc\",\n  name_desc = \"name_desc\",\n  status_asc = \"status_asc\",\n  status_desc = \"status_desc\",\n  buildUrl_asc = \"buildUrl_asc\",\n  buildUrl_desc = \"buildUrl_desc\",\n  compareUrl_asc = \"compareUrl_asc\",\n  compareUrl_desc = \"compareUrl_desc\",\n  trigger_asc = \"trigger_asc\",\n  trigger_desc = \"trigger_desc\",\n  provider_asc = \"provider_asc\",\n  provider_desc = \"provider_desc\",\n  pullRequestNumber_asc = \"pullRequestNumber_asc\",\n  pullRequestNumber_desc = \"pullRequestNumber_desc\",\n  startedAt_asc = \"startedAt_asc\",\n  startedAt_desc = \"startedAt_desc\",\n  finishedAt_asc = \"finishedAt_asc\",\n  finishedAt_desc = \"finishedAt_desc\",\n  timestamp_asc = \"timestamp_asc\",\n  timestamp_desc = \"timestamp_desc\",\n  workflowId_asc = \"workflowId_asc\",\n  workflowId_desc = \"workflowId_desc\",\n  jobName_asc = \"jobName_asc\",\n  jobName_desc = \"jobName_desc\",\n  jobId_asc = \"jobId_asc\",\n  jobId_desc = \"jobId_desc\",\n  data_asc = \"data_asc\",\n  data_desc = \"data_desc\"\n}\n\n/* Ordering Enum for Push */\nexport enum _PushOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  timestamp_asc = \"timestamp_asc\",\n  timestamp_desc = \"timestamp_desc\",\n  branch_asc = \"branch_asc\",\n  branch_desc = \"branch_desc\"\n}\n\n/* Ordering Enum for Tag */\nexport enum _TagOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  name_asc = \"name_asc\",\n  name_desc = \"name_desc\",\n  description_asc = \"description_asc\",\n  description_desc = \"description_desc\",\n  ref_asc = \"ref_asc\",\n  ref_desc = \"ref_desc\",\n  timestamp_asc = \"timestamp_asc\",\n  timestamp_desc = \"timestamp_desc\"\n}\n\n/* Ordering Enum for Release */\nexport enum _ReleaseOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  name_asc = \"name_asc\",\n  name_desc = \"name_desc\",\n  timestamp_asc = \"timestamp_asc\",\n  timestamp_desc = \"timestamp_desc\"\n}\n\n/* Ordering Enum for DockerImage */\nexport enum _DockerImageOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  image_asc = \"image_asc\",\n  image_desc = \"image_desc\",\n  imageName_asc = \"imageName_asc\",\n  imageName_desc = \"imageName_desc\",\n  timestamp_asc = \"timestamp_asc\",\n  timestamp_desc = \"timestamp_desc\"\n}\n\n/* Ordering Enum for K8Pod */\nexport enum _K8PodOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  name_asc = \"name_asc\",\n  name_desc = \"name_desc\",\n  phase_asc = \"phase_asc\",\n  phase_desc = \"phase_desc\",\n  environment_asc = \"environment_asc\",\n  environment_desc = \"environment_desc\",\n  timestamp_asc = \"timestamp_asc\",\n  timestamp_desc = \"timestamp_desc\",\n  baseName_asc = \"baseName_asc\",\n  baseName_desc = \"baseName_desc\",\n  namespace_asc = \"namespace_asc\",\n  namespace_desc = \"namespace_desc\",\n  statusJSON_asc = \"statusJSON_asc\",\n  statusJSON_desc = \"statusJSON_desc\",\n  host_asc = \"host_asc\",\n  host_desc = \"host_desc\",\n  state_asc = \"state_asc\",\n  state_desc = \"state_desc\",\n  specsJSON_asc = \"specsJSON_asc\",\n  specsJSON_desc = \"specsJSON_desc\",\n  envJSON_asc = \"envJSON_asc\",\n  envJSON_desc = \"envJSON_desc\",\n  metadataJSON_asc = \"metadataJSON_asc\",\n  metadataJSON_desc = \"metadataJSON_desc\",\n  resourceVersion_asc = \"resourceVersion_asc\",\n  resourceVersion_desc = \"resourceVersion_desc\"\n}\n\n/* Ordering Enum for K8Container */\nexport enum _K8ContainerOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  name_asc = \"name_asc\",\n  name_desc = \"name_desc\",\n  imageName_asc = \"imageName_asc\",\n  imageName_desc = \"imageName_desc\",\n  timestamp_asc = \"timestamp_asc\",\n  timestamp_desc = \"timestamp_desc\",\n  environment_asc = \"environment_asc\",\n  environment_desc = \"environment_desc\",\n  containerJSON_asc = \"containerJSON_asc\",\n  containerJSON_desc = \"containerJSON_desc\",\n  state_asc = \"state_asc\",\n  state_desc = \"state_desc\",\n  ready_asc = \"ready_asc\",\n  ready_desc = \"ready_desc\",\n  restartCount_asc = \"restartCount_asc\",\n  restartCount_desc = \"restartCount_desc\",\n  statusJSON_asc = \"statusJSON_asc\",\n  statusJSON_desc = \"statusJSON_desc\",\n  resourceVersion_asc = \"resourceVersion_asc\",\n  resourceVersion_desc = \"resourceVersion_desc\",\n  containerID_asc = \"containerID_asc\",\n  containerID_desc = \"containerID_desc\"\n}\n\n/* Ordering Enum for SpinnakerPipeline */\nexport enum _SpinnakerPipelineOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  executionId_asc = \"executionId_asc\",\n  executionId_desc = \"executionId_desc\",\n  application_asc = \"application_asc\",\n  application_desc = \"application_desc\",\n  eventType_asc = \"eventType_asc\",\n  eventType_desc = \"eventType_desc\",\n  taskName_asc = \"taskName_asc\",\n  taskName_desc = \"taskName_desc\",\n  stageName_asc = \"stageName_asc\",\n  stageName_desc = \"stageName_desc\",\n  stageType_asc = \"stageType_asc\",\n  stageType_desc = \"stageType_desc\",\n  waitingForJudgement_asc = \"waitingForJudgement_asc\",\n  waitingForJudgement_desc = \"waitingForJudgement_desc\"\n}\n\n/* Ordering Enum for SpinnakerStage */\nexport enum _SpinnakerStageOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  name_asc = \"name_asc\",\n  name_desc = \"name_desc\",\n  type_asc = \"type_asc\",\n  type_desc = \"type_desc\",\n  status_asc = \"status_asc\",\n  status_desc = \"status_desc\",\n  startTime_asc = \"startTime_asc\",\n  startTime_desc = \"startTime_desc\",\n  endTime_asc = \"endTime_asc\",\n  endTime_desc = \"endTime_desc\",\n  refId_asc = \"refId_asc\",\n  refId_desc = \"refId_desc\"\n}\n\n/* Ordering Enum for Workflow */\nexport enum _WorkflowOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  name_asc = \"name_asc\",\n  name_desc = \"name_desc\",\n  workflowId_asc = \"workflowId_asc\",\n  workflowId_desc = \"workflowId_desc\",\n  provider_asc = \"provider_asc\",\n  provider_desc = \"provider_desc\",\n  config_asc = \"config_asc\",\n  config_desc = \"config_desc\"\n}\n\n/* Enum for StatusState */\nexport enum StatusState {\n  pending = \"pending\",\n  success = \"success\",\n  error = \"error\",\n  failure = \"failure\"\n}\n\n/* Ordering Enum for Status */\nexport enum _StatusOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  state_asc = \"state_asc\",\n  state_desc = \"state_desc\",\n  description_asc = \"description_asc\",\n  description_desc = \"description_desc\",\n  targetUrl_asc = \"targetUrl_asc\",\n  targetUrl_desc = \"targetUrl_desc\",\n  context_asc = \"context_asc\",\n  context_desc = \"context_desc\",\n  timestamp_asc = \"timestamp_asc\",\n  timestamp_desc = \"timestamp_desc\"\n}\n\n/* Ordering Enum for HerokuApp */\nexport enum _HerokuAppOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  app_asc = \"app_asc\",\n  app_desc = \"app_desc\",\n  url_asc = \"url_asc\",\n  url_desc = \"url_desc\",\n  timestamp_asc = \"timestamp_asc\",\n  timestamp_desc = \"timestamp_desc\",\n  user_asc = \"user_asc\",\n  user_desc = \"user_desc\",\n  appId_asc = \"appId_asc\",\n  appId_desc = \"appId_desc\",\n  release_asc = \"release_asc\",\n  release_desc = \"release_desc\"\n}\n\n/* Ordering Enum for Application */\nexport enum _ApplicationOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  state_asc = \"state_asc\",\n  state_desc = \"state_desc\",\n  host_asc = \"host_asc\",\n  host_desc = \"host_desc\",\n  timestamp_asc = \"timestamp_asc\",\n  timestamp_desc = \"timestamp_desc\",\n  domain_asc = \"domain_asc\",\n  domain_desc = \"domain_desc\",\n  data_asc = \"data_asc\",\n  data_desc = \"data_desc\"\n}\n\n/* Ordering Enum for Fingerprint */\nexport enum _FingerprintOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  name_asc = \"name_asc\",\n  name_desc = \"name_desc\",\n  sha_asc = \"sha_asc\",\n  sha_desc = \"sha_desc\",\n  data_asc = \"data_asc\",\n  data_desc = \"data_desc\"\n}\n\n/* Ordering Enum for ParentImpact */\nexport enum _ParentImpactOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  url_asc = \"url_asc\",\n  url_desc = \"url_desc\",\n  data_asc = \"data_asc\",\n  data_desc = \"data_desc\"\n}\n\n/* Ordering Enum for Branch */\nexport enum _BranchOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  name_asc = \"name_asc\",\n  name_desc = \"name_desc\",\n  timestamp_asc = \"timestamp_asc\",\n  timestamp_desc = \"timestamp_desc\"\n}\n\n/* Enum for ReviewState */\nexport enum ReviewState {\n  requested = \"requested\",\n  pending = \"pending\",\n  approved = \"approved\",\n  commented = \"commented\",\n  changes_requested = \"changes_requested\"\n}\n\n/* Ordering Enum for Review */\nexport enum _ReviewOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  gitHubId_asc = \"gitHubId_asc\",\n  gitHubId_desc = \"gitHubId_desc\",\n  body_asc = \"body_asc\",\n  body_desc = \"body_desc\",\n  state_asc = \"state_asc\",\n  state_desc = \"state_desc\",\n  submittedAt_asc = \"submittedAt_asc\",\n  submittedAt_desc = \"submittedAt_desc\",\n  htmlUrl_asc = \"htmlUrl_asc\",\n  htmlUrl_desc = \"htmlUrl_desc\"\n}\n\n/* Enum for CommentCommentType */\nexport enum CommentCommentType {\n  review = \"review\",\n  pullRequest = \"pullRequest\",\n  issue = \"issue\"\n}\n\n/* Ordering Enum for Comment */\nexport enum _CommentOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  body_asc = \"body_asc\",\n  body_desc = \"body_desc\",\n  timestamp_asc = \"timestamp_asc\",\n  timestamp_desc = \"timestamp_desc\",\n  gitHubId_asc = \"gitHubId_asc\",\n  gitHubId_desc = \"gitHubId_desc\",\n  path_asc = \"path_asc\",\n  path_desc = \"path_desc\",\n  position_asc = \"position_asc\",\n  position_desc = \"position_desc\",\n  htmlUrl_asc = \"htmlUrl_asc\",\n  htmlUrl_desc = \"htmlUrl_desc\",\n  commentType_asc = \"commentType_asc\",\n  commentType_desc = \"commentType_desc\"\n}\n\n/* Ordering Enum for DeletedBranch */\nexport enum _DeletedBranchOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  name_asc = \"name_asc\",\n  name_desc = \"name_desc\",\n  timestamp_asc = \"timestamp_asc\",\n  timestamp_desc = \"timestamp_desc\"\n}\n\n/* Ordering Enum for ImageLinked */\nexport enum _ImageLinkedOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  timestamp_asc = \"timestamp_asc\",\n  timestamp_desc = \"timestamp_desc\"\n}\n\n/* Ordering Enum for PushImpact */\nexport enum _PushImpactOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  url_asc = \"url_asc\",\n  url_desc = \"url_desc\",\n  data_asc = \"data_asc\",\n  data_desc = \"data_desc\"\n}\n\n/* Ordering Enum for PullRequestImpact */\nexport enum _PullRequestImpactOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\",\n  url_asc = \"url_asc\",\n  url_desc = \"url_desc\",\n  data_asc = \"data_asc\",\n  data_desc = \"data_desc\"\n}\n\n/* Ordering Enum for UserJoinedChannel */\nexport enum _UserJoinedChannelOrdering {\n  atmTeamId_asc = \"atmTeamId_asc\",\n  atmTeamId_desc = \"atmTeamId_desc\",\n  id_asc = \"id_asc\",\n  id_desc = \"id_desc\"\n}\n\n/* asc or desc ordering. Must be used with orderBy */\nexport enum _Ordering {\n  desc = \"desc\",\n  asc = \"asc\"\n}\n\nexport namespace BuildUrlBySha {\n  export type Variables = {\n    sha: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n    Commit?: Commit[] | null;\n  };\n\n  export type Commit = {\n    __typename?: \"Commit\";\n    builds?: Builds[] | null;\n  };\n\n  export type Builds = {\n    __typename?: \"Build\";\n    status?: BuildStatus | null;\n    buildUrl?: string | null;\n    timestamp?: string | null;\n  };\n}\nexport namespace CommitForSdmGoal {\n  export type Variables = {\n    sha: string;\n    repo: string;\n    owner: string;\n    branch: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n    Commit?: Commit[] | null;\n  };\n\n  export type Commit = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    message?: string | null;\n    statuses?: Statuses[] | null;\n    repo?: Repo | null;\n    pushes?: Pushes[] | null;\n    image?: Image | null;\n  };\n\n  export type Statuses = {\n    __typename?: \"Status\";\n    context?: string | null;\n    description?: string | null;\n    state?: StatusState | null;\n    targetUrl?: string | null;\n  };\n\n  export type Repo = CoreRepoFieldsAndChannels.Fragment;\n\n  export type Pushes = PushFields.Fragment;\n\n  export type Image = {\n    __typename?: \"DockerImage\";\n    image?: string | null;\n    imageName?: string | null;\n  };\n}\nexport namespace LastEndpoint {\n  export type Variables = {\n    name: string;\n    owner: string;\n    branch: string;\n    statusContext: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n    Repo?: Repo[] | null;\n  };\n\n  export type Repo = {\n    __typename?: \"Repo\";\n    branches?: Branches[] | null;\n  };\n\n  export type Branches = {\n    __typename?: \"Branch\";\n    commit?: Commit | null;\n  };\n\n  export type Commit = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    statuses?: Statuses[] | null;\n    pushes?: Pushes[] | null;\n  };\n\n  export type Statuses = {\n    __typename?: \"Status\";\n    context?: string | null;\n    description?: string | null;\n    state?: StatusState | null;\n    targetUrl?: string | null;\n  };\n\n  export type Pushes = {\n    __typename?: \"Push\";\n    id?: string | null;\n  };\n}\nexport namespace PersonByChatId {\n  export type Variables = {\n    screenName: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n    ChatId?: ChatId[] | null;\n  };\n\n  export type ChatId = {\n    __typename?: \"ChatId\";\n    userId?: string | null;\n    screenName?: string | null;\n    person?: Person | null;\n  };\n\n  export type Person = PersonFields.Fragment;\n}\nexport namespace PullRequestForSha {\n  export type Variables = {\n    owner: string;\n    repo: string;\n    sha: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n    PullRequest?: PullRequest[] | null;\n  };\n\n  export type PullRequest = {\n    __typename?: \"PullRequest\";\n    name?: string | null;\n    title?: string | null;\n    body?: string | null;\n    id?: string | null;\n    number?: number | null;\n    author?: Author | null;\n    repo?: Repo | null;\n    head?: Head | null;\n    base?: Base | null;\n  };\n\n  export type Author = {\n    __typename?: \"GitHubId\";\n    person?: Person | null;\n  };\n\n  export type Person = {\n    __typename?: \"Person\";\n    chatId?: ChatId | null;\n  };\n\n  export type ChatId = {\n    __typename?: \"ChatId\";\n    screenName?: string | null;\n  };\n\n  export type Repo = CoreRepoFieldsAndChannels.Fragment;\n\n  export type Head = {\n    __typename?: \"Commit\";\n    message?: string | null;\n  };\n\n  export type Base = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    message?: string | null;\n  };\n}\nexport namespace PushForCommit {\n  export type Variables = {\n    sha: string;\n    repo: string;\n    owner: string;\n    providerId: string;\n    branch: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n    Commit?: Commit[] | null;\n  };\n\n  export type Commit = {\n    __typename?: \"Commit\";\n    pushes?: Pushes[] | null;\n    repo?: Repo | null;\n  };\n\n  export type Pushes = PushFields.Fragment;\n\n  export type Repo = {\n    __typename?: \"Repo\";\n    org?: Org | null;\n  };\n\n  export type Org = {\n    __typename?: \"Org\";\n    provider?: Provider | null;\n  };\n\n  export type Provider = {\n    __typename?: \"GitHubProvider\";\n    providerId?: string | null;\n  };\n}\nexport namespace RepoBranchTips {\n  export type Variables = {\n    name: string;\n    owner: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n    Repo?: Repo[] | null;\n  };\n\n  export type Repo = {\n    __typename?: \"Repo\";\n    owner?: string | null;\n    org?: Org | null;\n    defaultBranch?: string | null;\n    branches?: Branches[] | null;\n  };\n\n  export type Org = {\n    __typename?: \"Org\";\n    provider?: Provider | null;\n  };\n\n  export type Provider = {\n    __typename?: \"GitHubProvider\";\n    providerId?: string | null;\n  };\n\n  export type Branches = {\n    __typename?: \"Branch\";\n    name?: string | null;\n    commit?: Commit | null;\n  };\n\n  export type Commit = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n  };\n}\nexport namespace ReposInTeam {\n  export type Variables = {\n    teamId: string;\n    offset: number;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n    ChatTeam?: ChatTeam[] | null;\n  };\n\n  export type ChatTeam = {\n    __typename?: \"ChatTeam\";\n    orgs?: Orgs[] | null;\n  };\n\n  export type Orgs = {\n    __typename?: \"Org\";\n    repo?: Repo[] | null;\n  };\n\n  export type Repo = CoreRepoFieldsAndChannels.Fragment;\n}\nexport namespace ScmProvider {\n  export type Variables = {\n    providerId: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n    SCMProvider?: ScmProvider[] | null;\n  };\n\n  export type ScmProvider = {\n    __typename?: \"SCMProvider\";\n    providerType?: ProviderType | null;\n    url?: string | null;\n    providerId?: string | null;\n    apiUrl?: string | null;\n  };\n}\nexport namespace SdmBuildIdentifierForRepo {\n  export type Variables = {\n    owner?: string[] | null;\n    name?: string[] | null;\n    providerId?: string[] | null;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n    SdmBuildIdentifier?: SdmBuildIdentifier[] | null;\n  };\n\n  export type SdmBuildIdentifier = {\n    __typename?: \"SdmBuildIdentifier\";\n    identifier?: string | null;\n    id?: string | null;\n    repo?: Repo | null;\n  };\n\n  export type Repo = {\n    __typename?: \"SdmBuildIdentifierRepository\";\n    name?: string | null;\n    owner?: string | null;\n    providerId?: string | null;\n  };\n}\nexport namespace SdmGoalById {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n    SdmGoal?: SdmGoal[] | null;\n  };\n\n  export type SdmGoal = SdmGoalFields.Fragment & SdmGoalRepo.Fragment;\n}\nexport namespace SdmGoalsForCommit {\n  export type Variables = {\n    sha: string;\n    branch?: string | null;\n    repo: string;\n    owner: string;\n    providerId: string;\n    qty: number;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n    SdmGoal?: SdmGoal[] | null;\n  };\n\n  export type SdmGoal = {\n    __typename?: \"SdmGoal\";\n    repo?: Repo | null;\n  } & SdmGoalFields.Fragment;\n\n  export type Repo = {\n    __typename?: \"SdmRepository\";\n    name?: string | null;\n    owner?: string | null;\n    providerId?: string | null;\n  };\n}\nexport namespace SdmVersionForCommit {\n  export type Variables = {\n    sha?: string[] | null;\n    branch?: string[] | null;\n    name?: string[] | null;\n    owner?: string[] | null;\n    providerId?: string[] | null;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n    SdmVersion?: SdmVersion[] | null;\n  };\n\n  export type SdmVersion = {\n    __typename?: \"SdmVersion\";\n    repo?: Repo | null;\n    version?: string | null;\n  };\n\n  export type Repo = {\n    __typename?: \"SdmVersionRepository\";\n    name?: string | null;\n    owner?: string | null;\n    providerId?: string | null;\n  };\n}\nexport namespace WhatIsRunning {\n  export type Variables = {\n    domain?: string | null;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n    Application?: Application[] | null;\n  };\n\n  export type Application = {\n    __typename?: \"Application\";\n    domain?: string | null;\n    commits?: Commits[] | null;\n  };\n\n  export type Commits = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    repo?: Repo | null;\n  };\n\n  export type Repo = {\n    __typename?: \"Repo\";\n    owner?: string | null;\n    name?: string | null;\n  };\n}\nexport namespace OnAnyCompletedSdmGoal {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    SdmGoal?: SdmGoal[] | null;\n  };\n\n  export type SdmGoal = SdmGoalFields.Fragment & SdmGoalRepo.Fragment;\n}\nexport namespace OnAnyFailedSdmGoal {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    SdmGoal?: SdmGoal[] | null;\n  };\n\n  export type SdmGoal = SdmGoalFields.Fragment & SdmGoalRepo.Fragment;\n}\nexport namespace OnAnyGoal {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    SdmGoal?: SdmGoal[] | null;\n  };\n\n  export type SdmGoal = SdmGoalFields.Fragment & SdmGoalRepo.Fragment;\n}\nexport namespace OnAnyPendingStatus {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    Status?: Status[] | null;\n  };\n\n  export type Status = StatusForExecuteGoal.Fragment;\n}\nexport namespace OnAnyRequestedSdmGoal {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    SdmGoal?: SdmGoal[] | null;\n  };\n\n  export type SdmGoal = {\n    __typename?: \"SdmGoal\";\n    id?: string | null;\n  } & SdmGoalFields.Fragment &\n    SdmGoalRepo.Fragment;\n}\nexport namespace OnAnySuccessfulSdmGoal {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    SdmGoal?: SdmGoal[] | null;\n  };\n\n  export type SdmGoal = SdmGoalFields.Fragment & SdmGoalRepo.Fragment;\n}\nexport namespace OnAnySuccessStatus {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    Status?: Status[] | null;\n  };\n\n  export type Status = StatusForExecuteGoal.Fragment;\n}\nexport namespace OnAParticularStatus {\n  export type Variables = {\n    context: string;\n  };\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    Status?: Status[] | null;\n  };\n\n  export type Status = {\n    __typename?: \"Status\";\n    commit?: Commit | null;\n    state?: StatusState | null;\n    targetUrl?: string | null;\n    context?: string | null;\n    description?: string | null;\n  };\n\n  export type Commit = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    message?: string | null;\n    statuses?: Statuses[] | null;\n    repo?: Repo | null;\n    pushes?: Pushes[] | null;\n    image?: Image | null;\n  };\n\n  export type Statuses = {\n    __typename?: \"Status\";\n    context?: string | null;\n    description?: string | null;\n    state?: StatusState | null;\n    targetUrl?: string | null;\n  };\n\n  export type Repo = CoreRepoFieldsAndChannels.Fragment;\n\n  export type Pushes = {\n    __typename?: \"Push\";\n    branch?: string | null;\n  };\n\n  export type Image = {\n    __typename?: \"DockerImage\";\n    image?: string | null;\n    imageName?: string | null;\n  };\n}\nexport namespace OnBuildComplete {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    Build?: Build[] | null;\n  };\n\n  export type Build = {\n    __typename?: \"Build\";\n    buildId?: string | null;\n    buildUrl?: string | null;\n    compareUrl?: string | null;\n    name?: string | null;\n    status?: BuildStatus | null;\n    jobId?: string | null;\n    startedAt?: string | null;\n    timestamp?: string | null;\n    push?: Push | null;\n    commit?: Commit | null;\n  };\n\n  export type Push = PushFields.Fragment;\n\n  export type Commit = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    message?: string | null;\n    timestamp?: string | null;\n    repo?: Repo | null;\n    statuses?: Statuses[] | null;\n  };\n\n  export type Repo = CoreRepoFieldsAndChannels.Fragment;\n\n  export type Statuses = {\n    __typename?: \"Status\";\n    context?: string | null;\n    description?: string | null;\n    state?: StatusState | null;\n    targetUrl?: string | null;\n  };\n}\nexport namespace OnBuildCompleteForDryRun {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    Build?: Build[] | null;\n  };\n\n  export type Build = {\n    __typename?: \"Build\";\n    buildId?: string | null;\n    buildUrl?: string | null;\n    compareUrl?: string | null;\n    name?: string | null;\n    status?: BuildStatus | null;\n    commit?: Commit | null;\n  };\n\n  export type Commit = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    message?: string | null;\n    repo?: Repo | null;\n    pushes?: Pushes[] | null;\n    statuses?: Statuses[] | null;\n  };\n\n  export type Repo = CoreRepoFieldsAndChannels.Fragment;\n\n  export type Pushes = {\n    __typename?: \"Push\";\n    branch?: string | null;\n  };\n\n  export type Statuses = {\n    __typename?: \"Status\";\n    context?: string | null;\n    description?: string | null;\n    state?: StatusState | null;\n    targetUrl?: string | null;\n  };\n}\nexport namespace OnChannelLink {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    ChannelLink?: ChannelLink[] | null;\n  };\n\n  export type ChannelLink = {\n    __typename?: \"ChannelLink\";\n    repo?: Repo | null;\n    channel?: Channel | null;\n  };\n\n  export type Repo = CoreRepoFieldsAndChannels.Fragment;\n\n  export type Channel = {\n    __typename?: \"ChatChannel\";\n    team?: Team | null;\n    name?: string | null;\n    id?: string | null;\n  };\n\n  export type Team = {\n    __typename?: \"ChatTeam\";\n    id?: string | null;\n  };\n}\nexport namespace OnClosedIssue {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    Issue?: Issue[] | null;\n  };\n\n  export type Issue = {\n    __typename?: \"Issue\";\n    number?: number | null;\n    title?: string | null;\n    body?: string | null;\n    openedBy?: OpenedBy | null;\n    closedBy?: ClosedBy | null;\n    createdAt?: string | null;\n    updatedAt?: string | null;\n    repo: Repo;\n    assignees?: Assignees[] | null;\n  };\n\n  export type OpenedBy = {\n    __typename?: \"GitHubId\";\n    login?: string | null;\n    person?: Person | null;\n  };\n\n  export type Person = PersonFields.Fragment;\n\n  export type ClosedBy = {\n    __typename?: \"GitHubId\";\n    login?: string | null;\n    person?: _Person | null;\n  };\n\n  export type _Person = PersonFields.Fragment;\n\n  export type Repo = CoreRepoFieldsAndChannels.Fragment;\n\n  export type Assignees = {\n    __typename?: \"GitHubId\";\n    login?: string | null;\n    person?: __Person | null;\n  };\n\n  export type __Person = PersonFields.Fragment;\n}\nexport namespace OnDeployToProductionFingerprint {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    Fingerprint?: Fingerprint[] | null;\n  };\n\n  export type Fingerprint = {\n    __typename?: \"Fingerprint\";\n    name?: string | null;\n    commit?: Commit | null;\n  };\n\n  export type Commit = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    message?: string | null;\n    author?: Author | null;\n    image?: Image | null;\n    statuses?: Statuses[] | null;\n    repo?: Repo | null;\n  };\n\n  export type Author = {\n    __typename?: \"GitHubId\";\n    person?: Person | null;\n  };\n\n  export type Person = {\n    __typename?: \"Person\";\n    id?: string | null;\n    name?: string | null;\n    chatId?: ChatId | null;\n  };\n\n  export type ChatId = {\n    __typename?: \"ChatId\";\n    screenName?: string | null;\n  };\n\n  export type Image = {\n    __typename?: \"DockerImage\";\n    imageName?: string | null;\n  };\n\n  export type Statuses = {\n    __typename?: \"Status\";\n    context?: string | null;\n    description?: string | null;\n    state?: StatusState | null;\n    targetUrl?: string | null;\n  };\n\n  export type Repo = CoreRepoFieldsAndChannels.Fragment;\n}\nexport namespace OnFailureStatus {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    Status?: Status[] | null;\n  };\n\n  export type Status = StatusForExecuteGoal.Fragment;\n}\nexport namespace OnFirstPushToRepo {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    Push?: Push[] | null;\n  };\n\n  export type Push = PushFields.Fragment;\n}\nexport namespace OnImageLinked {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    ImageLinked?: ImageLinked[] | null;\n  };\n\n  export type ImageLinked = {\n    __typename?: \"ImageLinked\";\n    commit?: Commit | null;\n    image?: Image | null;\n  };\n\n  export type Commit = {\n    __typename?: \"Commit\";\n    pushes?: Pushes[] | null;\n    sha?: string | null;\n    message?: string | null;\n    author?: Author | null;\n    repo?: Repo | null;\n    statuses?: Statuses[] | null;\n  };\n\n  export type Pushes = PushFields.Fragment;\n\n  export type Author = {\n    __typename?: \"GitHubId\";\n    person?: Person | null;\n  };\n\n  export type Person = {\n    __typename?: \"Person\";\n    id?: string | null;\n    name?: string | null;\n    chatId?: ChatId | null;\n  };\n\n  export type ChatId = {\n    __typename?: \"ChatId\";\n    screenName?: string | null;\n  };\n\n  export type Repo = CoreRepoFieldsAndChannels.Fragment;\n\n  export type Statuses = {\n    __typename?: \"Status\";\n    context?: string | null;\n    description?: string | null;\n    state?: StatusState | null;\n  };\n\n  export type Image = {\n    __typename?: \"DockerImage\";\n    image?: string | null;\n    imageName?: string | null;\n  };\n}\nexport namespace OnIssueAction {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    Issue?: Issue[] | null;\n  };\n\n  export type Issue = {\n    __typename?: \"Issue\";\n    number?: number | null;\n    title?: string | null;\n    state?: IssueState | null;\n    body?: string | null;\n    openedBy?: OpenedBy | null;\n    createdAt?: string | null;\n    updatedAt?: string | null;\n    repo: Repo;\n    assignees?: Assignees[] | null;\n  };\n\n  export type OpenedBy = {\n    __typename?: \"GitHubId\";\n    login?: string | null;\n    person?: Person | null;\n  };\n\n  export type Person = PersonFields.Fragment;\n\n  export type Repo = CoreRepoFieldsAndChannels.Fragment;\n\n  export type Assignees = {\n    __typename?: \"GitHubId\";\n    login?: string | null;\n    person?: _Person | null;\n  };\n\n  export type _Person = PersonFields.Fragment;\n}\nexport namespace OnPendingStatus {\n  export type Variables = {\n    context: string;\n  };\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    Status?: Status[] | null;\n  };\n\n  export type Status = StatusForExecuteGoal.Fragment;\n}\nexport namespace OnPullRequest {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    PullRequest?: PullRequest[] | null;\n  };\n\n  export type PullRequest = {\n    __typename?: \"PullRequest\";\n    title?: string | null;\n    number?: number | null;\n    body?: string | null;\n    id?: string | null;\n    base?: Base | null;\n    head?: Head | null;\n    repo?: _Repo | null;\n  };\n\n  export type Base = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    message?: string | null;\n  };\n\n  export type Head = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    message?: string | null;\n    pushes?: Pushes[] | null;\n  };\n\n  export type Pushes = {\n    __typename?: \"Push\";\n    before?: Before | null;\n    commits?: Commits[] | null;\n    branch?: string | null;\n    id?: string | null;\n    repo?: Repo | null;\n  };\n\n  export type Before = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    message?: string | null;\n  };\n\n  export type Commits = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    message?: string | null;\n  };\n\n  export type Repo = CoreRepoFieldsAndChannels.Fragment;\n\n  export type _Repo = CoreRepoFieldsAndChannels.Fragment;\n}\nexport namespace OnPush {\n  export type Variables = {\n    branch: string;\n  };\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    Push?: Push[] | null;\n  };\n\n  export type Push = {\n    __typename?: \"Push\";\n    id?: string | null;\n    repo?: Repo | null;\n    commits?: Commits[] | null;\n  };\n\n  export type Repo = CoreRepoFieldsAndChannels.Fragment;\n\n  export type Commits = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    message?: string | null;\n    author?: Author | null;\n  };\n\n  export type Author = {\n    __typename?: \"GitHubId\";\n    _id?: Long | null;\n    login?: string | null;\n    name?: string | null;\n    person?: Person | null;\n  };\n\n  export type Person = {\n    __typename?: \"Person\";\n    chatId?: ChatId | null;\n  };\n\n  export type ChatId = {\n    __typename?: \"ChatId\";\n    screenName?: string | null;\n  };\n}\nexport namespace OnPushImpact {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    PushImpact?: PushImpact[] | null;\n  };\n\n  export type PushImpact = {\n    __typename?: \"PushImpact\";\n    id?: string | null;\n    data?: string | null;\n    push?: Push | null;\n  };\n\n  export type Push = {\n    __typename?: \"Push\";\n    before?: Before | null;\n    after?: After | null;\n  };\n\n  export type Before = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    fingerprints?: Fingerprints[] | null;\n  };\n\n  export type Fingerprints = {\n    __typename?: \"Fingerprint\";\n    sha?: string | null;\n    name?: string | null;\n    data?: string | null;\n  };\n\n  export type After = {\n    __typename?: \"Commit\";\n    author?: Author | null;\n    sha?: string | null;\n    fingerprints?: _Fingerprints[] | null;\n    repo?: Repo | null;\n  };\n\n  export type Author = {\n    __typename?: \"GitHubId\";\n    login?: string | null;\n    emails?: Emails[] | null;\n  };\n\n  export type Emails = {\n    __typename?: \"Email\";\n    address?: string | null;\n  };\n\n  export type _Fingerprints = {\n    __typename?: \"Fingerprint\";\n    sha?: string | null;\n    name?: string | null;\n    data?: string | null;\n  };\n\n  export type Repo = CoreRepoFieldsAndChannels.Fragment;\n}\nexport namespace OnPushToAnyBranch {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    Push?: Push[] | null;\n  };\n\n  export type Push = PushFields.Fragment;\n}\nexport namespace OnPushWithBefore {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    Push?: Push[] | null;\n  };\n\n  export type Push = {\n    __typename?: \"Push\";\n    id?: string | null;\n    branch?: string | null;\n    before?: Before | null;\n    after?: After | null;\n    repo?: Repo | null;\n  };\n\n  export type Before = {\n    __typename?: \"Commit\";\n    message?: string | null;\n    sha?: string | null;\n    statuses?: Statuses[] | null;\n  };\n\n  export type Statuses = {\n    __typename?: \"Status\";\n    context?: string | null;\n    state?: StatusState | null;\n    description?: string | null;\n  };\n\n  export type After = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    message?: string | null;\n  };\n\n  export type Repo = CoreRepoFieldsAndChannels.Fragment;\n}\nexport namespace OnRepoCreation {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    Repo?: Repo[] | null;\n  };\n\n  export type Repo = {\n    __typename?: \"Repo\";\n    owner?: string | null;\n    name?: string | null;\n    id?: string | null;\n  };\n}\nexport namespace OnRepoOnboarded {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    RepoOnboarded?: RepoOnboarded[] | null;\n  };\n\n  export type RepoOnboarded = {\n    __typename?: \"RepoOnboarded\";\n    repo: Repo;\n  };\n\n  export type Repo = CoreRepoFieldsAndChannels.Fragment;\n}\nexport namespace OnRequestedSdmGoal {\n  export type Variables = {\n    goalName: string;\n    environment: string;\n  };\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    SdmGoal?: SdmGoal[] | null;\n  };\n\n  export type SdmGoal = SdmGoalFields.Fragment & SdmGoalRepo.Fragment;\n}\nexport namespace OnSuccessStatus {\n  export type Variables = {\n    context: string;\n  };\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    Status?: Status[] | null;\n  };\n\n  export type Status = {\n    __typename?: \"Status\";\n    commit?: Commit | null;\n    state?: StatusState | null;\n    targetUrl?: string | null;\n    context?: string | null;\n    description?: string | null;\n  };\n\n  export type Commit = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    message?: string | null;\n    statuses?: Statuses[] | null;\n    repo?: Repo | null;\n    pushes?: Pushes[] | null;\n  };\n\n  export type Statuses = {\n    __typename?: \"Status\";\n    context?: string | null;\n    description?: string | null;\n    state?: StatusState | null;\n  };\n\n  export type Repo = CoreRepoFieldsAndChannels.Fragment;\n\n  export type Pushes = {\n    __typename?: \"Push\";\n    branch?: string | null;\n  };\n}\nexport namespace OnTag {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    Tag?: Tag[] | null;\n  };\n\n  export type Tag = {\n    __typename?: \"Tag\";\n    id?: string | null;\n    name?: string | null;\n    description?: string | null;\n    timestamp?: string | null;\n    release?: Release | null;\n    commit?: Commit | null;\n  };\n\n  export type Release = {\n    __typename?: \"Release\";\n    name?: string | null;\n    id?: string | null;\n    timestamp?: string | null;\n  };\n\n  export type Commit = {\n    __typename?: \"Commit\";\n    repo?: Repo | null;\n  };\n\n  export type Repo = CoreRepoFieldsAndChannels.Fragment;\n}\nexport namespace OnUserJoiningChannel {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n    UserJoinedChannel?: UserJoinedChannel[] | null;\n  };\n\n  export type UserJoinedChannel = {\n    __typename?: \"UserJoinedChannel\";\n    user?: User | null;\n    channel?: Channel | null;\n  };\n\n  export type User = {\n    __typename?: \"ChatId\";\n    screenName?: string | null;\n    person?: Person | null;\n  };\n\n  export type Person = PersonFields.Fragment;\n\n  export type Channel = {\n    __typename?: \"ChatChannel\";\n    name?: string | null;\n    repos?: Repos[] | null;\n  };\n\n  export type Repos = CoreRepoFieldsAndChannels.Fragment;\n}\n\nexport namespace CoreCommitFields {\n  export type Fragment = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    message?: string | null;\n    timestamp?: string | null;\n    committer?: Committer | null;\n  };\n\n  export type Committer = {\n    __typename?: \"GitHubId\";\n    person?: Person | null;\n  };\n\n  export type Person = {\n    __typename?: \"Person\";\n    chatId?: ChatId | null;\n  };\n\n  export type ChatId = {\n    __typename?: \"ChatId\";\n    screenName?: string | null;\n  };\n}\n\nexport namespace CoreRepoFieldsAndChannels {\n  export type Fragment = {\n    __typename?: \"Repo\";\n    owner?: string | null;\n    name?: string | null;\n    org?: Org | null;\n    channels?: Channels[] | null;\n    defaultBranch?: string | null;\n  };\n\n  export type Org = {\n    __typename?: \"Org\";\n    owner?: string | null;\n    ownerType?: OwnerType | null;\n    provider?: Provider | null;\n  };\n\n  export type Provider = {\n    __typename?: \"GitHubProvider\";\n    providerId?: string | null;\n    providerType?: ProviderType | null;\n    apiUrl?: string | null;\n    url?: string | null;\n  };\n\n  export type Channels = {\n    __typename?: \"ChatChannel\";\n    team?: Team | null;\n    name?: string | null;\n    id?: string | null;\n  };\n\n  export type Team = {\n    __typename?: \"ChatTeam\";\n    id?: string | null;\n  };\n}\n\nexport namespace PersonFields {\n  export type Fragment = {\n    __typename?: \"Person\";\n    forename?: string | null;\n    surname?: string | null;\n    name?: string | null;\n    emails?: Emails[] | null;\n    gitHubId?: GitHubId | null;\n    chatId?: ChatId | null;\n  };\n\n  export type Emails = {\n    __typename?: \"Email\";\n    address?: string | null;\n  };\n\n  export type GitHubId = {\n    __typename?: \"GitHubId\";\n    login?: string | null;\n  };\n\n  export type ChatId = {\n    __typename?: \"ChatId\";\n    screenName?: string | null;\n  };\n}\n\nexport namespace PushFields {\n  export type Fragment = {\n    __typename?: \"Push\";\n    id?: string | null;\n    branch?: string | null;\n    before?: Before | null;\n    after?: After | null;\n    repo?: Repo | null;\n    commits?: Commits[] | null;\n  };\n\n  export type Before = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    message?: string | null;\n    committer?: Committer | null;\n  };\n\n  export type Committer = {\n    __typename?: \"GitHubId\";\n    login?: string | null;\n    person?: Person | null;\n  };\n\n  export type Person = PersonFields.Fragment;\n\n  export type After = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    message?: string | null;\n    committer?: _Committer | null;\n  };\n\n  export type _Committer = {\n    __typename?: \"GitHubId\";\n    login?: string | null;\n    person?: _Person | null;\n  };\n\n  export type _Person = PersonFields.Fragment;\n\n  export type Repo = CoreRepoFieldsAndChannels.Fragment;\n\n  export type Commits = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    timestamp?: string | null;\n    message?: string | null;\n    author?: Author | null;\n  };\n\n  export type Author = {\n    __typename?: \"GitHubId\";\n    _id?: Long | null;\n    login?: string | null;\n    name?: string | null;\n  };\n}\n\nexport namespace SdmGoalFields {\n  export type Fragment = {\n    __typename?: \"SdmGoal\";\n    environment?: string | null;\n    uniqueName?: string | null;\n    name?: string | null;\n    sha?: string | null;\n    branch?: string | null;\n    fulfillment?: Fulfillment | null;\n    description?: string | null;\n    url?: string | null;\n    state?: string | null;\n    externalKey?: string | null;\n    goalSet?: string | null;\n    goalSetId?: string | null;\n    ts?: number | null;\n    error?: string | null;\n    retryFeasible?: boolean | null;\n    preConditions?: PreConditions[] | null;\n    approval?: Approval | null;\n    provenance?: Provenance[] | null;\n    data?: string | null;\n  };\n\n  export type Fulfillment = {\n    __typename?: \"SdmGoalFulfillment\";\n    method?: string | null;\n    name?: string | null;\n  };\n\n  export type PreConditions = {\n    __typename?: \"SdmCondition\";\n    environment?: string | null;\n    name?: string | null;\n  };\n\n  export type Approval = {\n    __typename?: \"SdmProvenance\";\n    correlationId?: string | null;\n    registration?: string | null;\n    name?: string | null;\n    version?: string | null;\n    ts?: number | null;\n    userId?: string | null;\n    channelId?: string | null;\n  };\n\n  export type Provenance = {\n    __typename?: \"SdmProvenance\";\n    correlationId?: string | null;\n    registration?: string | null;\n    name?: string | null;\n    version?: string | null;\n    ts?: number | null;\n    userId?: string | null;\n    channelId?: string | null;\n  };\n}\n\nexport namespace SdmGoalRepo {\n  export type Fragment = {\n    __typename?: \"SdmGoal\";\n    repo?: Repo | null;\n  };\n\n  export type Repo = {\n    __typename?: \"SdmRepository\";\n    name?: string | null;\n    owner?: string | null;\n    providerId?: string | null;\n  };\n}\n\nexport namespace StatusForExecuteGoal {\n  export type Fragment = {\n    __typename?: \"Status\";\n    commit?: Commit | null;\n    state?: StatusState | null;\n    targetUrl?: string | null;\n    context?: string | null;\n    description?: string | null;\n  };\n\n  export type Commit = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    message?: string | null;\n    statuses?: Statuses[] | null;\n    repo?: Repo | null;\n    pushes?: Pushes[] | null;\n    image?: Image | null;\n  };\n\n  export type Statuses = {\n    __typename?: \"Status\";\n    context?: string | null;\n    description?: string | null;\n    state?: StatusState | null;\n    targetUrl?: string | null;\n  };\n\n  export type Repo = CoreRepoFieldsAndChannels.Fragment;\n\n  export type Pushes = {\n    __typename?: \"Push\";\n    before?: Before | null;\n    commits?: Commits[] | null;\n    branch?: string | null;\n    id?: string | null;\n    repo?: _Repo | null;\n  };\n\n  export type Before = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    message?: string | null;\n  };\n\n  export type Commits = {\n    __typename?: \"Commit\";\n    sha?: string | null;\n    message?: string | null;\n  };\n\n  export type _Repo = CoreRepoFieldsAndChannels.Fragment;\n\n  export type Image = {\n    __typename?: \"DockerImage\";\n    image?: string | null;\n    imageName?: string | null;\n  };\n}\n"]}