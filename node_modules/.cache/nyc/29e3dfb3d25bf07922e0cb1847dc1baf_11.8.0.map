{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/handlers/events/delivery/review/checkstyle/checkstyleReportExtractorTest.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/handlers/events/delivery/review/checkstyle/checkstyleReportExtractorTest.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;AAEH,uCAAuC;AAEvC,sIAAiH;AAEjH,QAAQ,CAAC,2BAA2B,EAAE,GAAG,EAAE;IAEvC,EAAE,CAAC,2BAA2B,EAAE,GAAS,EAAE;QACvC,MAAM,MAAM,GAAG,MAAM,mCAAO,CAAC,kBAAU,CAAC,CAAC;QACzC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACjB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QACrC,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC7B,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,kDAAkD,CAAC,CAAC;QAC5E,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,qBAAqB,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,sBAAsB,CAAC,CAAC,CAAC;IAC3E,CAAC,CAAA,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC;AAEH,oBAAoB;AAEP,QAAA,UAAU,GAAG;;;;;;;;;;;CAWzB,CAAC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assert from \"power-assert\";\n\nimport { extract } from \"../../../../../../src/common/delivery/code/review/checkstyle/checkstyleReportExtractor\";\n\ndescribe(\"checkstyleReportExtractor\", () => {\n\n    it(\"should parse valid output\", async () => {\n        const report = await extract(xml2valid1);\n        assert(!!report);\n        assert.equal(report.files.length, 2);\n        const file = report.files[0];\n        assert.equal(file.name, \"/Users/rodjohnson/tools/checkstyle-8.8/Test.java\");\n        assert.equal(file.errors.length, 2);\n        file.errors.forEach(f => assert(!!f.message, \"Message must be set\"));\n        file.errors.forEach(f => assert(!!f.severity, \"Severity must be set\"));\n    });\n\n});\n\n/* tslint:disable */\n\nexport const xml2valid1 = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<checkstyle version=\"8.8\">\n<file name=\"/Users/rodjohnson/tools/checkstyle-8.8/Test.java\">\n<error line=\"0\" severity=\"error\" message=\"Missing package-info.java file.\" source=\"com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck\"/>\n<error line=\"1\" severity=\"error\" message=\"Missing a Javadoc comment.\" source=\"com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck\"/>\n</file>\n<file name=\"/Users/rodjohnson/tools/checkstyle-8.8/src/main/java/thing/Test2.java\">\n<error line=\"0\" severity=\"error\" message=\"Missing package-info.java file.\" source=\"com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck\"/>\n<error line=\"1\" severity=\"error\" message=\"Missing a Javadoc comment.\" source=\"com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck\"/>\n</file>\n</checkstyle>\n`;\n"]}