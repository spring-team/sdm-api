{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/blueprint/dsl/allOfTest.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/blueprint/dsl/allOfTest.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;AAEH,uCAAuC;AACvC,4DAAyD;AAEzD,yDAA8C;AAE9C,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE;IAEnB,EAAE,CAAC,qBAAqB,EAAE,GAAS,EAAE;QACjC,MAAM,IAAI,GAAG,aAAK,CAAC,IAAI,CAAC,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,2BAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE,GAAS,EAAE;QAC7C,MAAM,IAAI,GAAG,aAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;QAC/B,MAAM,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,2BAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE,GAAS,EAAE;QACtD,MAAM,IAAI,GAAG,aAAK,CAAC,GAAS,EAAE,gDAAC,OAAA,IAAI,CAAA,GAAA,CAAC,CAAC;QACrC,MAAM,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,2BAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,wDAAwD,EAAE,GAAS,EAAE;QACpE,MAAM,IAAI,GAAG,aAAK,CAAC,GAAS,EAAE,gDAAC,OAAA,IAAI,CAAA,GAAA,EAAE,KAAK,CAAC,CAAC;QAC5C,MAAM,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,2BAAQ,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;IACxD,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,kEAAkE,EAAE,GAAS,EAAE;QAC9E,MAAM,IAAI,GAAG,aAAK,CAAyB,GAAS,EAAE,gDAAC,OAAA,IAAI,CAAA,GAAA,EAAE,CAAM,EAAE,EAAC,EAAE,gDAAC,OAAA,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA,GAAA,CAAC,CAAC;QACnG,MAAM,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,2BAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC,CAAA,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assert from \"power-assert\";\nimport { allOf } from \"../../../src/blueprint/dsl/allOf\";\nimport { PushListenerInvocation } from \"../../../src/common/listener/PushListener\";\nimport { fakePush } from \"./decisionTreeTest\";\n\ndescribe(\"allOf\", () => {\n\n    it(\"should satisfy true\", async () => {\n        const test = allOf(true);\n        assert.equal(await test.mapping(fakePush()), true);\n    });\n\n    it(\"should satisfy function => true\", async () => {\n        const test = allOf(() => true);\n        assert.equal(await test.mapping(fakePush()), true);\n    });\n\n    it(\"should satisfy function => Promise(true)\", async () => {\n        const test = allOf(async () => true);\n        assert.equal(await test.mapping(fakePush()), true);\n    });\n\n    it(\"should not satisfy function => Promise(true) and false\", async () => {\n        const test = allOf(async () => true, false);\n        assert.equal(await test.mapping(fakePush()), false);\n    });\n\n    it(\"should satisfy function => Promise(true) and correct calculation\", async () => {\n        const test = allOf<PushListenerInvocation>(async () => true, async pu => pu.push.id.includes(\"_\"));\n        assert.equal(await test.mapping(fakePush()), true);\n    });\n\n});\n"]}