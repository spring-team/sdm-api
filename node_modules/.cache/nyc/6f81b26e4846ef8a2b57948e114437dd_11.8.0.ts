"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_145r5nmkss=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/command/support/java/javaPatterns.ts",hash="4872ac900890bca49371c961729c860685652ede",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/command/support/java/javaPatterns.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:22,column:0},end:{line:28,column:2}},"2":{start:{line:29,column:0},end:{line:36,column:2}},"3":{start:{line:37,column:0},end:{line:46,column:2}},"4":{start:{line:47,column:0},end:{line:57,column:2}}},fnMap:{},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0},f:{},b:{},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_145r5nmkss.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});/**
 * Validation pattern for Java identifiers
 * @type {{description: string; pattern: RegExp; validInput: string; minLength: number; maxLength: number}}
 */cov_145r5nmkss.s[1]++;exports.JavaIdentifierRegExp={description:"valid Java identifier name",pattern:/^([$a-zA-Z_][\w$]*)*$/,validInput:"a valid Java identifier",minLength:1,maxLength:150};cov_145r5nmkss.s[2]++;exports.JavaPackageRegExp={displayName:"Root Package",description:"root package for your generated source, often this will be namespaced under the group ID",pattern:/^([a-zA-Z_][.\w]*)*$/,validInput:"valid java package name",minLength:0,maxLength:150};cov_145r5nmkss.s[3]++;exports.MavenArtifactIdRegExp={displayName:"Maven Artifact ID",description:"Maven artifact identifier, i.e., the name of the jar without the version."+" Defaults to the project name",pattern:/^([a-z][-a-z0-9_]*)$/,validInput:"a valid Maven artifact ID, which starts with a lower-case letter and contains only "+" alphanumeric, -, and _ characters. Defaults to project name",minLength:1,maxLength:50};cov_145r5nmkss.s[4]++;exports.MavenGroupIdRegExp={displayName:"Maven Group ID",description:"Maven group identifier, often used to provide a namespace for your project,"+" e.g., com.pany.team",pattern:/^([A-Za-z\-_][A-Za-z0-9_\-.]*)$/,validInput:"a valid Maven group ID, which starts with a letter, -, or _ and contains only"+" alphanumeric, -, and _ characters and may having leading period separated identifiers starting"+" with letters or underscores and containing only alphanumeric and _ characters.",minLength:1,maxLength:50};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2NvbW1vbi9jb21tYW5kL3N1cHBvcnQvamF2YS9qYXZhUGF0dGVybnMudHMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9yb2Rqb2huc29uL3Nmb3J6YW5kby1kZXYvaWRlYS1wcm9qZWN0cy9teS1mbG93L3NyYy9jb21tb24vY29tbWFuZC9zdXBwb3J0L2phdmEvamF2YVBhdHRlcm5zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7Ozs7R0FjRzs7QUFJSDs7O0dBR0c7QUFDVSxRQUFBLG9CQUFvQixHQUEyQjtJQUN4RCxXQUFXLEVBQUUsNEJBQTRCO0lBQ3pDLE9BQU8sRUFBRSx1QkFBdUI7SUFDaEMsVUFBVSxFQUFFLHlCQUF5QjtJQUNyQyxTQUFTLEVBQUUsQ0FBQztJQUNaLFNBQVMsRUFBRSxHQUFHO0NBQ2pCLENBQUM7QUFFVyxRQUFBLGlCQUFpQixHQUEyQjtJQUNyRCxXQUFXLEVBQUUsY0FBYztJQUMzQixXQUFXLEVBQUUsMEZBQTBGO0lBQ3ZHLE9BQU8sRUFBRSxzQkFBc0I7SUFDL0IsVUFBVSxFQUFFLHlCQUF5QjtJQUNyQyxTQUFTLEVBQUUsQ0FBQztJQUNaLFNBQVMsRUFBRSxHQUFHO0NBQ2pCLENBQUM7QUFFVyxRQUFBLHFCQUFxQixHQUEyQjtJQUN6RCxXQUFXLEVBQUUsbUJBQW1CO0lBQ2hDLFdBQVcsRUFBRSwyRUFBMkU7UUFDeEYsK0JBQStCO0lBQy9CLE9BQU8sRUFBRSxzQkFBc0I7SUFDL0IsVUFBVSxFQUFFLHFGQUFxRjtRQUNqRyw4REFBOEQ7SUFDOUQsU0FBUyxFQUFFLENBQUM7SUFDWixTQUFTLEVBQUUsRUFBRTtDQUNoQixDQUFDO0FBRVcsUUFBQSxrQkFBa0IsR0FBMkI7SUFDdEQsV0FBVyxFQUFFLGdCQUFnQjtJQUM3QixXQUFXLEVBQUUsNkVBQTZFO1FBQzFGLHNCQUFzQjtJQUN0QixPQUFPLEVBQUUsaUNBQWlDO0lBQzFDLFVBQVUsRUFBRSwrRUFBK0U7UUFDM0YsaUdBQWlHO1FBQ2pHLGlGQUFpRjtJQUNqRixTQUFTLEVBQUUsQ0FBQztJQUNaLFNBQVMsRUFBRSxFQUFFO0NBQ2hCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IMKpIDIwMTggQXRvbWlzdCwgSW5jLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBCYXNlUGFyYW1ldGVyIH0gZnJvbSBcIkBhdG9taXN0L2F1dG9tYXRpb24tY2xpZW50L2ludGVybmFsL21ldGFkYXRhL2RlY29yYXRvclN1cHBvcnRcIjtcblxuLyoqXG4gKiBWYWxpZGF0aW9uIHBhdHRlcm4gZm9yIEphdmEgaWRlbnRpZmllcnNcbiAqIEB0eXBlIHt7ZGVzY3JpcHRpb246IHN0cmluZzsgcGF0dGVybjogUmVnRXhwOyB2YWxpZElucHV0OiBzdHJpbmc7IG1pbkxlbmd0aDogbnVtYmVyOyBtYXhMZW5ndGg6IG51bWJlcn19XG4gKi9cbmV4cG9ydCBjb25zdCBKYXZhSWRlbnRpZmllclJlZ0V4cDogUGFydGlhbDxCYXNlUGFyYW1ldGVyPiA9IHtcbiAgICBkZXNjcmlwdGlvbjogXCJ2YWxpZCBKYXZhIGlkZW50aWZpZXIgbmFtZVwiLFxuICAgIHBhdHRlcm46IC9eKFskYS16QS1aX11bXFx3JF0qKSokLyxcbiAgICB2YWxpZElucHV0OiBcImEgdmFsaWQgSmF2YSBpZGVudGlmaWVyXCIsXG4gICAgbWluTGVuZ3RoOiAxLFxuICAgIG1heExlbmd0aDogMTUwLFxufTtcblxuZXhwb3J0IGNvbnN0IEphdmFQYWNrYWdlUmVnRXhwOiBQYXJ0aWFsPEJhc2VQYXJhbWV0ZXI+ID0ge1xuICAgIGRpc3BsYXlOYW1lOiBcIlJvb3QgUGFja2FnZVwiLFxuICAgIGRlc2NyaXB0aW9uOiBcInJvb3QgcGFja2FnZSBmb3IgeW91ciBnZW5lcmF0ZWQgc291cmNlLCBvZnRlbiB0aGlzIHdpbGwgYmUgbmFtZXNwYWNlZCB1bmRlciB0aGUgZ3JvdXAgSURcIixcbiAgICBwYXR0ZXJuOiAvXihbYS16QS1aX11bLlxcd10qKSokLyxcbiAgICB2YWxpZElucHV0OiBcInZhbGlkIGphdmEgcGFja2FnZSBuYW1lXCIsXG4gICAgbWluTGVuZ3RoOiAwLFxuICAgIG1heExlbmd0aDogMTUwLFxufTtcblxuZXhwb3J0IGNvbnN0IE1hdmVuQXJ0aWZhY3RJZFJlZ0V4cDogUGFydGlhbDxCYXNlUGFyYW1ldGVyPiA9IHtcbiAgICBkaXNwbGF5TmFtZTogXCJNYXZlbiBBcnRpZmFjdCBJRFwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIk1hdmVuIGFydGlmYWN0IGlkZW50aWZpZXIsIGkuZS4sIHRoZSBuYW1lIG9mIHRoZSBqYXIgd2l0aG91dCB0aGUgdmVyc2lvbi5cIiArXG4gICAgXCIgRGVmYXVsdHMgdG8gdGhlIHByb2plY3QgbmFtZVwiLFxuICAgIHBhdHRlcm46IC9eKFthLXpdWy1hLXowLTlfXSopJC8sXG4gICAgdmFsaWRJbnB1dDogXCJhIHZhbGlkIE1hdmVuIGFydGlmYWN0IElELCB3aGljaCBzdGFydHMgd2l0aCBhIGxvd2VyLWNhc2UgbGV0dGVyIGFuZCBjb250YWlucyBvbmx5IFwiICtcbiAgICBcIiBhbHBoYW51bWVyaWMsIC0sIGFuZCBfIGNoYXJhY3RlcnMuIERlZmF1bHRzIHRvIHByb2plY3QgbmFtZVwiLFxuICAgIG1pbkxlbmd0aDogMSxcbiAgICBtYXhMZW5ndGg6IDUwLFxufTtcblxuZXhwb3J0IGNvbnN0IE1hdmVuR3JvdXBJZFJlZ0V4cDogUGFydGlhbDxCYXNlUGFyYW1ldGVyPiA9IHtcbiAgICBkaXNwbGF5TmFtZTogXCJNYXZlbiBHcm91cCBJRFwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIk1hdmVuIGdyb3VwIGlkZW50aWZpZXIsIG9mdGVuIHVzZWQgdG8gcHJvdmlkZSBhIG5hbWVzcGFjZSBmb3IgeW91ciBwcm9qZWN0LFwiICtcbiAgICBcIiBlLmcuLCBjb20ucGFueS50ZWFtXCIsXG4gICAgcGF0dGVybjogL14oW0EtWmEtelxcLV9dW0EtWmEtejAtOV9cXC0uXSopJC8sXG4gICAgdmFsaWRJbnB1dDogXCJhIHZhbGlkIE1hdmVuIGdyb3VwIElELCB3aGljaCBzdGFydHMgd2l0aCBhIGxldHRlciwgLSwgb3IgXyBhbmQgY29udGFpbnMgb25seVwiICtcbiAgICBcIiBhbHBoYW51bWVyaWMsIC0sIGFuZCBfIGNoYXJhY3RlcnMgYW5kIG1heSBoYXZpbmcgbGVhZGluZyBwZXJpb2Qgc2VwYXJhdGVkIGlkZW50aWZpZXJzIHN0YXJ0aW5nXCIgK1xuICAgIFwiIHdpdGggbGV0dGVycyBvciB1bmRlcnNjb3JlcyBhbmQgY29udGFpbmluZyBvbmx5IGFscGhhbnVtZXJpYyBhbmQgXyBjaGFyYWN0ZXJzLlwiLFxuICAgIG1pbkxlbmd0aDogMSxcbiAgICBtYXhMZW5ndGg6IDUwLFxufTtcbiJdfQ==