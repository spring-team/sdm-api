"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_13aklaehi5=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/goals/common/npmGoals.ts",hash="060acdbcdea9bb494cbcbb3aec1d79164353cc3f",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/goals/common/npmGoals.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:25},end:{line:18,column:72}},"2":{start:{line:19,column:15},end:{line:19,column:33}},"3":{start:{line:20,column:16},end:{line:20,column:35}},"4":{start:{line:21,column:24},end:{line:21,column:66}},"5":{start:{line:22,column:22},end:{line:22,column:46}},"6":{start:{line:23,column:0},end:{line:32,column:31}},"7":{start:{line:33,column:0},end:{line:42,column:34}},"8":{start:{line:43,column:0},end:{line:50,column:40}},"9":{start:{line:51,column:0},end:{line:51,column:254}},"10":{start:{line:52,column:0},end:{line:52,column:220}},"11":{start:{line:53,column:0},end:{line:53,column:259}},"12":{start:{line:54,column:0},end:{line:54,column:361}}},fnMap:{},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},f:{},b:{},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_13aklaehi5.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const wellKnownGoals_1=(cov_13aklaehi5.s[1]++,require("../../../../blueprint/wellKnownGoals"));const Goal_1=(cov_13aklaehi5.s[2]++,require("../Goal"));const Goals_1=(cov_13aklaehi5.s[3]++,require("../Goals"));const gitHubContext_1=(cov_13aklaehi5.s[4]++,require("../support/github/gitHubContext"));const commonGoals_1=(cov_13aklaehi5.s[5]++,require("./commonGoals"));cov_13aklaehi5.s[6]++;exports.NpmPublishGoal=new Goal_1.GoalWithPrecondition({uniqueName:"Publish",environment:gitHubContext_1.IndependentOfEnvironment,orderedName:"2-publish",displayName:"publish",workingDescription:"Publishing...",completedDescription:"Published",failedDescription:"Published failed",isolated:true},wellKnownGoals_1.BuildGoal);cov_13aklaehi5.s[7]++;exports.StagingDockerDeploymentGoal=new Goal_1.GoalWithPrecondition({uniqueName:"DeployToTest",environment:gitHubContext_1.StagingEnvironment,orderedName:"3-deploy",displayName:"deploy to Test",completedDescription:"Deployed to Test",failedDescription:"Test deployment failure",waitingForApprovalDescription:"Promote to Prod",approvalRequired:true},commonGoals_1.DockerBuildGoal);cov_13aklaehi5.s[8]++;exports.ProductionDockerDeploymentGoal=new Goal_1.GoalWithPrecondition({uniqueName:"DeployToProduction",environment:gitHubContext_1.ProductionEnvironment,orderedName:"3-prod-deploy",displayName:"deploy to Prod",completedDescription:"Deployed to Prod",failedDescription:"Prod deployment failure"},exports.StagingDockerDeploymentGoal);cov_13aklaehi5.s[9]++;exports.NpmDeployGoals=new Goals_1.Goals("Node.js Deploy",wellKnownGoals_1.ReviewGoal,wellKnownGoals_1.AutofixGoal,wellKnownGoals_1.BuildGoal,wellKnownGoals_1.ArtifactGoal,commonGoals_1.StagingDeploymentGoal,wellKnownGoals_1.StagingEndpointGoal);cov_13aklaehi5.s[10]++;exports.NpmBuildGoals=new Goals_1.Goals("Node.js Build",commonGoals_1.VersionGoal,wellKnownGoals_1.ReviewGoal,wellKnownGoals_1.AutofixGoal,wellKnownGoals_1.BuildGoal,exports.NpmPublishGoal,commonGoals_1.TagGoal);cov_13aklaehi5.s[11]++;exports.NpmDockerGoals=new Goals_1.Goals("Node.js Docker Build",commonGoals_1.VersionGoal,wellKnownGoals_1.ReviewGoal,wellKnownGoals_1.AutofixGoal,wellKnownGoals_1.BuildGoal,exports.NpmPublishGoal,commonGoals_1.DockerBuildGoal,commonGoals_1.TagGoal);cov_13aklaehi5.s[12]++;exports.NpmKubernetesDeployGoals=new Goals_1.Goals("Node.js Kubernetes Build and Deploy",commonGoals_1.VersionGoal,wellKnownGoals_1.ReviewGoal,wellKnownGoals_1.AutofixGoal,wellKnownGoals_1.BuildGoal,exports.NpmPublishGoal,commonGoals_1.DockerBuildGoal,commonGoals_1.TagGoal,exports.StagingDockerDeploymentGoal,exports.ProductionDockerDeploymentGoal);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2NvbW1vbi9kZWxpdmVyeS9nb2Fscy9jb21tb24vbnBtR29hbHMudHMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9yb2Rqb2huc29uL3Nmb3J6YW5kby1kZXYvaWRlYS1wcm9qZWN0cy9teS1mbG93L3NyYy9jb21tb24vZGVsaXZlcnkvZ29hbHMvY29tbW9uL25wbUdvYWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7Ozs7R0FjRzs7QUFFSCx5RUFBNkg7QUFDN0gsa0NBQStDO0FBQy9DLG9DQUFpQztBQUNqQyxtRUFJeUM7QUFDekMsK0NBQTZGO0FBRWhGLFFBQUEsY0FBYyxHQUFHLElBQUksMkJBQW9CLENBQUM7SUFDbkQsVUFBVSxFQUFFLFNBQVM7SUFDckIsV0FBVyxFQUFFLHdDQUF3QjtJQUNyQyxXQUFXLEVBQUUsV0FBVztJQUN4QixXQUFXLEVBQUUsU0FBUztJQUN0QixrQkFBa0IsRUFBRSxlQUFlO0lBQ25DLG9CQUFvQixFQUFFLFdBQVc7SUFDakMsaUJBQWlCLEVBQUUsa0JBQWtCO0lBQ3JDLFFBQVEsRUFBRSxJQUFJO0NBQ2pCLEVBQUUsMEJBQVMsQ0FBQyxDQUFDO0FBRUQsUUFBQSwyQkFBMkIsR0FBRyxJQUFJLDJCQUFvQixDQUFDO0lBQ2hFLFVBQVUsRUFBRSxjQUFjO0lBQzFCLFdBQVcsRUFBRSxrQ0FBa0I7SUFDL0IsV0FBVyxFQUFFLFVBQVU7SUFDdkIsV0FBVyxFQUFFLGdCQUFnQjtJQUM3QixvQkFBb0IsRUFBRSxrQkFBa0I7SUFDeEMsaUJBQWlCLEVBQUUseUJBQXlCO0lBQzVDLDZCQUE2QixFQUFFLGlCQUFpQjtJQUNoRCxnQkFBZ0IsRUFBRSxJQUFJO0NBQ3pCLEVBQUUsNkJBQWUsQ0FBQyxDQUFDO0FBRVAsUUFBQSw4QkFBOEIsR0FBRyxJQUFJLDJCQUFvQixDQUFDO0lBQ25FLFVBQVUsRUFBRSxvQkFBb0I7SUFDaEMsV0FBVyxFQUFFLHFDQUFxQjtJQUNsQyxXQUFXLEVBQUUsZUFBZTtJQUM1QixXQUFXLEVBQUUsZ0JBQWdCO0lBQzdCLG9CQUFvQixFQUFFLGtCQUFrQjtJQUN4QyxpQkFBaUIsRUFBRSx5QkFBeUI7Q0FDL0MsRUFBRSxtQ0FBMkIsQ0FBQyxDQUFDO0FBRW5CLFFBQUEsY0FBYyxHQUFHLElBQUksYUFBSyxDQUNuQyxnQkFBZ0IsRUFDaEIsMkJBQVUsRUFDViw0QkFBVyxFQUNYLDBCQUFTLEVBQ1QsNkJBQVksRUFDWixtQ0FBcUIsRUFDckIsb0NBQW1CLENBQ3RCLENBQUM7QUFFVyxRQUFBLGFBQWEsR0FBRyxJQUFJLGFBQUssQ0FDbEMsZUFBZSxFQUNmLHlCQUFXLEVBQ1gsMkJBQVUsRUFDViw0QkFBVyxFQUNYLDBCQUFTLEVBQ1Qsc0JBQWMsRUFDZCxxQkFBTyxDQUNWLENBQUM7QUFFVyxRQUFBLGNBQWMsR0FBRyxJQUFJLGFBQUssQ0FDbkMsc0JBQXNCLEVBQ3RCLHlCQUFXLEVBQ1gsMkJBQVUsRUFDViw0QkFBVyxFQUNYLDBCQUFTLEVBQ1Qsc0JBQWMsRUFDZCw2QkFBZSxFQUNmLHFCQUFPLENBQ1YsQ0FBQztBQUVXLFFBQUEsd0JBQXdCLEdBQUcsSUFBSSxhQUFLLENBQzdDLHFDQUFxQyxFQUNyQyx5QkFBVyxFQUNYLDJCQUFVLEVBQ1YsNEJBQVcsRUFDWCwwQkFBUyxFQUNULHNCQUFjLEVBQ2QsNkJBQWUsRUFDZixxQkFBTyxFQUNQLG1DQUEyQixFQUMzQixzQ0FBOEIsQ0FDakMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgwqkgMjAxOCBBdG9taXN0LCBJbmMuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IEFydGlmYWN0R29hbCwgQXV0b2ZpeEdvYWwsIEJ1aWxkR29hbCwgUmV2aWV3R29hbCwgU3RhZ2luZ0VuZHBvaW50R29hbCB9IGZyb20gXCIuLi8uLi8uLi8uLi9ibHVlcHJpbnQvd2VsbEtub3duR29hbHNcIjtcbmltcG9ydCB7IEdvYWxXaXRoUHJlY29uZGl0aW9uIH0gZnJvbSBcIi4uL0dvYWxcIjtcbmltcG9ydCB7IEdvYWxzIH0gZnJvbSBcIi4uL0dvYWxzXCI7XG5pbXBvcnQge1xuICAgIEluZGVwZW5kZW50T2ZFbnZpcm9ubWVudCxcbiAgICBQcm9kdWN0aW9uRW52aXJvbm1lbnQsXG4gICAgU3RhZ2luZ0Vudmlyb25tZW50LFxufSBmcm9tIFwiLi4vc3VwcG9ydC9naXRodWIvZ2l0SHViQ29udGV4dFwiO1xuaW1wb3J0IHsgRG9ja2VyQnVpbGRHb2FsLCBTdGFnaW5nRGVwbG95bWVudEdvYWwsIFRhZ0dvYWwsIFZlcnNpb25Hb2FsIH0gZnJvbSBcIi4vY29tbW9uR29hbHNcIjtcblxuZXhwb3J0IGNvbnN0IE5wbVB1Ymxpc2hHb2FsID0gbmV3IEdvYWxXaXRoUHJlY29uZGl0aW9uKHtcbiAgICB1bmlxdWVOYW1lOiBcIlB1Ymxpc2hcIixcbiAgICBlbnZpcm9ubWVudDogSW5kZXBlbmRlbnRPZkVudmlyb25tZW50LFxuICAgIG9yZGVyZWROYW1lOiBcIjItcHVibGlzaFwiLFxuICAgIGRpc3BsYXlOYW1lOiBcInB1Ymxpc2hcIixcbiAgICB3b3JraW5nRGVzY3JpcHRpb246IFwiUHVibGlzaGluZy4uLlwiLFxuICAgIGNvbXBsZXRlZERlc2NyaXB0aW9uOiBcIlB1Ymxpc2hlZFwiLFxuICAgIGZhaWxlZERlc2NyaXB0aW9uOiBcIlB1Ymxpc2hlZCBmYWlsZWRcIixcbiAgICBpc29sYXRlZDogdHJ1ZSxcbn0sIEJ1aWxkR29hbCk7XG5cbmV4cG9ydCBjb25zdCBTdGFnaW5nRG9ja2VyRGVwbG95bWVudEdvYWwgPSBuZXcgR29hbFdpdGhQcmVjb25kaXRpb24oe1xuICAgIHVuaXF1ZU5hbWU6IFwiRGVwbG95VG9UZXN0XCIsXG4gICAgZW52aXJvbm1lbnQ6IFN0YWdpbmdFbnZpcm9ubWVudCxcbiAgICBvcmRlcmVkTmFtZTogXCIzLWRlcGxveVwiLFxuICAgIGRpc3BsYXlOYW1lOiBcImRlcGxveSB0byBUZXN0XCIsXG4gICAgY29tcGxldGVkRGVzY3JpcHRpb246IFwiRGVwbG95ZWQgdG8gVGVzdFwiLFxuICAgIGZhaWxlZERlc2NyaXB0aW9uOiBcIlRlc3QgZGVwbG95bWVudCBmYWlsdXJlXCIsXG4gICAgd2FpdGluZ0ZvckFwcHJvdmFsRGVzY3JpcHRpb246IFwiUHJvbW90ZSB0byBQcm9kXCIsXG4gICAgYXBwcm92YWxSZXF1aXJlZDogdHJ1ZSxcbn0sIERvY2tlckJ1aWxkR29hbCk7XG5cbmV4cG9ydCBjb25zdCBQcm9kdWN0aW9uRG9ja2VyRGVwbG95bWVudEdvYWwgPSBuZXcgR29hbFdpdGhQcmVjb25kaXRpb24oe1xuICAgIHVuaXF1ZU5hbWU6IFwiRGVwbG95VG9Qcm9kdWN0aW9uXCIsXG4gICAgZW52aXJvbm1lbnQ6IFByb2R1Y3Rpb25FbnZpcm9ubWVudCxcbiAgICBvcmRlcmVkTmFtZTogXCIzLXByb2QtZGVwbG95XCIsXG4gICAgZGlzcGxheU5hbWU6IFwiZGVwbG95IHRvIFByb2RcIixcbiAgICBjb21wbGV0ZWREZXNjcmlwdGlvbjogXCJEZXBsb3llZCB0byBQcm9kXCIsXG4gICAgZmFpbGVkRGVzY3JpcHRpb246IFwiUHJvZCBkZXBsb3ltZW50IGZhaWx1cmVcIixcbn0sIFN0YWdpbmdEb2NrZXJEZXBsb3ltZW50R29hbCk7XG5cbmV4cG9ydCBjb25zdCBOcG1EZXBsb3lHb2FscyA9IG5ldyBHb2FscyhcbiAgICBcIk5vZGUuanMgRGVwbG95XCIsXG4gICAgUmV2aWV3R29hbCxcbiAgICBBdXRvZml4R29hbCxcbiAgICBCdWlsZEdvYWwsXG4gICAgQXJ0aWZhY3RHb2FsLFxuICAgIFN0YWdpbmdEZXBsb3ltZW50R29hbCxcbiAgICBTdGFnaW5nRW5kcG9pbnRHb2FsLFxuKTtcblxuZXhwb3J0IGNvbnN0IE5wbUJ1aWxkR29hbHMgPSBuZXcgR29hbHMoXG4gICAgXCJOb2RlLmpzIEJ1aWxkXCIsXG4gICAgVmVyc2lvbkdvYWwsXG4gICAgUmV2aWV3R29hbCxcbiAgICBBdXRvZml4R29hbCxcbiAgICBCdWlsZEdvYWwsXG4gICAgTnBtUHVibGlzaEdvYWwsXG4gICAgVGFnR29hbCxcbik7XG5cbmV4cG9ydCBjb25zdCBOcG1Eb2NrZXJHb2FscyA9IG5ldyBHb2FscyhcbiAgICBcIk5vZGUuanMgRG9ja2VyIEJ1aWxkXCIsXG4gICAgVmVyc2lvbkdvYWwsXG4gICAgUmV2aWV3R29hbCxcbiAgICBBdXRvZml4R29hbCxcbiAgICBCdWlsZEdvYWwsXG4gICAgTnBtUHVibGlzaEdvYWwsXG4gICAgRG9ja2VyQnVpbGRHb2FsLFxuICAgIFRhZ0dvYWwsXG4pO1xuXG5leHBvcnQgY29uc3QgTnBtS3ViZXJuZXRlc0RlcGxveUdvYWxzID0gbmV3IEdvYWxzKFxuICAgIFwiTm9kZS5qcyBLdWJlcm5ldGVzIEJ1aWxkIGFuZCBEZXBsb3lcIixcbiAgICBWZXJzaW9uR29hbCxcbiAgICBSZXZpZXdHb2FsLFxuICAgIEF1dG9maXhHb2FsLFxuICAgIEJ1aWxkR29hbCxcbiAgICBOcG1QdWJsaXNoR29hbCxcbiAgICBEb2NrZXJCdWlsZEdvYWwsXG4gICAgVGFnR29hbCxcbiAgICBTdGFnaW5nRG9ja2VyRGVwbG95bWVudEdvYWwsXG4gICAgUHJvZHVjdGlvbkRvY2tlckRlcGxveW1lbnRHb2FsLFxuKTtcbiJdfQ==