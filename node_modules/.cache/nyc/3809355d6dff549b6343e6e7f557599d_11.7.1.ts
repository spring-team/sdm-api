"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_u7hw7su0e=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/build/local/LocalBuilder.ts",hash="adb009473cde5acb9542b5036a3bbcbd7eeaa982",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/build/local/LocalBuilder.ts",statementMap:{"0":{start:{line:17,column:16},end:{line:24,column:1}},"1":{start:{line:18,column:4},end:{line:23,column:7}},"2":{start:{line:19,column:36},end:{line:19,column:97}},"3":{start:{line:19,column:42},end:{line:19,column:70}},"4":{start:{line:19,column:85},end:{line:19,column:95}},"5":{start:{line:20,column:35},end:{line:20,column:100}},"6":{start:{line:20,column:41},end:{line:20,column:73}},"7":{start:{line:20,column:88},end:{line:20,column:98}},"8":{start:{line:21,column:32},end:{line:21,column:149}},"9":{start:{line:21,column:97},end:{line:21,column:119}},"10":{start:{line:22,column:8},end:{line:22,column:78}},"11":{start:{line:25,column:0},end:{line:25,column:62}},"12":{start:{line:26,column:28},end:{line:26,column:65}},"13":{start:{line:27,column:22},end:{line:27,column:81}},"14":{start:{line:28,column:24},end:{line:28,column:87}},"15":{start:{line:29,column:16},end:{line:29,column:64}},"16":{start:{line:30,column:16},end:{line:30,column:32}},"17":{start:{line:31,column:21},end:{line:31,column:42}},"18":{start:{line:32,column:20},end:{line:32,column:65}},"19":{start:{line:33,column:21},end:{line:33,column:45}},"20":{start:{line:34,column:27},end:{line:34,column:56}},"21":{start:{line:41,column:8},end:{line:41,column:25}},"22":{start:{line:42,column:8},end:{line:42,column:43}},"23":{start:{line:43,column:8},end:{line:43,column:43}},"24":{start:{line:46,column:8},end:{line:70,column:11}},"25":{start:{line:47,column:23},end:{line:47,column:41}},"26":{start:{line:48,column:32},end:{line:48,column:46}},"27":{start:{line:49,column:32},end:{line:49,column:79}},"28":{start:{line:50,column:12},end:{line:69,column:13}},"29":{start:{line:51,column:27},end:{line:51,column:100}},"30":{start:{line:52,column:16},end:{line:52,column:86}},"31":{start:{line:53,column:16},end:{line:61,column:17}},"32":{start:{line:54,column:31},end:{line:54,column:51}},"33":{start:{line:55,column:20},end:{line:55,column:102}},"34":{start:{line:56,column:20},end:{line:56,column:101}},"35":{start:{line:59,column:20},end:{line:59,column:98}},"36":{start:{line:60,column:20},end:{line:60,column:55}},"37":{start:{line:65,column:16},end:{line:65,column:125}},"38":{start:{line:66,column:16},end:{line:66,column:125}},"39":{start:{line:67,column:16},end:{line:67,column:133}},"40":{start:{line:68,column:16},end:{line:68,column:51}},"41":{start:{line:73,column:8},end:{line:73,column:85}},"42":{start:{line:76,column:8},end:{line:95,column:11}},"43":{start:{line:77,column:12},end:{line:94,column:13}},"44":{start:{line:78,column:16},end:{line:90,column:17}},"45":{start:{line:79,column:20},end:{line:79,column:95}},"46":{start:{line:80,column:20},end:{line:80,column:87}},"47":{start:{line:81,column:20},end:{line:86,column:21}},"48":{start:{line:82,column:24},end:{line:82,column:101}},"49":{start:{line:85,column:24},end:{line:85,column:118}},"50":{start:{line:89,column:20},end:{line:89,column:95}},"51":{start:{line:93,column:16},end:{line:93,column:88}},"52":{start:{line:98,column:8},end:{line:98,column:158}},"53":{start:{line:99,column:20},end:{line:99,column:90}},"54":{start:{line:100,column:21},end:{line:113,column:9}},"55":{start:{line:114,column:8},end:{line:115,column:38}},"56":{start:{line:114,column:41},end:{line:114,column:72}},"57":{start:{line:115,column:24},end:{line:115,column:36}},"58":{start:{line:118,column:8},end:{line:145,column:11}},"59":{start:{line:119,column:27},end:{line:127,column:14}},"60":{start:{line:129,column:12},end:{line:141,column:13}},"61":{start:{line:130,column:16},end:{line:130,column:63}},"62":{start:{line:133,column:16},end:{line:140,column:18}},"63":{start:{line:142,column:42},end:{line:142,column:138}},"64":{start:{line:143,column:12},end:{line:143,column:116}},"65":{start:{line:144,column:12},end:{line:144,column:52}},"66":{start:{line:148,column:8},end:{line:153,column:11}},"67":{start:{line:149,column:28},end:{line:149,column:137}},"68":{start:{line:150,column:12},end:{line:152,column:13}},"69":{start:{line:151,column:16},end:{line:151,column:132}},"70":{start:{line:156,column:0},end:{line:156,column:36}},"71":{start:{line:158,column:4},end:{line:159,column:127}},"72":{start:{line:159,column:26},end:{line:159,column:125}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:44},end:{line:17,column:45}},loc:{start:{line:17,column:89},end:{line:24,column:1}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:36},end:{line:18,column:37}},loc:{start:{line:18,column:63},end:{line:23,column:5}},line:18},"2":{name:"fulfilled",decl:{start:{line:19,column:17},end:{line:19,column:26}},loc:{start:{line:19,column:34},end:{line:19,column:99}},line:19},"3":{name:"rejected",decl:{start:{line:20,column:17},end:{line:20,column:25}},loc:{start:{line:20,column:33},end:{line:20,column:102}},line:20},"4":{name:"step",decl:{start:{line:21,column:17},end:{line:21,column:21}},loc:{start:{line:21,column:30},end:{line:21,column:151}},line:21},"5":{name:"(anonymous_5)",decl:{start:{line:21,column:76},end:{line:21,column:77}},loc:{start:{line:21,column:95},end:{line:21,column:121}},line:21},"6":{name:"(anonymous_6)",decl:{start:{line:40,column:4},end:{line:40,column:5}},loc:{start:{line:40,column:52},end:{line:44,column:5}},line:40},"7":{name:"(anonymous_7)",decl:{start:{line:45,column:4},end:{line:45,column:5}},loc:{start:{line:45,column:72},end:{line:71,column:5}},line:45},"8":{name:"(anonymous_8)",decl:{start:{line:46,column:47},end:{line:46,column:48}},loc:{start:{line:46,column:60},end:{line:70,column:9}},line:46},"9":{name:"(anonymous_9)",decl:{start:{line:72,column:4},end:{line:72,column:5}},loc:{start:{line:72,column:69},end:{line:74,column:5}},line:72},"10":{name:"(anonymous_10)",decl:{start:{line:75,column:4},end:{line:75,column:5}},loc:{start:{line:75,column:90},end:{line:96,column:5}},line:75},"11":{name:"(anonymous_11)",decl:{start:{line:76,column:47},end:{line:76,column:48}},loc:{start:{line:76,column:60},end:{line:95,column:9}},line:76},"12":{name:"(anonymous_12)",decl:{start:{line:97,column:4},end:{line:97,column:5}},loc:{start:{line:97,column:61},end:{line:116,column:5}},line:97},"13":{name:"(anonymous_13)",decl:{start:{line:114,column:35},end:{line:114,column:36}},loc:{start:{line:114,column:41},end:{line:114,column:72}},line:114},"14":{name:"(anonymous_14)",decl:{start:{line:115,column:18},end:{line:115,column:19}},loc:{start:{line:115,column:24},end:{line:115,column:36}},line:115},"15":{name:"(anonymous_15)",decl:{start:{line:117,column:4},end:{line:117,column:5}},loc:{start:{line:117,column:37},end:{line:146,column:5}},line:117},"16":{name:"(anonymous_16)",decl:{start:{line:118,column:47},end:{line:118,column:48}},loc:{start:{line:118,column:60},end:{line:145,column:9}},line:118},"17":{name:"(anonymous_17)",decl:{start:{line:147,column:4},end:{line:147,column:5}},loc:{start:{line:147,column:60},end:{line:154,column:5}},line:147},"18":{name:"(anonymous_18)",decl:{start:{line:148,column:47},end:{line:148,column:48}},loc:{start:{line:148,column:60},end:{line:153,column:9}},line:148},"19":{name:"linkArtifact",decl:{start:{line:157,column:9},end:{line:157,column:21}},loc:{start:{line:157,column:54},end:{line:160,column:1}},line:157},"20":{name:"(anonymous_20)",decl:{start:{line:159,column:14},end:{line:159,column:15}},loc:{start:{line:159,column:26},end:{line:159,column:125}},line:159}},branchMap:{"0":{loc:{start:{line:17,column:16},end:{line:24,column:1}},type:"binary-expr",locations:[{start:{line:17,column:17},end:{line:17,column:21}},{start:{line:17,column:25},end:{line:17,column:39}},{start:{line:17,column:44},end:{line:24,column:1}}],line:17},"1":{loc:{start:{line:18,column:16},end:{line:18,column:34}},type:"binary-expr",locations:[{start:{line:18,column:16},end:{line:18,column:17}},{start:{line:18,column:22},end:{line:18,column:33}}],line:18},"2":{loc:{start:{line:21,column:32},end:{line:21,column:148}},type:"cond-expr",locations:[{start:{line:21,column:46},end:{line:21,column:67}},{start:{line:21,column:70},end:{line:21,column:148}}],line:21},"3":{loc:{start:{line:22,column:51},end:{line:22,column:67}},type:"binary-expr",locations:[{start:{line:22,column:51},end:{line:22,column:61}},{start:{line:22,column:65},end:{line:22,column:67}}],line:22},"4":{loc:{start:{line:56,column:27},end:{line:56,column:100}},type:"cond-expr",locations:[{start:{line:56,column:38},end:{line:56,column:70}},{start:{line:56,column:73},end:{line:56,column:100}}],line:56},"5":{loc:{start:{line:78,column:16},end:{line:90,column:17}},type:"if",locations:[{start:{line:78,column:16},end:{line:90,column:17}},{start:{line:78,column:16},end:{line:90,column:17}}],line:78},"6":{loc:{start:{line:81,column:20},end:{line:86,column:21}},type:"if",locations:[{start:{line:81,column:20},end:{line:86,column:21}},{start:{line:81,column:20},end:{line:86,column:21}}],line:81},"7":{loc:{start:{line:129,column:12},end:{line:141,column:13}},type:"if",locations:[{start:{line:129,column:12},end:{line:141,column:13}},{start:{line:129,column:12},end:{line:141,column:13}}],line:129},"8":{loc:{start:{line:129,column:16},end:{line:129,column:83}},type:"binary-expr",locations:[{start:{line:129,column:16},end:{line:129,column:41}},{start:{line:129,column:45},end:{line:129,column:83}}],line:129},"9":{loc:{start:{line:150,column:12},end:{line:152,column:13}},type:"if",locations:[{start:{line:150,column:12},end:{line:152,column:13}},{start:{line:150,column:12},end:{line:152,column:13}}],line:150}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var __awaiter=(cov_u7hw7su0e.s[0]++,(cov_u7hw7su0e.b[0][0]++,this)&&(cov_u7hw7su0e.b[0][1]++,this.__awaiter)||(cov_u7hw7su0e.b[0][2]++,function(thisArg,_arguments,P,generator){cov_u7hw7su0e.f[0]++;cov_u7hw7su0e.s[1]++;return new((cov_u7hw7su0e.b[1][0]++,P)||(cov_u7hw7su0e.b[1][1]++,P=Promise))(function(resolve,reject){cov_u7hw7su0e.f[1]++;function fulfilled(value){cov_u7hw7su0e.f[2]++;cov_u7hw7su0e.s[2]++;try{cov_u7hw7su0e.s[3]++;step(generator.next(value));}catch(e){cov_u7hw7su0e.s[4]++;reject(e);}}function rejected(value){cov_u7hw7su0e.f[3]++;cov_u7hw7su0e.s[5]++;try{cov_u7hw7su0e.s[6]++;step(generator["throw"](value));}catch(e){cov_u7hw7su0e.s[7]++;reject(e);}}function step(result){cov_u7hw7su0e.f[4]++;cov_u7hw7su0e.s[8]++;result.done?(cov_u7hw7su0e.b[2][0]++,resolve(result.value)):(cov_u7hw7su0e.b[2][1]++,new P(function(resolve){cov_u7hw7su0e.f[5]++;cov_u7hw7su0e.s[9]++;resolve(result.value);}).then(fulfilled,rejected));}cov_u7hw7su0e.s[10]++;step((generator=generator.apply(thisArg,(cov_u7hw7su0e.b[3][0]++,_arguments)||(cov_u7hw7su0e.b[3][1]++,[]))).next());});}));cov_u7hw7su0e.s[11]++;Object.defineProperty(exports,"__esModule",{value:true});const automation_client_1=(cov_u7hw7su0e.s[12]++,require("@atomist/automation-client"));const GraphClient_1=(cov_u7hw7su0e.s[13]++,require("@atomist/automation-client/spi/graph/GraphClient"));const MessageClient_1=(cov_u7hw7su0e.s[14]++,require("@atomist/automation-client/spi/message/MessageClient"));const retry_1=(cov_u7hw7su0e.s[15]++,require("@atomist/automation-client/util/retry"));const axios_1=(cov_u7hw7su0e.s[16]++,require("axios"));const sprintf_js_1=(cov_u7hw7su0e.s[17]++,require("sprintf-js"));const ImageLink_1=(cov_u7hw7su0e.s[18]++,require("../../../../util/webhook/ImageLink"));const executeTag_1=(cov_u7hw7su0e.s[19]++,require("../executeTag"));const projectVersioner_1=(cov_u7hw7su0e.s[20]++,require("./projectVersioner"));/**
 * Superclass for build implemented on the automation client itself, emitting appropriate events to Atomist.
 * Allows listening to a Running build
 */class LocalBuilder{constructor(name,artifactStore,projectLoader){cov_u7hw7su0e.f[6]++;cov_u7hw7su0e.s[21]++;this.name=name;cov_u7hw7su0e.s[22]++;this.artifactStore=artifactStore;cov_u7hw7su0e.s[23]++;this.projectLoader=projectLoader;}initiateBuild(credentials,id,addressChannels,push,log,context){cov_u7hw7su0e.f[7]++;cov_u7hw7su0e.s[24]++;return __awaiter(this,void 0,void 0,function*(){cov_u7hw7su0e.f[8]++;const as=(cov_u7hw7su0e.s[25]++,this.artifactStore);const atomistTeam=(cov_u7hw7su0e.s[26]++,context.teamId);const buildNumber=(cov_u7hw7su0e.s[27]++,yield this.obtainBuildIdentifier(push,context));cov_u7hw7su0e.s[28]++;try{const rb=(cov_u7hw7su0e.s[29]++,yield this.startBuild(credentials,id,atomistTeam,log,addressChannels));cov_u7hw7su0e.s[30]++;yield this.onStarted(credentials,id,push,rb,buildNumber,context);cov_u7hw7su0e.s[31]++;try{const br=(cov_u7hw7su0e.s[32]++,yield rb.buildResult);cov_u7hw7su0e.s[33]++;yield this.onExit(credentials,id,!br.error,push,rb,buildNumber,as,context);cov_u7hw7su0e.s[34]++;return br.error?(cov_u7hw7su0e.b[4][0]++,{code:1,message:br.message}):(cov_u7hw7su0e.b[4][1]++,automation_client_1.Success);}catch(err){cov_u7hw7su0e.s[35]++;yield this.onExit(credentials,id,false,push,rb,buildNumber,as,context);cov_u7hw7su0e.s[36]++;return automation_client_1.Failure;}}catch(err){cov_u7hw7su0e.s[37]++;// If we get here, the build failed before even starting
automation_client_1.logger.warn("Build on branch %s failed on start: %j - %s",push.branch,id,err.message);cov_u7hw7su0e.s[38]++;log.write(sprintf_js_1.sprintf("Build on branch %s failed on start: %j - %s",push.branch,id,err.message));cov_u7hw7su0e.s[39]++;yield this.updateBuildStatus({repoRef:id,team:atomistTeam,url:undefined},"failed",push.branch,buildNumber);cov_u7hw7su0e.s[40]++;return automation_client_1.Failure;}});}onStarted(credentials,id,push,runningBuild,buildNo,context){cov_u7hw7su0e.f[9]++;cov_u7hw7su0e.s[41]++;return this.updateBuildStatus(runningBuild,"started",push.branch,buildNo);}onExit(credentials,id,success,push,runningBuild,buildNo,artifactStore,context){cov_u7hw7su0e.f[10]++;cov_u7hw7su0e.s[42]++;return __awaiter(this,void 0,void 0,function*(){cov_u7hw7su0e.f[11]++;cov_u7hw7su0e.s[43]++;try{cov_u7hw7su0e.s[44]++;if(success){cov_u7hw7su0e.b[5][0]++;cov_u7hw7su0e.s[45]++;yield this.updateBuildStatus(runningBuild,"passed",push.branch,buildNo);cov_u7hw7su0e.s[46]++;yield this.createBuildTag(id,push,buildNo,context,credentials);cov_u7hw7su0e.s[47]++;if(!!runningBuild.deploymentUnitFile){cov_u7hw7su0e.b[6][0]++;cov_u7hw7su0e.s[48]++;yield linkArtifact(credentials,runningBuild,context.teamId,artifactStore);}else{cov_u7hw7su0e.b[6][1]++;cov_u7hw7su0e.s[49]++;automation_client_1.logger.warn("No artifact generated by build of %j",runningBuild.appInfo);}}else{cov_u7hw7su0e.b[5][1]++;cov_u7hw7su0e.s[50]++;yield this.updateBuildStatus(runningBuild,"failed",push.branch,buildNo);}}catch(err){cov_u7hw7su0e.s[51]++;automation_client_1.logger.warn("Unexpected build exit error: %s",err);}});}updateBuildStatus(runningBuild,status,branch,buildNo){cov_u7hw7su0e.f[12]++;cov_u7hw7su0e.s[52]++;automation_client_1.logger.info("Telling Atomist about a %s build on %s, sha %s, url %s",status,branch,runningBuild.repoRef.sha,runningBuild.url);const url=(cov_u7hw7su0e.s[53]++,`https://webhook.atomist.com/atomist/build/teams/${runningBuild.team}`);const data=(cov_u7hw7su0e.s[54]++,{repository:{owner_name:runningBuild.repoRef.owner,name:runningBuild.repoRef.repo},name:`Build #${buildNo}`,number:+buildNo,type:"push",build_url:runningBuild.url,status,commit:runningBuild.repoRef.sha,branch,provider:"sdm"});cov_u7hw7su0e.s[55]++;return retry_1.doWithRetry(()=>{cov_u7hw7su0e.f[13]++;cov_u7hw7su0e.s[56]++;return axios_1.default.post(url,data);},`Update build to ${JSON.stringify(status)}`).then(()=>{cov_u7hw7su0e.f[14]++;cov_u7hw7su0e.s[57]++;return runningBuild;});}obtainBuildIdentifier(push,ctx){cov_u7hw7su0e.f[15]++;cov_u7hw7su0e.s[58]++;return __awaiter(this,void 0,void 0,function*(){cov_u7hw7su0e.f[16]++;const result=(cov_u7hw7su0e.s[59]++,yield ctx.graphClient.query({name:"SdmBuildIdentifierForRepo",variables:{owner:[push.owner],name:[push.name],providerId:[push.providerId]},options:GraphClient_1.QueryNoCacheOptions}));let buildIdentifier;cov_u7hw7su0e.s[60]++;if((cov_u7hw7su0e.b[8][0]++,result.SdmBuildIdentifier)&&(cov_u7hw7su0e.b[8][1]++,result.SdmBuildIdentifier.length===1)){cov_u7hw7su0e.b[7][0]++;cov_u7hw7su0e.s[61]++;buildIdentifier=result.SdmBuildIdentifier[0];}else{cov_u7hw7su0e.b[7][1]++;cov_u7hw7su0e.s[62]++;buildIdentifier={identifier:"0",repo:{owner:push.owner,name:push.name,providerId:push.providerId}};}const bumpedBuildIdentifier=(cov_u7hw7su0e.s[63]++,Object.assign({},buildIdentifier,{identifier:(+buildIdentifier.identifier+1).toString()}));cov_u7hw7su0e.s[64]++;yield ctx.messageClient.send(bumpedBuildIdentifier,MessageClient_1.addressEvent("SdmBuildIdentifier"));cov_u7hw7su0e.s[65]++;return bumpedBuildIdentifier.identifier;});}createBuildTag(id,push,buildNo,context,credentials){cov_u7hw7su0e.f[17]++;cov_u7hw7su0e.s[66]++;return __awaiter(this,void 0,void 0,function*(){cov_u7hw7su0e.f[18]++;const version=(cov_u7hw7su0e.s[67]++,yield projectVersioner_1.readSdmVersion(push.owner,push.name,push.providerId,push.sha,id.branch,context));cov_u7hw7su0e.s[68]++;if(version){cov_u7hw7su0e.b[9][0]++;cov_u7hw7su0e.s[69]++;yield executeTag_1.createTagForStatus(id,push.sha,"Tag created by SDM",`${version}+sdm.${buildNo}`,credentials);}else{cov_u7hw7su0e.b[9][1]++;}});}}cov_u7hw7su0e.s[70]++;exports.LocalBuilder=LocalBuilder;function linkArtifact(creds,rb,team,artifactStore){cov_u7hw7su0e.f[19]++;cov_u7hw7su0e.s[71]++;return artifactStore.storeFile(rb.appInfo,rb.deploymentUnitFile,creds).then(imageUrl=>{cov_u7hw7su0e.f[20]++;cov_u7hw7su0e.s[72]++;return ImageLink_1.postLinkImageWebhook(rb.repoRef.owner,rb.repoRef.repo,rb.repoRef.sha,imageUrl,team);});}//# sourceMappingURL=data:application/json;charset=utf-8;base64,