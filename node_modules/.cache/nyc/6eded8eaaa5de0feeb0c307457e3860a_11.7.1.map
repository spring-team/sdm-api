{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/blueprint/dsl/goalDsl.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/blueprint/dsl/goalDsl.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAGH,6DAAmE;AAEnE,qEAAkE;AAClE,4FAAiF;AACjF,2DAAoE;AAEpE,wBAAgC,SAAQ,mBAAe;IAEnD,YAAY,MAAgB,EAAE,MAAkB,EAAE,MAAe;QAC7D,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IAClC,CAAC;IAEM,QAAQ,CAAC,KAAmB;QAC/B,IAAI,CAAC,KAAK,EAAE;YACR,OAAO,IAAI,CAAC,GAAG,CAAC,KAAc,CAAC,CAAC;SACnC;QACD,OAAO,IAAI,CAAC,GAAG,CAAC,eAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,aAAK,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IACvF,CAAC;CAEJ;AAbD,gDAaC;AAED;;;;;GAKG;AACH,2BAAkC,MAAyB,EAAE,GAAG,MAA2B;IACvF,OAAO,IAAI,kBAAkB,CAAC,8BAAU,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,8BAAU,CAAC,CAAC,CAAC;AAC9E,CAAC;AAFD,8CAEC;AAEY,QAAA,SAAS,GAAG,IAAI,kBAAkB,CAAC,yBAAO,EAAE,EAAE,EAAE,aAAa,CAAC,CAAC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Goal } from \"../../common/delivery/goals/Goal\";\nimport { Goals, isGoals } from \"../../common/delivery/goals/Goals\";\nimport { PushTest } from \"../../common/listener/PushTest\";\nimport { PushRule } from \"../../common/listener/support/PushRule\";\nimport { AnyPush } from \"../../common/listener/support/pushtest/commonPushTests\";\nimport { PushTestPredicate, toPushTest } from \"./pushTestPredicate\";\n\nexport class GoalSetterPushRule extends PushRule<Goals> {\n\n    constructor(guard1: PushTest, guards: PushTest[], reason?: string) {\n        super(guard1, guards, reason);\n    }\n\n    public setGoals(goals: Goals | Goal): this {\n        if (!goals) {\n            return this.set(goals as Goals);\n        }\n        return this.set(isGoals(goals) ? goals : new Goals(\"Solely \" + goals.name, goals));\n    }\n\n}\n\n/**\n * Simple GoalSetter DSL. Allows use of booleans and functions\n * returning boolean in predicate expressions\n * @param {PushTest} guard1\n * @param {PushTest} guards\n */\nexport function whenPushSatisfies(guard1: PushTestPredicate, ...guards: PushTestPredicate[]): GoalSetterPushRule {\n    return new GoalSetterPushRule(toPushTest(guard1), guards.map(toPushTest));\n}\n\nexport const onAnyPush = new GoalSetterPushRule(AnyPush, [], \"On any push\");\n"]}