"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_1tt0fdy82r=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/common/listener/pushRuleTest.ts",hash="4aa4097447f9a707d2b9da97fc107a82cf0e29b9",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/common/listener/pushRuleTest.ts",statementMap:{"0":{start:{line:17,column:16},end:{line:24,column:1}},"1":{start:{line:18,column:4},end:{line:23,column:7}},"2":{start:{line:19,column:36},end:{line:19,column:97}},"3":{start:{line:19,column:42},end:{line:19,column:70}},"4":{start:{line:19,column:85},end:{line:19,column:95}},"5":{start:{line:20,column:35},end:{line:20,column:100}},"6":{start:{line:20,column:41},end:{line:20,column:73}},"7":{start:{line:20,column:88},end:{line:20,column:98}},"8":{start:{line:21,column:32},end:{line:21,column:149}},"9":{start:{line:21,column:97},end:{line:21,column:119}},"10":{start:{line:22,column:8},end:{line:22,column:78}},"11":{start:{line:25,column:0},end:{line:25,column:62}},"12":{start:{line:26,column:26},end:{line:26,column:91}},"13":{start:{line:27,column:15},end:{line:27,column:38}},"14":{start:{line:28,column:14},end:{line:28,column:37}},"15":{start:{line:29,column:0},end:{line:48,column:3}},"16":{start:{line:30,column:4},end:{line:38,column:8}},"17":{start:{line:30,column:66},end:{line:38,column:6}},"18":{start:{line:31,column:21},end:{line:33,column:47}},"19":{start:{line:34,column:24},end:{line:34,column:133}},"20":{start:{line:35,column:25},end:{line:35,column:40}},"21":{start:{line:36,column:23},end:{line:36,column:70}},"22":{start:{line:37,column:8},end:{line:37,column:24}},"23":{start:{line:39,column:4},end:{line:47,column:8}},"24":{start:{line:39,column:60},end:{line:47,column:6}},"25":{start:{line:40,column:21},end:{line:42,column:47}},"26":{start:{line:43,column:24},end:{line:43,column:132}},"27":{start:{line:44,column:25},end:{line:44,column:41}},"28":{start:{line:45,column:23},end:{line:45,column:70}},"29":{start:{line:46,column:8},end:{line:46,column:23}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:44},end:{line:17,column:45}},loc:{start:{line:17,column:89},end:{line:24,column:1}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:36},end:{line:18,column:37}},loc:{start:{line:18,column:63},end:{line:23,column:5}},line:18},"2":{name:"fulfilled",decl:{start:{line:19,column:17},end:{line:19,column:26}},loc:{start:{line:19,column:34},end:{line:19,column:99}},line:19},"3":{name:"rejected",decl:{start:{line:20,column:17},end:{line:20,column:25}},loc:{start:{line:20,column:33},end:{line:20,column:102}},line:20},"4":{name:"step",decl:{start:{line:21,column:17},end:{line:21,column:21}},loc:{start:{line:21,column:30},end:{line:21,column:151}},line:21},"5":{name:"(anonymous_5)",decl:{start:{line:21,column:76},end:{line:21,column:77}},loc:{start:{line:21,column:95},end:{line:21,column:121}},line:21},"6":{name:"(anonymous_6)",decl:{start:{line:29,column:38},end:{line:29,column:39}},loc:{start:{line:29,column:44},end:{line:48,column:1}},line:29},"7":{name:"(anonymous_7)",decl:{start:{line:30,column:60},end:{line:30,column:61}},loc:{start:{line:30,column:66},end:{line:38,column:6}},line:30},"8":{name:"(anonymous_8)",decl:{start:{line:30,column:98},end:{line:30,column:99}},loc:{start:{line:30,column:111},end:{line:38,column:5}},line:30},"9":{name:"(anonymous_9)",decl:{start:{line:39,column:54},end:{line:39,column:55}},loc:{start:{line:39,column:60},end:{line:47,column:6}},line:39},"10":{name:"(anonymous_10)",decl:{start:{line:39,column:92},end:{line:39,column:93}},loc:{start:{line:39,column:105},end:{line:47,column:5}},line:39}},branchMap:{"0":{loc:{start:{line:17,column:16},end:{line:24,column:1}},type:"binary-expr",locations:[{start:{line:17,column:17},end:{line:17,column:21}},{start:{line:17,column:25},end:{line:17,column:39}},{start:{line:17,column:44},end:{line:24,column:1}}],line:17},"1":{loc:{start:{line:18,column:16},end:{line:18,column:34}},type:"binary-expr",locations:[{start:{line:18,column:16},end:{line:18,column:17}},{start:{line:18,column:22},end:{line:18,column:33}}],line:18},"2":{loc:{start:{line:21,column:32},end:{line:21,column:148}},type:"cond-expr",locations:[{start:{line:21,column:46},end:{line:21,column:67}},{start:{line:21,column:70},end:{line:21,column:148}}],line:21},"3":{loc:{start:{line:22,column:51},end:{line:22,column:67}},type:"binary-expr",locations:[{start:{line:22,column:51},end:{line:22,column:61}},{start:{line:22,column:65},end:{line:22,column:67}}],line:22}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var __awaiter=(cov_1tt0fdy82r.s[0]++,(cov_1tt0fdy82r.b[0][0]++,this)&&(cov_1tt0fdy82r.b[0][1]++,this.__awaiter)||(cov_1tt0fdy82r.b[0][2]++,function(thisArg,_arguments,P,generator){cov_1tt0fdy82r.f[0]++;cov_1tt0fdy82r.s[1]++;return new((cov_1tt0fdy82r.b[1][0]++,P)||(cov_1tt0fdy82r.b[1][1]++,P=Promise))(function(resolve,reject){cov_1tt0fdy82r.f[1]++;function fulfilled(value){cov_1tt0fdy82r.f[2]++;cov_1tt0fdy82r.s[2]++;try{cov_1tt0fdy82r.s[3]++;step(generator.next(value));}catch(e){cov_1tt0fdy82r.s[4]++;reject(e);}}function rejected(value){cov_1tt0fdy82r.f[3]++;cov_1tt0fdy82r.s[5]++;try{cov_1tt0fdy82r.s[6]++;step(generator["throw"](value));}catch(e){cov_1tt0fdy82r.s[7]++;reject(e);}}function step(result){cov_1tt0fdy82r.f[4]++;cov_1tt0fdy82r.s[8]++;result.done?(cov_1tt0fdy82r.b[2][0]++,resolve(result.value)):(cov_1tt0fdy82r.b[2][1]++,new P(function(resolve){cov_1tt0fdy82r.f[5]++;cov_1tt0fdy82r.s[9]++;resolve(result.value);}).then(fulfilled,rejected));}cov_1tt0fdy82r.s[10]++;step((generator=generator.apply(thisArg,(cov_1tt0fdy82r.b[3][0]++,_arguments)||(cov_1tt0fdy82r.b[3][1]++,[]))).next());});}));cov_1tt0fdy82r.s[11]++;Object.defineProperty(exports,"__esModule",{value:true});const InMemoryProject_1=(cov_1tt0fdy82r.s[12]++,require("@atomist/automation-client/project/mem/InMemoryProject"));const assert=(cov_1tt0fdy82r.s[13]++,require("power-assert"));const src_1=(cov_1tt0fdy82r.s[14]++,require("../../../src"));cov_1tt0fdy82r.s[15]++;describe("Construction of PushRules",()=>{cov_1tt0fdy82r.f[6]++;cov_1tt0fdy82r.s[16]++;it("Does not think an empty project is a lein project",()=>{cov_1tt0fdy82r.f[7]++;cov_1tt0fdy82r.s[17]++;return __awaiter(this,void 0,void 0,function*(){cov_1tt0fdy82r.f[8]++;const rule=(cov_1tt0fdy82r.s[18]++,new src_1.PushRules("test",[src_1.whenPushSatisfies(src_1.IsLein).itMeans("Build a Clojure library").setGoals(src_1.LibraryGoals)]));const project=(cov_1tt0fdy82r.s[19]++,InMemoryProject_1.InMemoryProject.from({owner:"yes",repo:"no"},{path:"package.json",content:"{}"}));const fakePush=(cov_1tt0fdy82r.s[20]++,{id:"test1"});const result=(cov_1tt0fdy82r.s[21]++,yield rule.mapping({project,push:fakePush}));cov_1tt0fdy82r.s[22]++;assert(!result);});});cov_1tt0fdy82r.s[23]++;it("Does think a lein project is a lein project",()=>{cov_1tt0fdy82r.f[9]++;cov_1tt0fdy82r.s[24]++;return __awaiter(this,void 0,void 0,function*(){cov_1tt0fdy82r.f[10]++;const rule=(cov_1tt0fdy82r.s[25]++,new src_1.PushRules("test",[src_1.whenPushSatisfies(src_1.IsLein).itMeans("Build a Clojure library").setGoals(src_1.LibraryGoals)]));const project=(cov_1tt0fdy82r.s[26]++,InMemoryProject_1.InMemoryProject.from({owner:"yes",repo:"no"},{path:"project.clj",content:"{}"}));const fakePush=(cov_1tt0fdy82r.s[27]++,{id:"ttest2"});const result=(cov_1tt0fdy82r.s[28]++,yield rule.mapping({project,push:fakePush}));cov_1tt0fdy82r.s[29]++;assert(result);});});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvdGVzdC9jb21tb24vbGlzdGVuZXIvcHVzaFJ1bGVUZXN0LnRzIiwic291cmNlcyI6WyIvVXNlcnMvcm9kam9obnNvbi9zZm9yemFuZG8tZGV2L2lkZWEtcHJvamVjdHMvbXktZmxvdy90ZXN0L2NvbW1vbi9saXN0ZW5lci9wdXNoUnVsZVRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7OztHQWNHOzs7Ozs7Ozs7O0FBRUgsNEZBQXVGO0FBQ3ZGLHVDQUF1QztBQUN2QyxzQ0FBMEc7QUFFMUcsUUFBUSxDQUFDLDJCQUEyQixFQUFFLEdBQUcsRUFBRTtJQUV2QyxFQUFFLENBQUMsbURBQW1ELEVBQUUsR0FBUyxFQUFFO1FBQy9ELE1BQU0sSUFBSSxHQUFHLElBQUksZUFBUyxDQUFDLE1BQU0sRUFBRSxDQUFDLHVCQUFpQixDQUFDLFlBQU0sQ0FBQztpQkFDeEQsT0FBTyxDQUFDLHlCQUF5QixDQUFDO2lCQUNsQyxRQUFRLENBQUMsa0JBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUU5QixNQUFNLE9BQU8sR0FBRyxpQ0FBZSxDQUFDLElBQUksQ0FBQyxFQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBQyxFQUMzRCxFQUFDLElBQUksRUFBRSxjQUFjLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBQyxDQUFDLENBQUM7UUFDM0MsTUFBTSxRQUFRLEdBQUcsRUFBQyxFQUFFLEVBQUUsT0FBTyxFQUFDLENBQUM7UUFDL0IsTUFBTSxNQUFNLEdBQUcsTUFBTSxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQWtDLENBQUMsQ0FBQztRQUU5RixNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUVwQixDQUFDLENBQUEsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLDZDQUE2QyxFQUFFLEdBQVMsRUFBRTtRQUN6RCxNQUFNLElBQUksR0FBRyxJQUFJLGVBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyx1QkFBaUIsQ0FBQyxZQUFNLENBQUM7aUJBQ3hELE9BQU8sQ0FBQyx5QkFBeUIsQ0FBQztpQkFDbEMsUUFBUSxDQUFDLGtCQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFOUIsTUFBTSxPQUFPLEdBQUcsaUNBQWUsQ0FBQyxJQUFJLENBQUMsRUFBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUMsRUFDM0QsRUFBQyxJQUFJLEVBQUUsYUFBYSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUMsQ0FBQyxDQUFDO1FBQzFDLE1BQU0sUUFBUSxHQUFHLEVBQUMsRUFBRSxFQUFFLFFBQVEsRUFBQyxDQUFDO1FBQ2hDLE1BQU0sTUFBTSxHQUFHLE1BQU0sSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFrQyxDQUFDLENBQUM7UUFFOUYsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRW5CLENBQUMsQ0FBQSxDQUFDLENBQUM7QUFDUCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgwqkgMjAxOCBBdG9taXN0LCBJbmMuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7SW5NZW1vcnlQcm9qZWN0fSBmcm9tIFwiQGF0b21pc3QvYXV0b21hdGlvbi1jbGllbnQvcHJvamVjdC9tZW0vSW5NZW1vcnlQcm9qZWN0XCI7XG5pbXBvcnQgKiBhcyBhc3NlcnQgZnJvbSBcInBvd2VyLWFzc2VydFwiO1xuaW1wb3J0IHsgSXNMZWluLCBMaWJyYXJ5R29hbHMsIFB1c2hMaXN0ZW5lckludm9jYXRpb24sIFB1c2hSdWxlcywgd2hlblB1c2hTYXRpc2ZpZXMgfSBmcm9tIFwiLi4vLi4vLi4vc3JjXCI7XG5cbmRlc2NyaWJlKFwiQ29uc3RydWN0aW9uIG9mIFB1c2hSdWxlc1wiLCAoKSA9PiB7XG5cbiAgICBpdChcIkRvZXMgbm90IHRoaW5rIGFuIGVtcHR5IHByb2plY3QgaXMgYSBsZWluIHByb2plY3RcIiwgYXN5bmMgKCkgPT4ge1xuICAgICAgICBjb25zdCBydWxlID0gbmV3IFB1c2hSdWxlcyhcInRlc3RcIiwgW3doZW5QdXNoU2F0aXNmaWVzKElzTGVpbilcbiAgICAgICAgICAgIC5pdE1lYW5zKFwiQnVpbGQgYSBDbG9qdXJlIGxpYnJhcnlcIilcbiAgICAgICAgICAgIC5zZXRHb2FscyhMaWJyYXJ5R29hbHMpXSk7XG5cbiAgICAgICAgY29uc3QgcHJvamVjdCA9IEluTWVtb3J5UHJvamVjdC5mcm9tKHtvd25lcjogXCJ5ZXNcIiwgcmVwbzogXCJub1wifSxcbiAgICAgICAgICAgIHtwYXRoOiBcInBhY2thZ2UuanNvblwiLCBjb250ZW50OiBcInt9XCJ9KTtcbiAgICAgICAgY29uc3QgZmFrZVB1c2ggPSB7aWQ6IFwidGVzdDFcIn07XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJ1bGUubWFwcGluZyh7cHJvamVjdCwgcHVzaDogZmFrZVB1c2h9IGFzIGFueSBhcyBQdXNoTGlzdGVuZXJJbnZvY2F0aW9uKTtcblxuICAgICAgICBhc3NlcnQoIXJlc3VsdCk7XG5cbiAgICB9KTtcblxuICAgIGl0KFwiRG9lcyB0aGluayBhIGxlaW4gcHJvamVjdCBpcyBhIGxlaW4gcHJvamVjdFwiLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHJ1bGUgPSBuZXcgUHVzaFJ1bGVzKFwidGVzdFwiLCBbd2hlblB1c2hTYXRpc2ZpZXMoSXNMZWluKVxuICAgICAgICAgICAgLml0TWVhbnMoXCJCdWlsZCBhIENsb2p1cmUgbGlicmFyeVwiKVxuICAgICAgICAgICAgLnNldEdvYWxzKExpYnJhcnlHb2FscyldKTtcblxuICAgICAgICBjb25zdCBwcm9qZWN0ID0gSW5NZW1vcnlQcm9qZWN0LmZyb20oe293bmVyOiBcInllc1wiLCByZXBvOiBcIm5vXCJ9LFxuICAgICAgICAgICAge3BhdGg6IFwicHJvamVjdC5jbGpcIiwgY29udGVudDogXCJ7fVwifSk7XG4gICAgICAgIGNvbnN0IGZha2VQdXNoID0ge2lkOiBcInR0ZXN0MlwifTtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcnVsZS5tYXBwaW5nKHtwcm9qZWN0LCBwdXNoOiBmYWtlUHVzaH0gYXMgYW55IGFzIFB1c2hMaXN0ZW5lckludm9jYXRpb24pO1xuXG4gICAgICAgIGFzc2VydChyZXN1bHQpO1xuXG4gICAgfSk7XG59KTtcbiJdfQ==