{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/command/generator/SeedDrivenGeneratorParametersSupport.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/command/generator/SeedDrivenGeneratorParametersSupport.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;AAEH,kEAA0F;AAC1F,sEAAmE;AAEnE,uGAAsG;AAEtG,8HAA2H;AAG3H,sDAAiD;AAGjD;;GAEG;AAEH,IAAa,oCAAoC,GAAjD;IAgDI,YAAuC,MAAuB;QAAvB,WAAM,GAAN,MAAM,CAAiB;QAlCvD,sBAAiB,GAAY,KAAK,CAAC;QAOnC,YAAO,GAAW,gBAAgB,CAAC;QAYnC,WAAM,GAA8B,IAAI,2DAA4B,EAAE,CAAC;QAgB1E,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;IACtD,CAAC;IAZD,IAAI,WAAW;QACX,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;IACnC,CAAC;IAED,IAAI,MAAM;QACN,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QACjC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC;QACzC,OAAO,EAAC,OAAO,EAAC,CAAC;IACrB,CAAC;CAMJ,CAAA;AAjDG;IADC,mCAAe,CAAC,oCAAgB,CAAC,aAAa,CAAC;;wEACtB;AAW1B;IATC,6BAAS,CAAC;QACP,OAAO,EAAE,kBAAkB;QAC3B,IAAI,EAAE,SAAS;QACf,WAAW,EAAE,qBAAqB;QAClC,WAAW,EAAE,uEAAuE;QACpF,UAAU,EAAE,mBAAmB;QAC/B,QAAQ,EAAE,KAAK;QACf,WAAW,EAAE,IAAI;KACpB,CAAC;;+EACwC;AAO1C;IALC,6BAAS,mBACH,6BAAY,IACf,QAAQ,EAAE,IAAI,EACd,KAAK,EAAE,EAAE,IACX;;qEACwC;AAU1C;IARC,6BAAS,iBACN,WAAW,EAAE,WAAW,EACxB,WAAW,EAAE,WAAW,IACrB,iCAAgB,IACnB,SAAS,EAAE,CAAC,EACZ,SAAS,EAAE,EAAE,EACb,QAAQ,EAAE,KAAK,IACjB;;kEACkB;AAKpB;IADC,mCAAe,CAAC,oCAAgB,CAAC,SAAS,CAAC;;uEACnB;AApChB,oCAAoC;IADhD,uBAAU,EAAE;;GACA,oCAAoC,CAoDhD;AApDY,oFAAoC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MappedParameter, MappedParameters, Parameter } from \"@atomist/automation-client\";\nimport { Parameters } from \"@atomist/automation-client/decorators\";\n\nimport { GitHubNameRegExp } from \"@atomist/automation-client/operations/common/params/gitHubPatterns\";\nimport { RemoteLocator } from \"@atomist/automation-client/operations/common/params/RemoteLocator\";\nimport { GitHubRepoCreationParameters } from \"@atomist/automation-client/operations/generate/GitHubRepoCreationParameters\";\nimport { NewRepoCreationParameters } from \"@atomist/automation-client/operations/generate/NewRepoCreationParameters\";\nimport { SeedDrivenGeneratorParameters } from \"@atomist/automation-client/operations/generate/SeedDrivenGeneratorParameters\";\nimport { SemVerRegExp } from \"../commonPatterns\";\nimport { GeneratorConfig } from \"./GeneratorConfig\";\n\n/**\n * Convenient base class for project generator parameters.\n */\n@Parameters()\nexport class SeedDrivenGeneratorParametersSupport implements SeedDrivenGeneratorParameters {\n\n    @MappedParameter(MappedParameters.SlackUserName)\n    public screenName: string;\n\n    @Parameter({\n        pattern: /^(?:true|false)$/,\n        type: \"boolean\",\n        displayName: \"Add Atomist webhook\",\n        description: \"whether to add the Atomist webhook to the repository to allow updates\",\n        validInput: \"'true' or 'false'\",\n        required: false,\n        displayable: true,\n    })\n    public addAtomistWebhook: boolean = false;\n\n    @Parameter({\n        ...SemVerRegExp,\n        required: true,\n        order: 52,\n    })\n    public version: string = \"0.1.0-SNAPSHOT\";\n\n    @Parameter({\n        displayName: \"Seed repo\",\n        description: \"Seed repo\",\n        ...GitHubNameRegExp,\n        minLength: 1,\n        maxLength: 50,\n        required: false,\n    })\n    public seed: string;\n\n    public target: NewRepoCreationParameters = new GitHubRepoCreationParameters();\n\n    @MappedParameter(MappedParameters.SlackTeam)\n    public slackTeam: string;\n\n    get description() {\n        return this.target.description;\n    }\n\n    get source(): RemoteLocator {\n        const repoRef = this.config.seed;\n        repoRef.repo = this.seed || repoRef.repo;\n        return {repoRef};\n    }\n\n    protected constructor(private readonly config: GeneratorConfig) {\n        this.addAtomistWebhook = config.addAtomistWebhook;\n    }\n\n}\n"]}