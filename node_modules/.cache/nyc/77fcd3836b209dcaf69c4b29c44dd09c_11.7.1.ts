"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_abcqgowbb=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/goals/support/goalPreconditions.ts",hash="dfb4ca65310a5b51bcf0f9c460386f22b9239d3e",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/goals/support/goalPreconditions.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:28},end:{line:18,column:65}},"2":{start:{line:19,column:21},end:{line:19,column:42}},"3":{start:{line:20,column:26},end:{line:20,column:74}},"4":{start:{line:26,column:4},end:{line:28,column:5}},"5":{start:{line:27,column:8},end:{line:27,column:20}},"6":{start:{line:29,column:26},end:{line:29,column:90}},"7":{start:{line:29,column:55},end:{line:29,column:89}},"8":{start:{line:30,column:4},end:{line:33,column:5}},"9":{start:{line:31,column:8},end:{line:31,column:163}},"10":{start:{line:32,column:8},end:{line:32,column:21}},"11":{start:{line:34,column:4},end:{line:34,column:105}},"12":{start:{line:35,column:4},end:{line:35,column:16}},"13":{start:{line:37,column:0},end:{line:37,column:50}},"14":{start:{line:39,column:29},end:{line:39,column:92}},"15":{start:{line:40,column:4},end:{line:45,column:5}},"16":{start:{line:43,column:8},end:{line:43,column:130}},"17":{start:{line:44,column:8},end:{line:44,column:20}},"18":{start:{line:46,column:4},end:{line:61,column:5}},"19":{start:{line:49,column:12},end:{line:49,column:163}},"20":{start:{line:50,column:12},end:{line:50,column:25}},"21":{start:{line:55,column:12},end:{line:55,column:146}},"22":{start:{line:56,column:12},end:{line:56,column:25}},"23":{start:{line:58,column:12},end:{line:58,column:24}},"24":{start:{line:60,column:12},end:{line:60,column:153}}},fnMap:{"0":{name:"preconditionsAreMet",decl:{start:{line:25,column:9},end:{line:25,column:28}},loc:{start:{line:25,column:41},end:{line:36,column:1}},line:25},"1":{name:"(anonymous_1)",decl:{start:{line:29,column:50},end:{line:29,column:51}},loc:{start:{line:29,column:55},end:{line:29,column:89}},line:29},"2":{name:"satisfied",decl:{start:{line:38,column:9},end:{line:38,column:18}},loc:{start:{line:38,column:52},end:{line:62,column:1}},line:38}},branchMap:{"0":{loc:{start:{line:26,column:4},end:{line:28,column:5}},type:"if",locations:[{start:{line:26,column:4},end:{line:28,column:5}},{start:{line:26,column:4},end:{line:28,column:5}}],line:26},"1":{loc:{start:{line:26,column:8},end:{line:26,column:62}},type:"binary-expr",locations:[{start:{line:26,column:8},end:{line:26,column:27}},{start:{line:26,column:31},end:{line:26,column:62}}],line:26},"2":{loc:{start:{line:30,column:4},end:{line:33,column:5}},type:"if",locations:[{start:{line:30,column:4},end:{line:33,column:5}},{start:{line:30,column:4},end:{line:33,column:5}}],line:30},"3":{loc:{start:{line:40,column:4},end:{line:45,column:5}},type:"if",locations:[{start:{line:40,column:4},end:{line:45,column:5}},{start:{line:40,column:4},end:{line:45,column:5}}],line:40},"4":{loc:{start:{line:46,column:4},end:{line:61,column:5}},type:"switch",locations:[{start:{line:47,column:8},end:{line:47,column:23}},{start:{line:48,column:8},end:{line:50,column:25}},{start:{line:51,column:8},end:{line:51,column:23}},{start:{line:52,column:8},end:{line:52,column:25}},{start:{line:53,column:8},end:{line:53,column:36}},{start:{line:54,column:8},end:{line:56,column:25}},{start:{line:57,column:8},end:{line:58,column:24}},{start:{line:59,column:8},end:{line:60,column:153}}],line:46}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0,0,0,0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_abcqgowbb.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const automation_client_1=(cov_abcqgowbb.s[1]++,require("@atomist/automation-client"));const sprintf_js_1=(cov_abcqgowbb.s[2]++,require("sprintf-js"));const sdmGoalIngester_1=(cov_abcqgowbb.s[3]++,require("../../../../ingesters/sdmGoalIngester"));/*
 * Right now the only preconditions supported are other goals.
 * The intention is that others will be expressed, such as requiring an image.
 */function preconditionsAreMet(goal,info){cov_abcqgowbb.f[0]++;cov_abcqgowbb.s[4]++;if((cov_abcqgowbb.b[1][0]++,!goal.preConditions)||(cov_abcqgowbb.b[1][1]++,goal.preConditions.length===0)){cov_abcqgowbb.b[0][0]++;cov_abcqgowbb.s[5]++;return true;}else{cov_abcqgowbb.b[0][1]++;}const falsification=(cov_abcqgowbb.s[6]++,goal.preConditions.find(p=>{cov_abcqgowbb.f[1]++;cov_abcqgowbb.s[7]++;return!satisfied(p,info.goalsForCommit);}));cov_abcqgowbb.s[8]++;if(falsification){cov_abcqgowbb.b[2][0]++;cov_abcqgowbb.s[9]++;automation_client_1.logger.debug("Precondition not met for %s: %s",sdmGoalIngester_1.goalKeyString(goal),sdmGoalIngester_1.goalKeyString(falsification));cov_abcqgowbb.s[10]++;return false;}else{cov_abcqgowbb.b[2][1]++;}cov_abcqgowbb.s[11]++;automation_client_1.logger.debug("All %d preconditions satisfied for %s",goal.preConditions.length);cov_abcqgowbb.s[12]++;return true;}cov_abcqgowbb.s[13]++;exports.preconditionsAreMet=preconditionsAreMet;function satisfied(preconditionKey,goalsForCommit){cov_abcqgowbb.f[2]++;const preconditionGoal=(cov_abcqgowbb.s[14]++,sdmGoalIngester_1.mapKeyToGoal(goalsForCommit)(preconditionKey));cov_abcqgowbb.s[15]++;if(!preconditionGoal){cov_abcqgowbb.b[3][0]++;cov_abcqgowbb.s[16]++;// TODO CD I'd suggest that goals that have a precondition that doesn't exist in the goal set
// are satisfied
automation_client_1.logger.error("Precondition %s not found on commit",sdmGoalIngester_1.goalKeyString(preconditionKey));cov_abcqgowbb.s[17]++;return true;}else{cov_abcqgowbb.b[3][1]++;}cov_abcqgowbb.s[18]++;switch(preconditionGoal.state){case"failure":cov_abcqgowbb.b[4][0]++;case"skipped":cov_abcqgowbb.b[4][1]++;cov_abcqgowbb.s[19]++;automation_client_1.logger.info("Precondition %s in state %s, won't be met",sdmGoalIngester_1.goalKeyString(preconditionKey),preconditionGoal.state);cov_abcqgowbb.s[20]++;return false;case"planned":cov_abcqgowbb.b[4][2]++;case"requested":cov_abcqgowbb.b[4][3]++;case"waiting_for_approval":cov_abcqgowbb.b[4][4]++;case"in_process":cov_abcqgowbb.b[4][5]++;cov_abcqgowbb.s[21]++;automation_client_1.logger.debug("Not yet. %s in state %s",sdmGoalIngester_1.goalKeyString(preconditionKey),preconditionGoal.state);cov_abcqgowbb.s[22]++;return false;case"success":cov_abcqgowbb.b[4][6]++;cov_abcqgowbb.s[23]++;return true;default:cov_abcqgowbb.b[4][7]++;cov_abcqgowbb.s[24]++;throw new Error(sprintf_js_1.sprintf("Unhandled state: %s on %s",preconditionGoal.state,sdmGoalIngester_1.goalKeyString(preconditionKey)));}}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2NvbW1vbi9kZWxpdmVyeS9nb2Fscy9zdXBwb3J0L2dvYWxQcmVjb25kaXRpb25zLnRzIiwic291cmNlcyI6WyIvVXNlcnMvcm9kam9obnNvbi9zZm9yemFuZG8tZGV2L2lkZWEtcHJvamVjdHMvbXktZmxvdy9zcmMvY29tbW9uL2RlbGl2ZXJ5L2dvYWxzL3N1cHBvcnQvZ29hbFByZWNvbmRpdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7OztHQWNHOztBQUVILGtFQUFvRDtBQUNwRCwyQ0FBcUM7QUFDckMsMkVBQXlHO0FBRXpHOzs7R0FHRztBQUNILDZCQUFvQyxJQUFhLEVBQUUsSUFFbEQ7SUFDRyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsSUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7UUFDeEQsT0FBTyxJQUFJLENBQUM7S0FDZjtJQUNELE1BQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO0lBQ3ZGLElBQUksYUFBYSxFQUFFO1FBQ2YsMEJBQU0sQ0FBQyxLQUFLLENBQUMsaUNBQWlDLEVBQUUsK0JBQWEsQ0FBQyxJQUFJLENBQUMsRUFBRSwrQkFBYSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7UUFDbkcsT0FBTyxLQUFLLENBQUM7S0FDaEI7SUFDRCwwQkFBTSxDQUFDLEtBQUssQ0FBQyx1Q0FBdUMsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2pGLE9BQU8sSUFBSSxDQUFDO0FBQ2hCLENBQUM7QUFiRCxrREFhQztBQUVELG1CQUFtQixlQUEyQixFQUFFLGNBQXlCO0lBQ3JFLE1BQU0sZ0JBQWdCLEdBQUcsOEJBQVksQ0FBQyxjQUFjLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUN2RSxJQUFJLENBQUMsZ0JBQWdCLEVBQUU7UUFDbkIsNkZBQTZGO1FBQzdGLGdCQUFnQjtRQUNoQiwwQkFBTSxDQUFDLEtBQUssQ0FBQyxxQ0FBcUMsRUFBRSwrQkFBYSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUM7UUFDcEYsT0FBTyxJQUFJLENBQUM7S0FDZjtJQUNELFFBQVEsZ0JBQWdCLENBQUMsS0FBSyxFQUFFO1FBQzVCLEtBQUssU0FBUyxDQUFDO1FBQ2YsS0FBSyxTQUFTO1lBQ1YsMEJBQU0sQ0FBQyxJQUFJLENBQUMsMkNBQTJDLEVBQUUsK0JBQWEsQ0FBQyxlQUFlLENBQUMsRUFDbkYsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDNUIsT0FBTyxLQUFLLENBQUM7UUFDakIsS0FBSyxTQUFTLENBQUM7UUFDZixLQUFLLFdBQVcsQ0FBQztRQUNqQixLQUFLLHNCQUFzQixDQUFDO1FBQzVCLEtBQUssWUFBWTtZQUNiLDBCQUFNLENBQUMsS0FBSyxDQUFDLHlCQUF5QixFQUFFLCtCQUFhLENBQUMsZUFBZSxDQUFDLEVBQ2xFLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzVCLE9BQU8sS0FBSyxDQUFDO1FBQ2pCLEtBQUssU0FBUztZQUNWLE9BQU8sSUFBSSxDQUFDO1FBQ2hCO1lBQ0ksTUFBTSxJQUFJLEtBQUssQ0FBQyxvQkFBTyxDQUFDLDJCQUEyQixFQUFFLGdCQUFnQixDQUFDLEtBQUssRUFDdkUsK0JBQWEsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDNUM7QUFDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCDCqSAyMDE4IEF0b21pc3QsIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSBcIkBhdG9taXN0L2F1dG9tYXRpb24tY2xpZW50XCI7XG5pbXBvcnQgeyBzcHJpbnRmIH0gZnJvbSBcInNwcmludGYtanNcIjtcbmltcG9ydCB7IGdvYWxLZXlTdHJpbmcsIG1hcEtleVRvR29hbCwgU2RtR29hbCwgU2RtR29hbEtleSB9IGZyb20gXCIuLi8uLi8uLi8uLi9pbmdlc3RlcnMvc2RtR29hbEluZ2VzdGVyXCI7XG5cbi8qXG4gKiBSaWdodCBub3cgdGhlIG9ubHkgcHJlY29uZGl0aW9ucyBzdXBwb3J0ZWQgYXJlIG90aGVyIGdvYWxzLlxuICogVGhlIGludGVudGlvbiBpcyB0aGF0IG90aGVycyB3aWxsIGJlIGV4cHJlc3NlZCwgc3VjaCBhcyByZXF1aXJpbmcgYW4gaW1hZ2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwcmVjb25kaXRpb25zQXJlTWV0KGdvYWw6IFNkbUdvYWwsIGluZm86IHtcbiAgICBnb2Fsc0ZvckNvbW1pdDogU2RtR29hbFtdLCAvLyBJIHdvdWxkIGxpa2UgdG8gbWFrZSB0aGlzIG9wdGlvbmFsIGFuZCBmZXRjaCBpZiBuZWVkZWQgbm90IHByb3ZpZGVkXG59KTogYm9vbGVhbiB7XG4gICAgaWYgKCFnb2FsLnByZUNvbmRpdGlvbnMgfHwgZ29hbC5wcmVDb25kaXRpb25zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgY29uc3QgZmFsc2lmaWNhdGlvbiA9IGdvYWwucHJlQ29uZGl0aW9ucy5maW5kKHAgPT4gIXNhdGlzZmllZChwLCBpbmZvLmdvYWxzRm9yQ29tbWl0KSk7XG4gICAgaWYgKGZhbHNpZmljYXRpb24pIHtcbiAgICAgICAgbG9nZ2VyLmRlYnVnKFwiUHJlY29uZGl0aW9uIG5vdCBtZXQgZm9yICVzOiAlc1wiLCBnb2FsS2V5U3RyaW5nKGdvYWwpLCBnb2FsS2V5U3RyaW5nKGZhbHNpZmljYXRpb24pKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBsb2dnZXIuZGVidWcoXCJBbGwgJWQgcHJlY29uZGl0aW9ucyBzYXRpc2ZpZWQgZm9yICVzXCIsIGdvYWwucHJlQ29uZGl0aW9ucy5sZW5ndGgpO1xuICAgIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBzYXRpc2ZpZWQocHJlY29uZGl0aW9uS2V5OiBTZG1Hb2FsS2V5LCBnb2Fsc0ZvckNvbW1pdDogU2RtR29hbFtdKTogYm9vbGVhbiB7XG4gICAgY29uc3QgcHJlY29uZGl0aW9uR29hbCA9IG1hcEtleVRvR29hbChnb2Fsc0ZvckNvbW1pdCkocHJlY29uZGl0aW9uS2V5KTtcbiAgICBpZiAoIXByZWNvbmRpdGlvbkdvYWwpIHtcbiAgICAgICAgLy8gVE9ETyBDRCBJJ2Qgc3VnZ2VzdCB0aGF0IGdvYWxzIHRoYXQgaGF2ZSBhIHByZWNvbmRpdGlvbiB0aGF0IGRvZXNuJ3QgZXhpc3QgaW4gdGhlIGdvYWwgc2V0XG4gICAgICAgIC8vIGFyZSBzYXRpc2ZpZWRcbiAgICAgICAgbG9nZ2VyLmVycm9yKFwiUHJlY29uZGl0aW9uICVzIG5vdCBmb3VuZCBvbiBjb21taXRcIiwgZ29hbEtleVN0cmluZyhwcmVjb25kaXRpb25LZXkpKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHN3aXRjaCAocHJlY29uZGl0aW9uR29hbC5zdGF0ZSkge1xuICAgICAgICBjYXNlIFwiZmFpbHVyZVwiOlxuICAgICAgICBjYXNlIFwic2tpcHBlZFwiOlxuICAgICAgICAgICAgbG9nZ2VyLmluZm8oXCJQcmVjb25kaXRpb24gJXMgaW4gc3RhdGUgJXMsIHdvbid0IGJlIG1ldFwiLCBnb2FsS2V5U3RyaW5nKHByZWNvbmRpdGlvbktleSksXG4gICAgICAgICAgICAgICAgcHJlY29uZGl0aW9uR29hbC5zdGF0ZSk7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIGNhc2UgXCJwbGFubmVkXCI6XG4gICAgICAgIGNhc2UgXCJyZXF1ZXN0ZWRcIjpcbiAgICAgICAgY2FzZSBcIndhaXRpbmdfZm9yX2FwcHJvdmFsXCI6XG4gICAgICAgIGNhc2UgXCJpbl9wcm9jZXNzXCI6XG4gICAgICAgICAgICBsb2dnZXIuZGVidWcoXCJOb3QgeWV0LiAlcyBpbiBzdGF0ZSAlc1wiLCBnb2FsS2V5U3RyaW5nKHByZWNvbmRpdGlvbktleSksXG4gICAgICAgICAgICAgICAgcHJlY29uZGl0aW9uR29hbC5zdGF0ZSk7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIGNhc2UgXCJzdWNjZXNzXCI6XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihzcHJpbnRmKFwiVW5oYW5kbGVkIHN0YXRlOiAlcyBvbiAlc1wiLCBwcmVjb25kaXRpb25Hb2FsLnN0YXRlLFxuICAgICAgICAgICAgICAgIGdvYWxLZXlTdHJpbmcocHJlY29uZGl0aW9uS2V5KSkpO1xuICAgIH1cbn1cbiJdfQ==