{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/common/listener/support/pushToPublicRepoTest.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/common/listener/support/pushToPublicRepoTest.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;AAEH,8FAA2F;AAE3F,uCAAuC;AAEvC,sGAAgG;AAEhG,MAAM,WAAW,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY,EAAC,CAAC;AAEvD,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAE9B,EAAE,CAAC,iCAAiC,EAAE,GAAS,EAAE;QAC7C,MAAM,EAAE,GAAG,IAAI,6BAAa,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;QACtD,MAAM,CAAC,GAAG,MAAM,8BAAY,CAAC,OAAO,CAAC,EAAC,EAAE,EAAE,WAAW,EAAkC,CAAC,CAAC;QACzF,MAAM,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,CAAA,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAEjB,EAAE,CAAC,kCAAkC,EAAE,GAAS,EAAE;QAC9C,MAAM,EAAE,GAAG,IAAI,6BAAa,CAAC,WAAW,EAAE,qBAAqB,CAAC,CAAC;QACjE,MAAM,CAAC,GAAG,MAAM,8BAAY,CAAC,OAAO,CAAC,EAAC,EAAE,EAAE,WAAW,EAAkC,CAAC,CAAC;QACzF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAA,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAErB,CAAC,CAAC,CAAC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GitHubRepoRef } from \"@atomist/automation-client/operations/common/GitHubRepoRef\";\n\nimport * as assert from \"power-assert\";\nimport { PushListenerInvocation } from \"../../../../src/common/listener/PushListener\";\nimport { ToPublicRepo } from \"../../../../src/common/listener/support/pushtest/commonPushTests\";\n\nconst credentials = { token: process.env.GITHUB_TOKEN};\n\ndescribe(\"pushToPublicRepo\", () => {\n\n    it(\"should work against public repo\", async () => {\n        const id = new GitHubRepoRef(\"atomist\", \"github-sdm\");\n        const r = await ToPublicRepo.mapping({id, credentials} as any as PushListenerInvocation);\n        assert(r);\n    }).timeout(5000);\n\n    it(\"should work against private repo\", async () => {\n        const id = new GitHubRepoRef(\"atomisthq\", \"internal-automation\");\n        const r = await ToPublicRepo.mapping({id, credentials} as any as PushListenerInvocation);\n        assert(!r);\n    }).timeout(5000);\n\n});\n"]}