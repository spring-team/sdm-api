"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_22k48msyld=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/handlers/events/delivery/build/local/lein/packageCljTest.ts",hash="0ebe8182d2c013a24b136fc28a95f0e24635dcdb",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/handlers/events/delivery/build/local/lein/packageCljTest.ts",statementMap:{"0":{start:{line:17,column:16},end:{line:24,column:1}},"1":{start:{line:18,column:4},end:{line:23,column:7}},"2":{start:{line:19,column:36},end:{line:19,column:97}},"3":{start:{line:19,column:42},end:{line:19,column:70}},"4":{start:{line:19,column:85},end:{line:19,column:95}},"5":{start:{line:20,column:35},end:{line:20,column:100}},"6":{start:{line:20,column:41},end:{line:20,column:73}},"7":{start:{line:20,column:88},end:{line:20,column:98}},"8":{start:{line:21,column:32},end:{line:21,column:149}},"9":{start:{line:21,column:97},end:{line:21,column:119}},"10":{start:{line:22,column:8},end:{line:22,column:78}},"11":{start:{line:25,column:0},end:{line:25,column:62}},"12":{start:{line:26,column:23},end:{line:26,column:85}},"13":{start:{line:27,column:26},end:{line:27,column:91}},"14":{start:{line:28,column:15},end:{line:28,column:38}},"15":{start:{line:29,column:22},end:{line:29,column:102}},"16":{start:{line:30,column:0},end:{line:37,column:3}},"17":{start:{line:31,column:4},end:{line:36,column:8}},"18":{start:{line:31,column:47},end:{line:36,column:6}},"19":{start:{line:32,column:18},end:{line:32,column:110}},"20":{start:{line:33,column:23},end:{line:33,column:65}},"21":{start:{line:34,column:8},end:{line:34,column:59}},"22":{start:{line:35,column:8},end:{line:35,column:46}},"23":{start:{line:39,column:15},end:{line:82,column:54}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:44},end:{line:17,column:45}},loc:{start:{line:17,column:89},end:{line:24,column:1}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:36},end:{line:18,column:37}},loc:{start:{line:18,column:63},end:{line:23,column:5}},line:18},"2":{name:"fulfilled",decl:{start:{line:19,column:17},end:{line:19,column:26}},loc:{start:{line:19,column:34},end:{line:19,column:99}},line:19},"3":{name:"rejected",decl:{start:{line:20,column:17},end:{line:20,column:25}},loc:{start:{line:20,column:33},end:{line:20,column:102}},line:20},"4":{name:"step",decl:{start:{line:21,column:17},end:{line:21,column:21}},loc:{start:{line:21,column:30},end:{line:21,column:151}},line:21},"5":{name:"(anonymous_5)",decl:{start:{line:21,column:76},end:{line:21,column:77}},loc:{start:{line:21,column:95},end:{line:21,column:121}},line:21},"6":{name:"(anonymous_6)",decl:{start:{line:30,column:32},end:{line:30,column:33}},loc:{start:{line:30,column:38},end:{line:37,column:1}},line:30},"7":{name:"(anonymous_7)",decl:{start:{line:31,column:41},end:{line:31,column:42}},loc:{start:{line:31,column:47},end:{line:36,column:6}},line:31},"8":{name:"(anonymous_8)",decl:{start:{line:31,column:79},end:{line:31,column:80}},loc:{start:{line:31,column:92},end:{line:36,column:5}},line:31}},branchMap:{"0":{loc:{start:{line:17,column:16},end:{line:24,column:1}},type:"binary-expr",locations:[{start:{line:17,column:17},end:{line:17,column:21}},{start:{line:17,column:25},end:{line:17,column:39}},{start:{line:17,column:44},end:{line:24,column:1}}],line:17},"1":{loc:{start:{line:18,column:16},end:{line:18,column:34}},type:"binary-expr",locations:[{start:{line:18,column:16},end:{line:18,column:17}},{start:{line:18,column:22},end:{line:18,column:33}}],line:18},"2":{loc:{start:{line:21,column:32},end:{line:21,column:148}},type:"cond-expr",locations:[{start:{line:21,column:46},end:{line:21,column:67}},{start:{line:21,column:70},end:{line:21,column:148}}],line:21},"3":{loc:{start:{line:22,column:51},end:{line:22,column:67}},type:"binary-expr",locations:[{start:{line:22,column:51},end:{line:22,column:61}},{start:{line:22,column:65},end:{line:22,column:67}}],line:22}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var __awaiter=(cov_22k48msyld.s[0]++,(cov_22k48msyld.b[0][0]++,this)&&(cov_22k48msyld.b[0][1]++,this.__awaiter)||(cov_22k48msyld.b[0][2]++,function(thisArg,_arguments,P,generator){cov_22k48msyld.f[0]++;cov_22k48msyld.s[1]++;return new((cov_22k48msyld.b[1][0]++,P)||(cov_22k48msyld.b[1][1]++,P=Promise))(function(resolve,reject){cov_22k48msyld.f[1]++;function fulfilled(value){cov_22k48msyld.f[2]++;cov_22k48msyld.s[2]++;try{cov_22k48msyld.s[3]++;step(generator.next(value));}catch(e){cov_22k48msyld.s[4]++;reject(e);}}function rejected(value){cov_22k48msyld.f[3]++;cov_22k48msyld.s[5]++;try{cov_22k48msyld.s[6]++;step(generator["throw"](value));}catch(e){cov_22k48msyld.s[7]++;reject(e);}}function step(result){cov_22k48msyld.f[4]++;cov_22k48msyld.s[8]++;result.done?(cov_22k48msyld.b[2][0]++,resolve(result.value)):(cov_22k48msyld.b[2][1]++,new P(function(resolve){cov_22k48msyld.f[5]++;cov_22k48msyld.s[9]++;resolve(result.value);}).then(fulfilled,rejected));}cov_22k48msyld.s[10]++;step((generator=generator.apply(thisArg,(cov_22k48msyld.b[3][0]++,_arguments)||(cov_22k48msyld.b[3][1]++,[]))).next());});}));cov_22k48msyld.s[11]++;Object.defineProperty(exports,"__esModule",{value:true});const InMemoryFile_1=(cov_22k48msyld.s[12]++,require("@atomist/automation-client/project/mem/InMemoryFile"));const InMemoryProject_1=(cov_22k48msyld.s[13]++,require("@atomist/automation-client/project/mem/InMemoryProject"));const assert=(cov_22k48msyld.s[14]++,require("power-assert"));const leinBuilder_1=(cov_22k48msyld.s[15]++,require("../../../../../../../src/common/delivery/build/local/lein/leinBuilder"));cov_22k48msyld.s[16]++;describe("package.clj parsing",()=>{cov_22k48msyld.f[6]++;cov_22k48msyld.s[17]++;it("should parse valid project.clj",()=>{cov_22k48msyld.f[7]++;cov_22k48msyld.s[18]++;return __awaiter(this,void 0,void 0,function*(){cov_22k48msyld.f[8]++;const p=(cov_22k48msyld.s[19]++,InMemoryProject_1.InMemoryProject.of(new InMemoryFile_1.InMemoryFile("project.clj",Valid1)));const parsed=(cov_22k48msyld.s[20]++,yield leinBuilder_1.projectCljToAppInfo(p));cov_22k48msyld.s[21]++;assert.equal(parsed.name,"automation-client-clj");cov_22k48msyld.s[22]++;assert.equal(parsed.version,"0.5.0");});});});/* tslint:disable */const Valid1=(cov_22k48msyld.s[23]++,`(defproject com.atomist/automation-client-clj "0.5.0"
  :description "Atomist automation client implementation in Clojure"
  :url "https://github.com/atomisthq/automation-client-clj"
  :license {:name "Eclipse Public License"
            :url "http://www.eclipse.org/legal/epl-v10.html"}
  :dependencies [[org.clojure/clojure "1.9.0"]
                 [org.clojure/core.async "0.4.474"]

                 ;; websocket
                 [org.clojure/data.json "0.2.6"]
                 [clj-http "3.7.0"]
                 [stylefruits/gniazdo "1.0.1"]

                 ;; util
                 [mount "0.1.11"]
                 [environ "1.0.0"]
                 [diehard "0.7.0"]

                 ;; logging
                 [org.clojure/tools.logging "0.3.1"]
                 [ch.qos.logback/logback-classic "1.1.7"]
                 [org.slf4j/slf4j-api "1.7.21"]
                 [io.clj/logging "0.8.1"]
                 [com.rpl/specter "1.1.0"]]

  :plugins [[lein-environ "1.1.0"]
            [environ/environ.lein "0.3.1"]]

  :min-lein-version "2.6.1" :deploy-repositories [["clojars" {:url "https://clojars.org/repo"
                                                              :username :env/clojars_username
                                                              :password :env/clojars_password
                                                              :sign-releases false}]]

  :profiles {:dev {:dependencies [[org.clojure/test.check "0.9.0"]
                                  [ring/ring-mock "0.3.0"]
                                  [environ "1.1.0"]
                                  [org.clojure/tools.nrepl "0.2.12"]
                                  [org.clojure/tools.namespace "0.2.11"]]
                   :source-paths ["env/dev/clj"]
                   :plugins [[lein-set-version "0.4.1"]
                             [lein-project-version "0.1.0"]]
                   :resource-paths ["env/dev/resources"]
                   :repl-options {:init-ns user}}})
(defproject com.atomist/automation-client-clj "0.5.0"`);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvdGVzdC9oYW5kbGVycy9ldmVudHMvZGVsaXZlcnkvYnVpbGQvbG9jYWwvbGVpbi9wYWNrYWdlQ2xqVGVzdC50cyIsInNvdXJjZXMiOlsiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvdGVzdC9oYW5kbGVycy9ldmVudHMvZGVsaXZlcnkvYnVpbGQvbG9jYWwvbGVpbi9wYWNrYWdlQ2xqVGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7O0dBY0c7Ozs7Ozs7Ozs7QUFFSCxzRkFBbUY7QUFDbkYsNEZBQXlGO0FBQ3pGLHVDQUF1QztBQUN2Qyx1R0FBNEc7QUFFNUcsUUFBUSxDQUFDLHFCQUFxQixFQUFFLEdBQUcsRUFBRTtJQUVqQyxFQUFFLENBQUMsZ0NBQWdDLEVBQUUsR0FBUyxFQUFFO1FBQzVDLE1BQU0sQ0FBQyxHQUFHLGlDQUFlLENBQUMsRUFBRSxDQUFDLElBQUksMkJBQVksQ0FBQyxhQUFhLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUN0RSxNQUFNLE1BQU0sR0FBRyxNQUFNLGlDQUFtQixDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzVDLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSx1QkFBdUIsQ0FBQyxDQUFDO1FBQ25ELE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztJQUMxQyxDQUFDLENBQUEsQ0FBQyxDQUFDO0FBRVAsQ0FBQyxDQUFDLENBQUM7QUFFSCxvQkFBb0I7QUFFcEIsTUFBTSxNQUFNLEdBQUc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7c0RBMkN1QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCDCqSAyMDE4IEF0b21pc3QsIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgSW5NZW1vcnlGaWxlIH0gZnJvbSBcIkBhdG9taXN0L2F1dG9tYXRpb24tY2xpZW50L3Byb2plY3QvbWVtL0luTWVtb3J5RmlsZVwiO1xuaW1wb3J0IHsgSW5NZW1vcnlQcm9qZWN0IH0gZnJvbSBcIkBhdG9taXN0L2F1dG9tYXRpb24tY2xpZW50L3Byb2plY3QvbWVtL0luTWVtb3J5UHJvamVjdFwiO1xuaW1wb3J0ICogYXMgYXNzZXJ0IGZyb20gXCJwb3dlci1hc3NlcnRcIjtcbmltcG9ydCB7IHByb2plY3RDbGpUb0FwcEluZm8gfSBmcm9tIFwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbW1vbi9kZWxpdmVyeS9idWlsZC9sb2NhbC9sZWluL2xlaW5CdWlsZGVyXCI7XG5cbmRlc2NyaWJlKFwicGFja2FnZS5jbGogcGFyc2luZ1wiLCAoKSA9PiB7XG5cbiAgICBpdChcInNob3VsZCBwYXJzZSB2YWxpZCBwcm9qZWN0LmNsalwiLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHAgPSBJbk1lbW9yeVByb2plY3Qub2YobmV3IEluTWVtb3J5RmlsZShcInByb2plY3QuY2xqXCIsIFZhbGlkMSkpO1xuICAgICAgICBjb25zdCBwYXJzZWQgPSBhd2FpdCBwcm9qZWN0Q2xqVG9BcHBJbmZvKHApO1xuICAgICAgICBhc3NlcnQuZXF1YWwocGFyc2VkLm5hbWUsIFwiYXV0b21hdGlvbi1jbGllbnQtY2xqXCIpO1xuICAgICAgICBhc3NlcnQuZXF1YWwocGFyc2VkLnZlcnNpb24sIFwiMC41LjBcIik7XG4gICAgfSk7XG5cbn0pO1xuXG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuXG5jb25zdCBWYWxpZDEgPSBgKGRlZnByb2plY3QgY29tLmF0b21pc3QvYXV0b21hdGlvbi1jbGllbnQtY2xqIFwiMC41LjBcIlxuICA6ZGVzY3JpcHRpb24gXCJBdG9taXN0IGF1dG9tYXRpb24gY2xpZW50IGltcGxlbWVudGF0aW9uIGluIENsb2p1cmVcIlxuICA6dXJsIFwiaHR0cHM6Ly9naXRodWIuY29tL2F0b21pc3RocS9hdXRvbWF0aW9uLWNsaWVudC1jbGpcIlxuICA6bGljZW5zZSB7Om5hbWUgXCJFY2xpcHNlIFB1YmxpYyBMaWNlbnNlXCJcbiAgICAgICAgICAgIDp1cmwgXCJodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbFwifVxuICA6ZGVwZW5kZW5jaWVzIFtbb3JnLmNsb2p1cmUvY2xvanVyZSBcIjEuOS4wXCJdXG4gICAgICAgICAgICAgICAgIFtvcmcuY2xvanVyZS9jb3JlLmFzeW5jIFwiMC40LjQ3NFwiXVxuXG4gICAgICAgICAgICAgICAgIDs7IHdlYnNvY2tldFxuICAgICAgICAgICAgICAgICBbb3JnLmNsb2p1cmUvZGF0YS5qc29uIFwiMC4yLjZcIl1cbiAgICAgICAgICAgICAgICAgW2Nsai1odHRwIFwiMy43LjBcIl1cbiAgICAgICAgICAgICAgICAgW3N0eWxlZnJ1aXRzL2duaWF6ZG8gXCIxLjAuMVwiXVxuXG4gICAgICAgICAgICAgICAgIDs7IHV0aWxcbiAgICAgICAgICAgICAgICAgW21vdW50IFwiMC4xLjExXCJdXG4gICAgICAgICAgICAgICAgIFtlbnZpcm9uIFwiMS4wLjBcIl1cbiAgICAgICAgICAgICAgICAgW2RpZWhhcmQgXCIwLjcuMFwiXVxuXG4gICAgICAgICAgICAgICAgIDs7IGxvZ2dpbmdcbiAgICAgICAgICAgICAgICAgW29yZy5jbG9qdXJlL3Rvb2xzLmxvZ2dpbmcgXCIwLjMuMVwiXVxuICAgICAgICAgICAgICAgICBbY2gucW9zLmxvZ2JhY2svbG9nYmFjay1jbGFzc2ljIFwiMS4xLjdcIl1cbiAgICAgICAgICAgICAgICAgW29yZy5zbGY0ai9zbGY0ai1hcGkgXCIxLjcuMjFcIl1cbiAgICAgICAgICAgICAgICAgW2lvLmNsai9sb2dnaW5nIFwiMC44LjFcIl1cbiAgICAgICAgICAgICAgICAgW2NvbS5ycGwvc3BlY3RlciBcIjEuMS4wXCJdXVxuXG4gIDpwbHVnaW5zIFtbbGVpbi1lbnZpcm9uIFwiMS4xLjBcIl1cbiAgICAgICAgICAgIFtlbnZpcm9uL2Vudmlyb24ubGVpbiBcIjAuMy4xXCJdXVxuXG4gIDptaW4tbGVpbi12ZXJzaW9uIFwiMi42LjFcIiA6ZGVwbG95LXJlcG9zaXRvcmllcyBbW1wiY2xvamFyc1wiIHs6dXJsIFwiaHR0cHM6Ly9jbG9qYXJzLm9yZy9yZXBvXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOnVzZXJuYW1lIDplbnYvY2xvamFyc191c2VybmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6cGFzc3dvcmQgOmVudi9jbG9qYXJzX3Bhc3N3b3JkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpzaWduLXJlbGVhc2VzIGZhbHNlfV1dXG5cbiAgOnByb2ZpbGVzIHs6ZGV2IHs6ZGVwZW5kZW5jaWVzIFtbb3JnLmNsb2p1cmUvdGVzdC5jaGVjayBcIjAuOS4wXCJdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW3JpbmcvcmluZy1tb2NrIFwiMC4zLjBcIl1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbZW52aXJvbiBcIjEuMS4wXCJdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW29yZy5jbG9qdXJlL3Rvb2xzLm5yZXBsIFwiMC4yLjEyXCJdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW29yZy5jbG9qdXJlL3Rvb2xzLm5hbWVzcGFjZSBcIjAuMi4xMVwiXV1cbiAgICAgICAgICAgICAgICAgICA6c291cmNlLXBhdGhzIFtcImVudi9kZXYvY2xqXCJdXG4gICAgICAgICAgICAgICAgICAgOnBsdWdpbnMgW1tsZWluLXNldC12ZXJzaW9uIFwiMC40LjFcIl1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW2xlaW4tcHJvamVjdC12ZXJzaW9uIFwiMC4xLjBcIl1dXG4gICAgICAgICAgICAgICAgICAgOnJlc291cmNlLXBhdGhzIFtcImVudi9kZXYvcmVzb3VyY2VzXCJdXG4gICAgICAgICAgICAgICAgICAgOnJlcGwtb3B0aW9ucyB7OmluaXQtbnMgdXNlcn19fSlcbihkZWZwcm9qZWN0IGNvbS5hdG9taXN0L2F1dG9tYXRpb24tY2xpZW50LWNsaiBcIjAuNS4wXCJgO1xuIl19