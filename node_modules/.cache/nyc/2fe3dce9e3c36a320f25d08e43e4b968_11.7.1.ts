"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_d672btio1=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/command/editor/editorCommand.ts",hash="596b13bbb99f07bff87e35da465065d9e14a37e1",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/command/editor/editorCommand.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:40},end:{line:18,column:132}},"2":{start:{line:19,column:20},end:{line:19,column:83}},"3":{start:{line:20,column:26},end:{line:20,column:95}},"4":{start:{line:21,column:28},end:{line:21,column:88}},"5":{start:{line:22,column:15},end:{line:22,column:38}},"6":{start:{line:23,column:31},end:{line:23,column:73}},"7":{start:{line:24,column:34},end:{line:24,column:79}},"8":{start:{line:25,column:26},end:{line:25,column:55}},"9":{start:{line:26,column:25},end:{line:26,column:52}},"10":{start:{line:27,column:25},end:{line:27,column:52}},"11":{start:{line:39,column:24},end:{line:39,column:51}},"12":{start:{line:40,column:25},end:{line:40,column:435}},"13":{start:{line:40,column:142},end:{line:40,column:265}},"14":{start:{line:40,column:290},end:{line:40,column:422}},"15":{start:{line:41,column:4},end:{line:41,column:160}},"16":{start:{line:43,column:0},end:{line:43,column:38}},"17":{start:{line:50,column:25},end:{line:50,column:69}},"18":{start:{line:51,column:4},end:{line:64,column:10}},"19":{start:{line:54,column:29},end:{line:54,column:73}},"20":{start:{line:55,column:29},end:{line:55,column:37}},"21":{start:{line:58,column:12},end:{line:58,column:79}},"22":{start:{line:59,column:12},end:{line:59,column:39}},"23":{start:{line:60,column:12},end:{line:62,column:14}},"24":{start:{line:61,column:16},end:{line:61,column:34}},"25":{start:{line:63,column:12},end:{line:63,column:28}},"26":{start:{line:66,column:0},end:{line:66,column:78}},"27":{start:{line:68,column:4},end:{line:68,column:23}},"28":{start:{line:71,column:4},end:{line:74,column:5}},"29":{start:{line:72,column:8},end:{line:72,column:58}},"30":{start:{line:73,column:8},end:{line:73,column:37}}},fnMap:{"0":{name:"editorCommand",decl:{start:{line:38,column:9},end:{line:38,column:22}},loc:{start:{line:38,column:97},end:{line:42,column:1}},line:38},"1":{name:"(anonymous_1)",decl:{start:{line:40,column:137},end:{line:40,column:138}},loc:{start:{line:40,column:142},end:{line:40,column:265}},line:40},"2":{name:"(anonymous_2)",decl:{start:{line:40,column:278},end:{line:40,column:279}},loc:{start:{line:40,column:290},end:{line:40,column:422}},line:40},"3":{name:"toEditorOrReviewerParametersMaker",decl:{start:{line:49,column:9},end:{line:49,column:42}},loc:{start:{line:49,column:56},end:{line:65,column:1}},line:49},"4":{name:"(anonymous_4)",decl:{start:{line:53,column:8},end:{line:53,column:9}},loc:{start:{line:53,column:14},end:{line:64,column:9}},line:53},"5":{name:"(anonymous_5)",decl:{start:{line:60,column:39},end:{line:60,column:40}},loc:{start:{line:60,column:45},end:{line:62,column:13}},line:60},"6":{name:"isEditorOrReviewerParameters",decl:{start:{line:67,column:9},end:{line:67,column:37}},loc:{start:{line:67,column:41},end:{line:69,column:1}},line:67},"7":{name:"validate",decl:{start:{line:70,column:9},end:{line:70,column:17}},loc:{start:{line:70,column:27},end:{line:75,column:1}},line:70}},branchMap:{"0":{loc:{start:{line:38,column:34},end:{line:38,column:81}},type:"default-arg",locations:[{start:{line:38,column:48},end:{line:38,column:81}}],line:38},"1":{loc:{start:{line:38,column:83},end:{line:38,column:95}},type:"default-arg",locations:[{start:{line:38,column:93},end:{line:38,column:95}}],line:38},"2":{loc:{start:{line:39,column:24},end:{line:39,column:51}},type:"binary-expr",locations:[{start:{line:39,column:24},end:{line:39,column:43}},{start:{line:39,column:47},end:{line:39,column:51}}],line:39},"3":{loc:{start:{line:40,column:318},end:{line:40,column:374}},type:"binary-expr",locations:[{start:{line:40,column:318},end:{line:40,column:342}},{start:{line:40,column:346},end:{line:40,column:374}}],line:40},"4":{loc:{start:{line:40,column:376},end:{line:40,column:421}},type:"binary-expr",locations:[{start:{line:40,column:376},end:{line:40,column:406}},{start:{line:40,column:410},end:{line:40,column:421}}],line:40},"5":{loc:{start:{line:51,column:11},end:{line:64,column:9}},type:"cond-expr",locations:[{start:{line:52,column:8},end:{line:52,column:19}},{start:{line:53,column:8},end:{line:64,column:9}}],line:51},"6":{loc:{start:{line:71,column:4},end:{line:74,column:5}},type:"if",locations:[{start:{line:71,column:4},end:{line:74,column:5}},{start:{line:71,column:4},end:{line:74,column:5}}],line:71}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0],"1":[0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_d672btio1.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const GitHubFallbackReposParameters_1=(cov_d672btio1.s[1]++,require("@atomist/automation-client/operations/common/params/GitHubFallbackReposParameters"));const editModes_1=(cov_d672btio1.s[2]++,require("@atomist/automation-client/operations/edit/editModes"));const editorToCommand_1=(cov_d672btio1.s[3]++,require("@atomist/automation-client/operations/edit/editorToCommand"));const constructionUtils_1=(cov_d672btio1.s[4]++,require("@atomist/automation-client/util/constructionUtils"));const assert=(cov_d672btio1.s[5]++,require("power-assert"));const CachingProjectLoader_1=(cov_d672btio1.s[6]++,require("../../repo/CachingProjectLoader"));const projectLoaderRepoLoader_1=(cov_d672btio1.s[7]++,require("../../repo/projectLoaderRepoLoader"));const EmptyParameters_1=(cov_d672btio1.s[8]++,require("../EmptyParameters"));const allReposInTeam_1=(cov_d672btio1.s[9]++,require("./allReposInTeam"));const editorWrappers_1=(cov_d672btio1.s[10]++,require("./editorWrappers"));/**
 * Wrap an editor in a command handler, allowing use of custom parameters.
 * Targeting (targets property) is handled automatically if the parameters
 * do not implement TargetsParams
 * @param edd function to make a fresh editor instance from the params
 * @param name editor name
 * @param paramsMaker parameters factory, typically the name of a class with a no arg constructor
 * @param details optional details to customize behavior
 * Add intent "edit <name>"
 */function editorCommand(edd,name,paramsMaker=(cov_d672btio1.b[0][0]++,EmptyParameters_1.EmptyParameters),details=(cov_d672btio1.b[1][0]++,{})){cov_d672btio1.f[0]++;const description=(cov_d672btio1.s[11]++,(cov_d672btio1.b[2][0]++,details.description)||(cov_d672btio1.b[2][1]++,name));const detailsToUse=(cov_d672btio1.s[12]++,Object.assign({description,intent:`edit ${name}`,repoFinder:allReposInTeam_1.allReposInTeam(),repoLoader:p=>{cov_d672btio1.f[1]++;cov_d672btio1.s[13]++;return projectLoaderRepoLoader_1.projectLoaderRepoLoader(new CachingProjectLoader_1.CachingProjectLoader(),p.targets.credentials);},editMode:params=>{cov_d672btio1.f[2]++;cov_d672btio1.s[14]++;return new editModes_1.PullRequest((cov_d672btio1.b[3][0]++,params.desiredBranchName)||(cov_d672btio1.b[3][1]++,`edit-${name}-${Date.now()}`),(cov_d672btio1.b[4][0]++,params.desiredPullRequestTitle)||(cov_d672btio1.b[4][1]++,description));}},details));cov_d672btio1.s[15]++;return editorToCommand_1.editorHandler(editorWrappers_1.chattyEditorFactory(name,edd),toEditorOrReviewerParametersMaker(paramsMaker),name,detailsToUse);}cov_d672btio1.s[16]++;exports.editorCommand=editorCommand;/**
 * Return a parameters maker that is targeting aware
 * @param {Maker<PARAMS>} paramsMaker
 * @return {Maker<EditorOrReviewerParameters & PARAMS>}
 */function toEditorOrReviewerParametersMaker(paramsMaker){cov_d672btio1.f[3]++;const sampleParams=(cov_d672btio1.s[17]++,constructionUtils_1.toFactory(paramsMaker)());cov_d672btio1.s[18]++;return isEditorOrReviewerParameters(sampleParams)?(cov_d672btio1.b[5][0]++,paramsMaker):(cov_d672btio1.b[5][1]++,()=>{cov_d672btio1.f[4]++;const rawParms=(cov_d672btio1.s[19]++,constructionUtils_1.toFactory(paramsMaker)());const allParms=(cov_d672btio1.s[20]++,rawParms);const targets=(// new BitBucketTargetsParams();
cov_d672btio1.s[21]++,new GitHubFallbackReposParameters_1.GitHubFallbackReposParameters());cov_d672btio1.s[22]++;allParms.targets=targets;cov_d672btio1.s[23]++;allParms.bindAndValidate=()=>{cov_d672btio1.f[5]++;cov_d672btio1.s[24]++;validate(targets);};cov_d672btio1.s[25]++;return allParms;});}cov_d672btio1.s[26]++;exports.toEditorOrReviewerParametersMaker=toEditorOrReviewerParametersMaker;function isEditorOrReviewerParameters(p){cov_d672btio1.f[6]++;cov_d672btio1.s[27]++;return!!p.targets;}function validate(targets){cov_d672btio1.f[7]++;cov_d672btio1.s[28]++;if(!targets.repo){cov_d672btio1.b[6][0]++;cov_d672btio1.s[29]++;assert(!!targets.repos,"Must set repos or repo");cov_d672btio1.s[30]++;targets.repo=targets.repos;}else{cov_d672btio1.b[6][1]++;}}//# sourceMappingURL=data:application/json;charset=utf-8;base64,