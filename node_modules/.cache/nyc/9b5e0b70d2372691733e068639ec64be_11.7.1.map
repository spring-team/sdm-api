{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/common/listener/pushRuleTest.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/common/listener/pushRuleTest.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;AAEH,4FAAuF;AACvF,uCAAuC;AACvC,gEAAuE;AACvE,yFAAsF;AAEtF,8EAA2E;AAC3E,iGAAwF;AAExF,QAAQ,CAAC,2BAA2B,EAAE,GAAG,EAAE;IAEvC,EAAE,CAAC,mDAAmD,EAAE,GAAS,EAAE;QAC/D,MAAM,IAAI,GAAG,IAAI,qBAAS,CAAC,MAAM,EAAE,CAAC,2BAAiB,CAAC,qBAAM,CAAC;iBACxD,OAAO,CAAC,yBAAyB,CAAC;iBAClC,QAAQ,CAAC,2BAAY,CAAC,CAAC,CAAC,CAAC;QAE9B,MAAM,OAAO,GAAG,iCAAe,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAC,EAC3D,EAAC,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;QAC3C,MAAM,QAAQ,GAAG,EAAC,EAAE,EAAE,OAAO,EAAC,CAAC;QAC/B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,EAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAkC,CAAC,CAAC;QAE9F,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC;IAEpB,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE,GAAS,EAAE;QACzD,MAAM,IAAI,GAAG,IAAI,qBAAS,CAAC,MAAM,EAAE,CAAC,2BAAiB,CAAC,qBAAM,CAAC;iBACxD,OAAO,CAAC,yBAAyB,CAAC;iBAClC,QAAQ,CAAC,2BAAY,CAAC,CAAC,CAAC,CAAC;QAE9B,MAAM,OAAO,GAAG,iCAAe,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAC,EAC3D,EAAC,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;QAC1C,MAAM,QAAQ,GAAG,EAAC,EAAE,EAAE,QAAQ,EAAC,CAAC;QAChC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,EAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAkC,CAAC,CAAC;QAE9F,MAAM,CAAC,MAAM,CAAC,CAAC;IAEnB,CAAC,CAAA,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {InMemoryProject} from \"@atomist/automation-client/project/mem/InMemoryProject\";\nimport * as assert from \"power-assert\";\nimport { whenPushSatisfies } from \"../../../src/blueprint/dsl/goalDsl\";\nimport { LibraryGoals } from \"../../../src/common/delivery/goals/common/libraryGoals\";\nimport { PushListenerInvocation } from \"../../../src/common/listener/PushListener\";\nimport { PushRules } from \"../../../src/common/listener/support/PushRules\";\nimport { IsLein } from \"../../../src/common/listener/support/pushtest/jvm/jvmPushTests\";\n\ndescribe(\"Construction of PushRules\", () => {\n\n    it(\"Does not think an empty project is a lein project\", async () => {\n        const rule = new PushRules(\"test\", [whenPushSatisfies(IsLein)\n            .itMeans(\"Build a Clojure library\")\n            .setGoals(LibraryGoals)]);\n\n        const project = InMemoryProject.from({owner: \"yes\", repo: \"no\"},\n            {path: \"package.json\", content: \"{}\"});\n        const fakePush = {id: \"test1\"};\n        const result = await rule.mapping({project, push: fakePush} as any as PushListenerInvocation);\n\n        assert(!result);\n\n    });\n\n    it(\"Does think a lein project is a lein project\", async () => {\n        const rule = new PushRules(\"test\", [whenPushSatisfies(IsLein)\n            .itMeans(\"Build a Clojure library\")\n            .setGoals(LibraryGoals)]);\n\n        const project = InMemoryProject.from({owner: \"yes\", repo: \"no\"},\n            {path: \"project.clj\", content: \"{}\"});\n        const fakePush = {id: \"ttest2\"};\n        const result = await rule.mapping({project, push: fakePush} as any as PushListenerInvocation);\n\n        assert(result);\n\n    });\n});\n"]}