{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/handlers/events/delivery/GoalsTest.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/handlers/events/delivery/GoalsTest.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH,uCAAuC;AACvC,6EAAkF;AAClF,0FAGkE;AAClE,sGAA6H;AAE7H,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAE5B,EAAE,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAC1B,MAAM,MAAM,GAAG,4BAAY,CAAC,2BAAa,CAAC,CAAC;QAC3C,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACpC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,2BAAW,CAAC,CAAC;QACvC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACjC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACjC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;QACrC,MAAM,CAAC,8BAAc,CAAC,sCAAwB,EAAE,uCAAsB,CAAC,CAAC,CAAC;IAC7E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE,GAAG,EAAE;QAClC,MAAM,CAAC,8BAAc,CAAC,0BAAY,EAAE,sCAAwB,CAAC,CAAC,CAAC;IACnE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,GAAG,EAAE;QACxC,MAAM,CAAC,8BAAc,CAAC,yCAA2B,EAAE,uCAAyB,CAAC,CAAC,CAAC;IACnF,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assert from \"power-assert\";\nimport { StagingEndpointContext } from \"../../../../src/blueprint/wellKnownGoals\";\nimport {\n    BuildContext,\n    ProductionDeploymentContext, ProductionEndpointContext, ReviewContext, StagingDeploymentContext,\n} from \"../../../../src/common/delivery/goals/common/commonGoals\";\nimport {BaseContext, contextIsAfter, splitContext} from \"../../../../src/common/delivery/goals/support/github/gitHubContext\";\n\ndescribe(\"Goal handling\", () => {\n\n   it(\"parses my contexts\", () => {\n       const result = splitContext(ReviewContext);\n       assert.equal(result.name, \"review\");\n       assert.equal(result.base, BaseContext);\n       assert.equal(result.env, \"code\");\n       assert.equal(result.envOrder, 0);\n       assert.equal(result.goalOrder, 1);\n   });\n\n   it(\"says endpoint is after deploy\", () => {\n       assert(contextIsAfter(StagingDeploymentContext, StagingEndpointContext));\n   });\n\n   it(\"says deploy is after build\", () => {\n       assert(contextIsAfter(BuildContext, StagingDeploymentContext));\n   });\n\n   it(\"says prod endpoint is after prod \", () => {\n        assert(contextIsAfter(ProductionDeploymentContext, ProductionEndpointContext));\n    });\n\n});\n"]}