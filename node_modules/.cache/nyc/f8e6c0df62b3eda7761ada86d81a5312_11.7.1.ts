"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_kua2qjnr6=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/goals/common/commonGoals.ts",hash="0149e2c30bca519d78ebfd0b0dffdca5d5c1cfa4",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/delivery/goals/common/commonGoals.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:25},end:{line:18,column:72}},"2":{start:{line:19,column:15},end:{line:19,column:33}},"3":{start:{line:20,column:16},end:{line:20,column:35}},"4":{start:{line:21,column:24},end:{line:21,column:66}},"5":{start:{line:22,column:0},end:{line:28,column:3}},"6":{start:{line:29,column:0},end:{line:38,column:31}},"7":{start:{line:39,column:0},end:{line:47,column:56}},"8":{start:{line:48,column:0},end:{line:55,column:34}},"9":{start:{line:56,column:0},end:{line:62,column:3}},"10":{start:{line:63,column:0},end:{line:69,column:3}},"11":{start:{line:70,column:0},end:{line:76,column:3}},"12":{start:{line:78,column:0},end:{line:84,column:41}},"13":{start:{line:90,column:0},end:{line:90,column:81}}},fnMap:{},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},f:{},b:{},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_kua2qjnr6.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const wellKnownGoals_1=(cov_kua2qjnr6.s[1]++,require("../../../../blueprint/wellKnownGoals"));const Goal_1=(cov_kua2qjnr6.s[2]++,require("../Goal"));const Goals_1=(cov_kua2qjnr6.s[3]++,require("../Goals"));const gitHubContext_1=(cov_kua2qjnr6.s[4]++,require("../support/github/gitHubContext"));cov_kua2qjnr6.s[5]++;exports.VersionGoal=new Goal_1.Goal({uniqueName:"Version",environment:gitHubContext_1.IndependentOfEnvironment,orderedName:"0.1-version",workingDescription:"Calculating project version...",completedDescription:"Versioned"});cov_kua2qjnr6.s[6]++;exports.DockerBuildGoal=new Goal_1.GoalWithPrecondition({uniqueName:"DockerBuild",environment:gitHubContext_1.IndependentOfEnvironment,orderedName:"3-docker",displayName:"docker build",workingDescription:"Running Docker build...",completedDescription:"Docker build successful",failedDescription:"Failed to build Docker image",isolated:true},wellKnownGoals_1.BuildGoal);cov_kua2qjnr6.s[7]++;exports.TagGoal=new Goal_1.GoalWithPrecondition({uniqueName:"Tag",environment:gitHubContext_1.IndependentOfEnvironment,orderedName:"4-tag",displayName:"tag",workingDescription:"Tagging...",completedDescription:"Tagged",failedDescription:"Failed to create Tag"},exports.DockerBuildGoal,wellKnownGoals_1.BuildGoal);cov_kua2qjnr6.s[8]++;exports.StagingDeploymentGoal=new Goal_1.GoalWithPrecondition({uniqueName:"DeployToTest",environment:gitHubContext_1.StagingEnvironment,orderedName:"3-deploy",displayName:"deploy to Test",completedDescription:"Deployed to Test",failedDescription:"Test deployment failure"},wellKnownGoals_1.ArtifactGoal);cov_kua2qjnr6.s[9]++;exports.StagingUndeploymentGoal=new Goal_1.Goal({uniqueName:"UndeployFromTest",environment:gitHubContext_1.ProjectDisposalEnvironment,orderedName:"2-staging-undeploy",displayName:"undeploy from test",completedDescription:"not deployed in test"});cov_kua2qjnr6.s[10]++;exports.ProductionUndeploymentGoal=new Goal_1.Goal({uniqueName:"UndeployFromProduction",environment:gitHubContext_1.ProjectDisposalEnvironment,orderedName:"3-prod-undeploy",displayName:"undeploy from Prod",completedDescription:"not deployed in Prod"});cov_kua2qjnr6.s[11]++;exports.LocalUndeploymentGoal=new Goal_1.Goal({uniqueName:"UndeployHere",environment:gitHubContext_1.ProjectDisposalEnvironment,orderedName:"1-undeploy-locally",failedDescription:"Failed at local undeploy",completedDescription:"not deployed locally"});// not an enforced precondition, but it's real enough to graph
cov_kua2qjnr6.s[12]++;exports.LocalEndpointGoal=new Goal_1.GoalWithPrecondition({uniqueName:"FindLocalEndpoint",environment:gitHubContext_1.IndependentOfEnvironment,orderedName:"2-endpoint",displayName:"locate local service endpoint",completedDescription:"Here is the local service endpoint"},wellKnownGoals_1.LocalDeploymentGoal);/**
 * Special Goals object to be returned if changes are immaterial.
 * The identity of this object is important.
 * @type {Goals}
 */cov_kua2qjnr6.s[13]++;exports.NoGoals=new Goals_1.Goals("No action needed",wellKnownGoals_1.NoGoal);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2NvbW1vbi9kZWxpdmVyeS9nb2Fscy9jb21tb24vY29tbW9uR29hbHMudHMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9yb2Rqb2huc29uL3Nmb3J6YW5kby1kZXYvaWRlYS1wcm9qZWN0cy9teS1mbG93L3NyYy9jb21tb24vZGVsaXZlcnkvZ29hbHMvY29tbW9uL2NvbW1vbkdvYWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7Ozs7R0FjRzs7QUFFSCx5RUFPOEM7QUFDOUMsa0NBQXFEO0FBQ3JELG9DQUFpQztBQUNqQyxtRUFBMkg7QUFFOUcsUUFBQSxXQUFXLEdBQUcsSUFBSSxXQUFJLENBQUM7SUFDaEMsVUFBVSxFQUFFLFNBQVM7SUFDckIsV0FBVyxFQUFFLHdDQUF3QjtJQUNyQyxXQUFXLEVBQUUsYUFBYTtJQUMxQixrQkFBa0IsRUFBRSxnQ0FBZ0M7SUFDcEQsb0JBQW9CLEVBQUUsV0FBVztDQUNwQyxDQUFDLENBQUM7QUFFVSxRQUFBLGVBQWUsR0FBRyxJQUFJLDJCQUFvQixDQUFDO0lBQ3BELFVBQVUsRUFBRSxhQUFhO0lBQ3pCLFdBQVcsRUFBRSx3Q0FBd0I7SUFDckMsV0FBVyxFQUFFLFVBQVU7SUFDdkIsV0FBVyxFQUFFLGNBQWM7SUFDM0Isa0JBQWtCLEVBQUUseUJBQXlCO0lBQzdDLG9CQUFvQixFQUFFLHlCQUF5QjtJQUMvQyxpQkFBaUIsRUFBRSw4QkFBOEI7SUFDakQsUUFBUSxFQUFFLElBQUk7Q0FDakIsRUFBRSwwQkFBUyxDQUFDLENBQUM7QUFFRCxRQUFBLE9BQU8sR0FBRyxJQUFJLDJCQUFvQixDQUFDO0lBQzVDLFVBQVUsRUFBRSxLQUFLO0lBQ2pCLFdBQVcsRUFBRSx3Q0FBd0I7SUFDckMsV0FBVyxFQUFFLE9BQU87SUFDcEIsV0FBVyxFQUFFLEtBQUs7SUFDbEIsa0JBQWtCLEVBQUUsWUFBWTtJQUNoQyxvQkFBb0IsRUFBRSxRQUFRO0lBQzlCLGlCQUFpQixFQUFFLHNCQUFzQjtDQUM1QyxFQUFFLHVCQUFlLEVBQUUsMEJBQVMsQ0FBQyxDQUFDO0FBRWxCLFFBQUEscUJBQXFCLEdBQUcsSUFBSSwyQkFBb0IsQ0FBQztJQUMxRCxVQUFVLEVBQUUsY0FBYztJQUMxQixXQUFXLEVBQUUsa0NBQWtCO0lBQy9CLFdBQVcsRUFBRSxVQUFVO0lBQ3ZCLFdBQVcsRUFBRSxnQkFBZ0I7SUFDN0Isb0JBQW9CLEVBQUUsa0JBQWtCO0lBQ3hDLGlCQUFpQixFQUFFLHlCQUF5QjtDQUMvQyxFQUFFLDZCQUFZLENBQUMsQ0FBQztBQUVKLFFBQUEsdUJBQXVCLEdBQUcsSUFBSSxXQUFJLENBQUM7SUFDNUMsVUFBVSxFQUFFLGtCQUFrQjtJQUM5QixXQUFXLEVBQUUsMENBQTBCO0lBQ3ZDLFdBQVcsRUFBRSxvQkFBb0I7SUFDakMsV0FBVyxFQUFFLG9CQUFvQjtJQUNqQyxvQkFBb0IsRUFBRSxzQkFBc0I7Q0FDL0MsQ0FBQyxDQUFDO0FBRVUsUUFBQSwwQkFBMEIsR0FBRyxJQUFJLFdBQUksQ0FBQztJQUMvQyxVQUFVLEVBQUUsd0JBQXdCO0lBQ3BDLFdBQVcsRUFBRSwwQ0FBMEI7SUFDdkMsV0FBVyxFQUFFLGlCQUFpQjtJQUM5QixXQUFXLEVBQUUsb0JBQW9CO0lBQ2pDLG9CQUFvQixFQUFFLHNCQUFzQjtDQUMvQyxDQUFDLENBQUM7QUFFVSxRQUFBLHFCQUFxQixHQUFHLElBQUksV0FBSSxDQUFDO0lBQzFDLFVBQVUsRUFBRSxjQUFjO0lBQzFCLFdBQVcsRUFBRSwwQ0FBMEI7SUFDdkMsV0FBVyxFQUFFLG9CQUFvQjtJQUNqQyxpQkFBaUIsRUFBRSwwQkFBMEI7SUFDN0Msb0JBQW9CLEVBQUUsc0JBQXNCO0NBQy9DLENBQUMsQ0FBQztBQUVILDhEQUE4RDtBQUNqRCxRQUFBLGlCQUFpQixHQUFHLElBQUksMkJBQW9CLENBQUM7SUFDdEQsVUFBVSxFQUFFLG1CQUFtQjtJQUMvQixXQUFXLEVBQUUsd0NBQXdCO0lBQ3JDLFdBQVcsRUFBRSxZQUFZO0lBQ3pCLFdBQVcsRUFBRSwrQkFBK0I7SUFDNUMsb0JBQW9CLEVBQUUsb0NBQW9DO0NBRTdELEVBQUUsb0NBQW1CLENBQUMsQ0FBQztBQUV4Qjs7OztHQUlHO0FBQ1UsUUFBQSxPQUFPLEdBQUcsSUFBSSxhQUFLLENBQzVCLGtCQUFrQixFQUNsQix1QkFBTSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IMKpIDIwMTggQXRvbWlzdCwgSW5jLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQge1xuICAgIEFydGlmYWN0R29hbCxcbiAgICBCdWlsZEdvYWwsXG4gICAgTG9jYWxEZXBsb3ltZW50R29hbCwgTm9Hb2FsLFxuICAgIFByb2R1Y3Rpb25EZXBsb3ltZW50R29hbCxcbiAgICBQcm9kdWN0aW9uRW5kcG9pbnRHb2FsLFxuICAgIFJldmlld0dvYWwsXG59IGZyb20gXCIuLi8uLi8uLi8uLi9ibHVlcHJpbnQvd2VsbEtub3duR29hbHNcIjtcbmltcG9ydCB7IEdvYWwsIEdvYWxXaXRoUHJlY29uZGl0aW9uIH0gZnJvbSBcIi4uL0dvYWxcIjtcbmltcG9ydCB7IEdvYWxzIH0gZnJvbSBcIi4uL0dvYWxzXCI7XG5pbXBvcnQgeyBJbmRlcGVuZGVudE9mRW52aXJvbm1lbnQsIFByb2plY3REaXNwb3NhbEVudmlyb25tZW50LCBTdGFnaW5nRW52aXJvbm1lbnQgfSBmcm9tIFwiLi4vc3VwcG9ydC9naXRodWIvZ2l0SHViQ29udGV4dFwiO1xuXG5leHBvcnQgY29uc3QgVmVyc2lvbkdvYWwgPSBuZXcgR29hbCh7XG4gICAgdW5pcXVlTmFtZTogXCJWZXJzaW9uXCIsXG4gICAgZW52aXJvbm1lbnQ6IEluZGVwZW5kZW50T2ZFbnZpcm9ubWVudCxcbiAgICBvcmRlcmVkTmFtZTogXCIwLjEtdmVyc2lvblwiLFxuICAgIHdvcmtpbmdEZXNjcmlwdGlvbjogXCJDYWxjdWxhdGluZyBwcm9qZWN0IHZlcnNpb24uLi5cIixcbiAgICBjb21wbGV0ZWREZXNjcmlwdGlvbjogXCJWZXJzaW9uZWRcIixcbn0pO1xuXG5leHBvcnQgY29uc3QgRG9ja2VyQnVpbGRHb2FsID0gbmV3IEdvYWxXaXRoUHJlY29uZGl0aW9uKHtcbiAgICB1bmlxdWVOYW1lOiBcIkRvY2tlckJ1aWxkXCIsXG4gICAgZW52aXJvbm1lbnQ6IEluZGVwZW5kZW50T2ZFbnZpcm9ubWVudCxcbiAgICBvcmRlcmVkTmFtZTogXCIzLWRvY2tlclwiLFxuICAgIGRpc3BsYXlOYW1lOiBcImRvY2tlciBidWlsZFwiLFxuICAgIHdvcmtpbmdEZXNjcmlwdGlvbjogXCJSdW5uaW5nIERvY2tlciBidWlsZC4uLlwiLFxuICAgIGNvbXBsZXRlZERlc2NyaXB0aW9uOiBcIkRvY2tlciBidWlsZCBzdWNjZXNzZnVsXCIsXG4gICAgZmFpbGVkRGVzY3JpcHRpb246IFwiRmFpbGVkIHRvIGJ1aWxkIERvY2tlciBpbWFnZVwiLFxuICAgIGlzb2xhdGVkOiB0cnVlLFxufSwgQnVpbGRHb2FsKTtcblxuZXhwb3J0IGNvbnN0IFRhZ0dvYWwgPSBuZXcgR29hbFdpdGhQcmVjb25kaXRpb24oe1xuICAgIHVuaXF1ZU5hbWU6IFwiVGFnXCIsXG4gICAgZW52aXJvbm1lbnQ6IEluZGVwZW5kZW50T2ZFbnZpcm9ubWVudCxcbiAgICBvcmRlcmVkTmFtZTogXCI0LXRhZ1wiLFxuICAgIGRpc3BsYXlOYW1lOiBcInRhZ1wiLFxuICAgIHdvcmtpbmdEZXNjcmlwdGlvbjogXCJUYWdnaW5nLi4uXCIsXG4gICAgY29tcGxldGVkRGVzY3JpcHRpb246IFwiVGFnZ2VkXCIsXG4gICAgZmFpbGVkRGVzY3JpcHRpb246IFwiRmFpbGVkIHRvIGNyZWF0ZSBUYWdcIixcbn0sIERvY2tlckJ1aWxkR29hbCwgQnVpbGRHb2FsKTtcblxuZXhwb3J0IGNvbnN0IFN0YWdpbmdEZXBsb3ltZW50R29hbCA9IG5ldyBHb2FsV2l0aFByZWNvbmRpdGlvbih7XG4gICAgdW5pcXVlTmFtZTogXCJEZXBsb3lUb1Rlc3RcIixcbiAgICBlbnZpcm9ubWVudDogU3RhZ2luZ0Vudmlyb25tZW50LFxuICAgIG9yZGVyZWROYW1lOiBcIjMtZGVwbG95XCIsXG4gICAgZGlzcGxheU5hbWU6IFwiZGVwbG95IHRvIFRlc3RcIixcbiAgICBjb21wbGV0ZWREZXNjcmlwdGlvbjogXCJEZXBsb3llZCB0byBUZXN0XCIsXG4gICAgZmFpbGVkRGVzY3JpcHRpb246IFwiVGVzdCBkZXBsb3ltZW50IGZhaWx1cmVcIixcbn0sIEFydGlmYWN0R29hbCk7XG5cbmV4cG9ydCBjb25zdCBTdGFnaW5nVW5kZXBsb3ltZW50R29hbCA9IG5ldyBHb2FsKHtcbiAgICB1bmlxdWVOYW1lOiBcIlVuZGVwbG95RnJvbVRlc3RcIixcbiAgICBlbnZpcm9ubWVudDogUHJvamVjdERpc3Bvc2FsRW52aXJvbm1lbnQsXG4gICAgb3JkZXJlZE5hbWU6IFwiMi1zdGFnaW5nLXVuZGVwbG95XCIsXG4gICAgZGlzcGxheU5hbWU6IFwidW5kZXBsb3kgZnJvbSB0ZXN0XCIsXG4gICAgY29tcGxldGVkRGVzY3JpcHRpb246IFwibm90IGRlcGxveWVkIGluIHRlc3RcIixcbn0pO1xuXG5leHBvcnQgY29uc3QgUHJvZHVjdGlvblVuZGVwbG95bWVudEdvYWwgPSBuZXcgR29hbCh7XG4gICAgdW5pcXVlTmFtZTogXCJVbmRlcGxveUZyb21Qcm9kdWN0aW9uXCIsXG4gICAgZW52aXJvbm1lbnQ6IFByb2plY3REaXNwb3NhbEVudmlyb25tZW50LFxuICAgIG9yZGVyZWROYW1lOiBcIjMtcHJvZC11bmRlcGxveVwiLFxuICAgIGRpc3BsYXlOYW1lOiBcInVuZGVwbG95IGZyb20gUHJvZFwiLFxuICAgIGNvbXBsZXRlZERlc2NyaXB0aW9uOiBcIm5vdCBkZXBsb3llZCBpbiBQcm9kXCIsXG59KTtcblxuZXhwb3J0IGNvbnN0IExvY2FsVW5kZXBsb3ltZW50R29hbCA9IG5ldyBHb2FsKHtcbiAgICB1bmlxdWVOYW1lOiBcIlVuZGVwbG95SGVyZVwiLFxuICAgIGVudmlyb25tZW50OiBQcm9qZWN0RGlzcG9zYWxFbnZpcm9ubWVudCxcbiAgICBvcmRlcmVkTmFtZTogXCIxLXVuZGVwbG95LWxvY2FsbHlcIixcbiAgICBmYWlsZWREZXNjcmlwdGlvbjogXCJGYWlsZWQgYXQgbG9jYWwgdW5kZXBsb3lcIixcbiAgICBjb21wbGV0ZWREZXNjcmlwdGlvbjogXCJub3QgZGVwbG95ZWQgbG9jYWxseVwiLFxufSk7XG5cbi8vIG5vdCBhbiBlbmZvcmNlZCBwcmVjb25kaXRpb24sIGJ1dCBpdCdzIHJlYWwgZW5vdWdoIHRvIGdyYXBoXG5leHBvcnQgY29uc3QgTG9jYWxFbmRwb2ludEdvYWwgPSBuZXcgR29hbFdpdGhQcmVjb25kaXRpb24oe1xuICAgIHVuaXF1ZU5hbWU6IFwiRmluZExvY2FsRW5kcG9pbnRcIixcbiAgICBlbnZpcm9ubWVudDogSW5kZXBlbmRlbnRPZkVudmlyb25tZW50LFxuICAgIG9yZGVyZWROYW1lOiBcIjItZW5kcG9pbnRcIixcbiAgICBkaXNwbGF5TmFtZTogXCJsb2NhdGUgbG9jYWwgc2VydmljZSBlbmRwb2ludFwiLFxuICAgIGNvbXBsZXRlZERlc2NyaXB0aW9uOiBcIkhlcmUgaXMgdGhlIGxvY2FsIHNlcnZpY2UgZW5kcG9pbnRcIixcblxufSwgTG9jYWxEZXBsb3ltZW50R29hbCk7XG5cbi8qKlxuICogU3BlY2lhbCBHb2FscyBvYmplY3QgdG8gYmUgcmV0dXJuZWQgaWYgY2hhbmdlcyBhcmUgaW1tYXRlcmlhbC5cbiAqIFRoZSBpZGVudGl0eSBvZiB0aGlzIG9iamVjdCBpcyBpbXBvcnRhbnQuXG4gKiBAdHlwZSB7R29hbHN9XG4gKi9cbmV4cG9ydCBjb25zdCBOb0dvYWxzID0gbmV3IEdvYWxzKFxuICAgIFwiTm8gYWN0aW9uIG5lZWRlZFwiLFxuICAgIE5vR29hbCk7XG4iXX0=