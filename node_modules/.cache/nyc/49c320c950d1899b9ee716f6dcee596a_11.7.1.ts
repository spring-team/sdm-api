"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_1dyfm9k9z6=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/command/BitBucketServerRepoRef.ts",hash="44959fc61d0bf69164b540a8ddf688feb3c59e93",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/command/BitBucketServerRepoRef.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:28},end:{line:18,column:65}},"2":{start:{line:19,column:23},end:{line:19,column:80}},"3":{start:{line:20,column:17},end:{line:20,column:79}},"4":{start:{line:21,column:31},end:{line:21,column:107}},"5":{start:{line:22,column:16},end:{line:22,column:32}},"6":{start:{line:23,column:17},end:{line:23,column:50}},"7":{start:{line:24,column:32},end:{line:24,column:66}},"8":{start:{line:41,column:8},end:{line:41,column:83}},"9":{start:{line:42,column:8},end:{line:42,column:35}},"10":{start:{line:43,column:8},end:{line:43,column:58}},"11":{start:{line:44,column:8},end:{line:44,column:88}},"12":{start:{line:47,column:20},end:{line:47,column:80}},"13":{start:{line:48,column:21},end:{line:52,column:9}},"14":{start:{line:53,column:21},end:{line:53,column:35}},"15":{start:{line:54,column:8},end:{line:54,column:129}},"16":{start:{line:55,column:8},end:{line:66,column:11}},"17":{start:{line:57,column:12},end:{line:61,column:14}},"18":{start:{line:64,column:12},end:{line:64,column:106}},"19":{start:{line:65,column:12},end:{line:65,column:41}},"20":{start:{line:69,column:20},end:{line:69,column:76}},"21":{start:{line:70,column:8},end:{line:70,column:86}},"22":{start:{line:71,column:8},end:{line:82,column:11}},"23":{start:{line:73,column:12},end:{line:77,column:14}},"24":{start:{line:80,column:12},end:{line:80,column:94}},"25":{start:{line:81,column:12},end:{line:81,column:39}},"26":{start:{line:85,column:8},end:{line:85,column:63}},"27":{start:{line:88,column:20},end:{line:88,column:75}},"28":{start:{line:89,column:8},end:{line:89,column:83}},"29":{start:{line:90,column:8},end:{line:110,column:11}},"30":{start:{line:101,column:12},end:{line:105,column:14}},"31":{start:{line:108,column:12},end:{line:108,column:85}},"32":{start:{line:109,column:12},end:{line:109,column:39}},"33":{start:{line:113,column:18},end:{line:113,column:48}},"34":{start:{line:114,column:8},end:{line:116,column:9}},"35":{start:{line:115,column:12},end:{line:115,column:46}},"36":{start:{line:117,column:8},end:{line:117,column:70}},"37":{start:{line:120,column:8},end:{line:120,column:66}},"38":{start:{line:123,column:8},end:{line:123,column:41}},"39":{start:{line:126,column:8},end:{line:126,column:78}},"40":{start:{line:129,column:8},end:{line:129,column:53}},"41":{start:{line:132,column:0},end:{line:132,column:56}},"42":{start:{line:134,column:4},end:{line:136,column:5}},"43":{start:{line:135,column:8},end:{line:135,column:83}},"44":{start:{line:137,column:17},end:{line:137,column:54}},"45":{start:{line:138,column:20},end:{line:138,column:41}},"46":{start:{line:139,column:4},end:{line:143,column:6}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:40,column:4},end:{line:40,column:5}},loc:{start:{line:40,column:81},end:{line:45,column:5}},line:40},"1":{name:"(anonymous_1)",decl:{start:{line:46,column:4},end:{line:46,column:5}},loc:{start:{line:46,column:49},end:{line:67,column:5}},line:46},"2":{name:"(anonymous_2)",decl:{start:{line:56,column:18},end:{line:56,column:19}},loc:{start:{line:56,column:35},end:{line:62,column:9}},line:56},"3":{name:"(anonymous_3)",decl:{start:{line:63,column:19},end:{line:63,column:20}},loc:{start:{line:63,column:28},end:{line:66,column:9}},line:63},"4":{name:"(anonymous_4)",decl:{start:{line:68,column:4},end:{line:68,column:5}},loc:{start:{line:68,column:24},end:{line:83,column:5}},line:68},"5":{name:"(anonymous_5)",decl:{start:{line:72,column:18},end:{line:72,column:19}},loc:{start:{line:72,column:35},end:{line:78,column:9}},line:72},"6":{name:"(anonymous_6)",decl:{start:{line:79,column:19},end:{line:79,column:20}},loc:{start:{line:79,column:26},end:{line:82,column:9}},line:79},"7":{name:"(anonymous_7)",decl:{start:{line:84,column:4},end:{line:84,column:5}},loc:{start:{line:84,column:40},end:{line:86,column:5}},line:84},"8":{name:"(anonymous_8)",decl:{start:{line:87,column:4},end:{line:87,column:5}},loc:{start:{line:87,column:59},end:{line:111,column:5}},line:87},"9":{name:"(anonymous_9)",decl:{start:{line:100,column:18},end:{line:100,column:19}},loc:{start:{line:100,column:35},end:{line:106,column:9}},line:100},"10":{name:"(anonymous_10)",decl:{start:{line:107,column:19},end:{line:107,column:20}},loc:{start:{line:107,column:26},end:{line:110,column:9}},line:107},"11":{name:"(anonymous_11)",decl:{start:{line:112,column:4},end:{line:112,column:5}},loc:{start:{line:112,column:14},end:{line:118,column:5}},line:112},"12":{name:"(anonymous_12)",decl:{start:{line:119,column:4},end:{line:119,column:5}},loc:{start:{line:119,column:24},end:{line:121,column:5}},line:119},"13":{name:"(anonymous_13)",decl:{start:{line:122,column:4},end:{line:122,column:5}},loc:{start:{line:122,column:21},end:{line:124,column:5}},line:122},"14":{name:"(anonymous_14)",decl:{start:{line:125,column:4},end:{line:125,column:5}},loc:{start:{line:125,column:31},end:{line:127,column:5}},line:125},"15":{name:"(anonymous_15)",decl:{start:{line:128,column:4},end:{line:128,column:5}},loc:{start:{line:128,column:27},end:{line:130,column:5}},line:128},"16":{name:"headers",decl:{start:{line:133,column:9},end:{line:133,column:16}},loc:{start:{line:133,column:24},end:{line:144,column:1}},line:133}},branchMap:{"0":{loc:{start:{line:40,column:41},end:{line:40,column:57}},type:"default-arg",locations:[{start:{line:40,column:53},end:{line:40,column:57}}],line:40},"1":{loc:{start:{line:40,column:59},end:{line:40,column:73}},type:"default-arg",locations:[{start:{line:40,column:65},end:{line:40,column:73}}],line:40},"2":{loc:{start:{line:43,column:25},end:{line:43,column:57}},type:"cond-expr",locations:[{start:{line:43,column:37},end:{line:43,column:47}},{start:{line:43,column:50},end:{line:43,column:57}}],line:43},"3":{loc:{start:{line:114,column:8},end:{line:116,column:9}},type:"if",locations:[{start:{line:114,column:8},end:{line:116,column:9}},{start:{line:114,column:8},end:{line:116,column:9}}],line:114},"4":{loc:{start:{line:123,column:15},end:{line:123,column:40}},type:"cond-expr",locations:[{start:{line:123,column:32},end:{line:123,column:34}},{start:{line:123,column:37},end:{line:123,column:40}}],line:123},"5":{loc:{start:{line:134,column:4},end:{line:136,column:5}},type:"if",locations:[{start:{line:134,column:4},end:{line:136,column:5}},{start:{line:134,column:4},end:{line:136,column:5}}],line:134}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},b:{"0":[0],"1":[0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_1dyfm9k9z6.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const automation_client_1=(cov_1dyfm9k9z6.s[1]++,require("@atomist/automation-client"));const ActionResult_1=(cov_1dyfm9k9z6.s[2]++,require("@atomist/automation-client/action/ActionResult"));const RepoId_1=(cov_1dyfm9k9z6.s[3]++,require("@atomist/automation-client/operations/common/RepoId"));const BasicAuthCredentials_1=(cov_1dyfm9k9z6.s[4]++,require("@atomist/automation-client/operations/common/BasicAuthCredentials"));const axios_1=(cov_1dyfm9k9z6.s[5]++,require("axios"));const base64_1=(cov_1dyfm9k9z6.s[6]++,require("../../util/misc/base64"));const AbstractRemoteRepoRef_1=(cov_1dyfm9k9z6.s[7]++,require("./AbstractRemoteRepoRef"));/**
 * RemoteRepoRef implementation for BitBucket server (not BitBucket Cloud)
 *
 * This should ultimately move to automation-client-ts
 */class BitBucketServerRepoRef extends(AbstractRemoteRepoRef_1.AbstractRemoteRepoRef){/**
     * Construct a new BitBucketServerRepoRef
     * @param {string} remoteBase remote base, including scheme
     * @param {string} owner
     * @param {string} repo
     * @param {boolean} isProject
     * @param {string} sha
     * @param {string} path
     */constructor(remoteBase,owner,repo,isProject=(cov_1dyfm9k9z6.b[0][0]++,true),sha=(cov_1dyfm9k9z6.b[1][0]++,"master"),path){cov_1dyfm9k9z6.f[0]++;cov_1dyfm9k9z6.s[8]++;super(RepoId_1.ProviderType.bitbucket,remoteBase,owner,repo,sha,path);cov_1dyfm9k9z6.s[9]++;this.isProject=isProject;cov_1dyfm9k9z6.s[10]++;this.ownerType=isProject?(cov_1dyfm9k9z6.b[2][0]++,"projects"):(cov_1dyfm9k9z6.b[2][1]++,"users");cov_1dyfm9k9z6.s[11]++;automation_client_1.logger.info("Constructed BitBucketServerRepoRef: %j",this);}createRemote(creds,description,visibility){cov_1dyfm9k9z6.f[1]++;const url=(cov_1dyfm9k9z6.s[12]++,`${this.scheme}${this.apiBase}/${this.apiBasePathComponent}`);const data=(cov_1dyfm9k9z6.s[13]++,{name:this.repo,scmId:"git",forkable:"true"});const hdrs=(cov_1dyfm9k9z6.s[14]++,headers(creds));cov_1dyfm9k9z6.s[15]++;automation_client_1.logger.info("Making request to BitBucket '%s' to create repo, data=%j, headers=%j",url,data,hdrs);cov_1dyfm9k9z6.s[16]++;return axios_1.default.post(url,data,hdrs).then(axiosResponse=>{cov_1dyfm9k9z6.f[2]++;cov_1dyfm9k9z6.s[17]++;return{target:this,success:true,axiosResponse};}).catch(error=>{cov_1dyfm9k9z6.f[3]++;cov_1dyfm9k9z6.s[18]++;automation_client_1.logger.error("Error attempting to create repository %j: %s",this,error);cov_1dyfm9k9z6.s[19]++;return Promise.reject(error);});}deleteRemote(creds){cov_1dyfm9k9z6.f[4]++;const url=(cov_1dyfm9k9z6.s[20]++,`${this.scheme}${this.apiBase}/${this.apiPathComponent}`);cov_1dyfm9k9z6.s[21]++;automation_client_1.logger.debug(`Making request to '${url}' to delete repo`);cov_1dyfm9k9z6.s[22]++;return axios_1.default.delete(url,headers(creds)).then(axiosResponse=>{cov_1dyfm9k9z6.f[5]++;cov_1dyfm9k9z6.s[23]++;return{target:this,success:true,axiosResponse};}).catch(err=>{cov_1dyfm9k9z6.f[6]++;cov_1dyfm9k9z6.s[24]++;automation_client_1.logger.error(`Error attempting to delete repository: ${err}`);cov_1dyfm9k9z6.s[25]++;return Promise.reject(err);});}setUserConfig(credentials,project){cov_1dyfm9k9z6.f[7]++;cov_1dyfm9k9z6.s[26]++;return Promise.resolve(ActionResult_1.successOn(this));}raisePullRequest(credentials,title,body,head,base){cov_1dyfm9k9z6.f[8]++;const url=(cov_1dyfm9k9z6.s[27]++,`${this.apiBase}${this.apiPathComponent}/pull-requests`);cov_1dyfm9k9z6.s[28]++;automation_client_1.logger.debug(`Making request to '${url}' to raise PR`);cov_1dyfm9k9z6.s[29]++;return axios_1.default.post(url,{title,description:body,fromRef:{id:head},toRef:{id:base}},headers(credentials)).then(axiosResponse=>{cov_1dyfm9k9z6.f[9]++;cov_1dyfm9k9z6.s[30]++;return{target:this,success:true,axiosResponse};}).catch(err=>{cov_1dyfm9k9z6.f[10]++;cov_1dyfm9k9z6.s[31]++;automation_client_1.logger.error(`Error attempting to raise PR: ${err}`);cov_1dyfm9k9z6.s[32]++;return Promise.reject(err);});}get url(){cov_1dyfm9k9z6.f[11]++;let url=(cov_1dyfm9k9z6.s[33]++,`projects/${this.owner}/repos`);cov_1dyfm9k9z6.s[34]++;if(!this.isProject){cov_1dyfm9k9z6.b[3][0]++;cov_1dyfm9k9z6.s[35]++;url=`users/${this.owner}/repos`;}else{cov_1dyfm9k9z6.b[3][1]++;}cov_1dyfm9k9z6.s[36]++;return`${this.scheme}${this.remoteBase}/${url}/${this.repo}`;}get pathComponent(){cov_1dyfm9k9z6.f[12]++;cov_1dyfm9k9z6.s[37]++;return`scm/${this.maybeTilde}${this.owner}/${this.repo}`;}get maybeTilde(){cov_1dyfm9k9z6.f[13]++;cov_1dyfm9k9z6.s[38]++;return this.isProject?(cov_1dyfm9k9z6.b[4][0]++,""):(cov_1dyfm9k9z6.b[4][1]++,"~");}get apiBasePathComponent(){cov_1dyfm9k9z6.f[14]++;cov_1dyfm9k9z6.s[39]++;return`rest/api/1.0/projects/${this.maybeTilde}${this.owner}/repos/`;}get apiPathComponent(){cov_1dyfm9k9z6.f[15]++;cov_1dyfm9k9z6.s[40]++;return this.apiBasePathComponent+this.repo;}}cov_1dyfm9k9z6.s[41]++;exports.BitBucketServerRepoRef=BitBucketServerRepoRef;function headers(creds){cov_1dyfm9k9z6.f[16]++;cov_1dyfm9k9z6.s[42]++;if(!BasicAuthCredentials_1.isBasicAuthCredentials(creds)){cov_1dyfm9k9z6.b[5][0]++;cov_1dyfm9k9z6.s[43]++;throw new Error("Only Basic auth supported: Had "+JSON.stringify(creds));}else{cov_1dyfm9k9z6.b[5][1]++;}const upwd=(cov_1dyfm9k9z6.s[44]++,`${creds.username}:${creds.password}`);const encoded=(cov_1dyfm9k9z6.s[45]++,base64_1.encode(upwd));cov_1dyfm9k9z6.s[46]++;return{headers:{Authorization:`Basic ${encoded}`}};}//# sourceMappingURL=data:application/json;charset=utf-8;base64,