{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/blueprint/dsl/allOf.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/blueprint/dsl/allOf.ts"],"names":[],"mappings":";;;;;;;;;;AACA,6FAA8G;AAE9G;;;;;GAKG;AACH,eACI,KAA8B,EAC9B,GAAG,KAAqC;IACxC,MAAM,mBAAmB,GAAG,CAAC,yCAAkB,CAAI,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,yCAAkB,CAAC,CAAC,CAAC;IACjG,OAAO;QACH,IAAI,EAAE,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;QACtD,OAAO,EAAE,CAAM,EAAE,EAAC,EAAE;YAChB,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAChF,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACnC,CAAC,CAAA;KACJ,CAAC;AACN,CAAC;AAXD,sBAWC","sourcesContent":["import { PredicateMapping } from \"../../common/listener/PredicateMapping\";\nimport { PredicateMappingTerm, toPredicateMapping } from \"../../common/listener/support/PredicateMappingTerm\";\n\n/**\n * Predicate mapping DSL method. Allows use of booleans and functions\n * returning boolean in predicate expressions\n * @param {PushTest} pred1\n * @param {PushTest} preds\n */\nexport function allOf<F>(\n    pred1: PredicateMappingTerm<F>,\n    ...preds: Array<PredicateMappingTerm<F>>): PredicateMapping<F> {\n    const asPredicateMappings = [toPredicateMapping<F>(pred1)].concat(preds.map(toPredicateMapping));\n    return {\n        name: asPredicateMappings.map(c => c.name).join(\" & \"),\n        mapping: async pu => {\n            const result = await Promise.all(asPredicateMappings.map(pm => pm.mapping(pu)));\n            return !result.includes(false);\n        },\n    };\n}\n"]}