"use strict";/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cov_xuwatpsw6=function(){var path="/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/listener/support/PushRules.ts",hash="8fd5d3419f1494fa8f3e80c54d853156fc065134",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/common/listener/support/PushRules.ts",statementMap:{"0":{start:{line:17,column:16},end:{line:24,column:1}},"1":{start:{line:18,column:4},end:{line:23,column:7}},"2":{start:{line:19,column:36},end:{line:19,column:97}},"3":{start:{line:19,column:42},end:{line:19,column:70}},"4":{start:{line:19,column:85},end:{line:19,column:95}},"5":{start:{line:20,column:35},end:{line:20,column:100}},"6":{start:{line:20,column:41},end:{line:20,column:73}},"7":{start:{line:20,column:88},end:{line:20,column:98}},"8":{start:{line:21,column:32},end:{line:21,column:149}},"9":{start:{line:21,column:97},end:{line:21,column:119}},"10":{start:{line:22,column:8},end:{line:22,column:78}},"11":{start:{line:25,column:0},end:{line:25,column:62}},"12":{start:{line:26,column:28},end:{line:26,column:65}},"13":{start:{line:39,column:8},end:{line:39,column:25}},"14":{start:{line:40,column:8},end:{line:40,column:26}},"15":{start:{line:41,column:8},end:{line:43,column:9}},"16":{start:{line:42,column:12},end:{line:42,column:63}},"17":{start:{line:44,column:8},end:{line:44,column:26}},"18":{start:{line:52,column:8},end:{line:52,column:70}},"19":{start:{line:55,column:8},end:{line:55,column:50}},"20":{start:{line:58,column:8},end:{line:72,column:11}},"21":{start:{line:59,column:28},end:{line:64,column:16}},"22":{start:{line:60,column:29},end:{line:64,column:14}},"23":{start:{line:61,column:30},end:{line:61,column:50}},"24":{start:{line:62,column:16},end:{line:62,column:114}},"25":{start:{line:63,column:16},end:{line:63,column:29}},"26":{start:{line:65,column:28},end:{line:65,column:50}},"27":{start:{line:65,column:46},end:{line:65,column:49}},"28":{start:{line:66,column:32},end:{line:66,column:53}},"29":{start:{line:67,column:26},end:{line:69,column:23}},"30":{start:{line:70,column:12},end:{line:70,column:115}},"31":{start:{line:71,column:12},end:{line:71,column:25}},"32":{start:{line:75,column:0},end:{line:75,column:30}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:44},end:{line:17,column:45}},loc:{start:{line:17,column:89},end:{line:24,column:1}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:36},end:{line:18,column:37}},loc:{start:{line:18,column:63},end:{line:23,column:5}},line:18},"2":{name:"fulfilled",decl:{start:{line:19,column:17},end:{line:19,column:26}},loc:{start:{line:19,column:34},end:{line:19,column:99}},line:19},"3":{name:"rejected",decl:{start:{line:20,column:17},end:{line:20,column:25}},loc:{start:{line:20,column:33},end:{line:20,column:102}},line:20},"4":{name:"step",decl:{start:{line:21,column:17},end:{line:21,column:21}},loc:{start:{line:21,column:30},end:{line:21,column:151}},line:21},"5":{name:"(anonymous_5)",decl:{start:{line:21,column:76},end:{line:21,column:77}},loc:{start:{line:21,column:95},end:{line:21,column:121}},line:21},"6":{name:"(anonymous_6)",decl:{start:{line:38,column:4},end:{line:38,column:5}},loc:{start:{line:38,column:36},end:{line:45,column:5}},line:38},"7":{name:"(anonymous_7)",decl:{start:{line:51,column:4},end:{line:51,column:5}},loc:{start:{line:51,column:22},end:{line:53,column:5}},line:51},"8":{name:"(anonymous_8)",decl:{start:{line:54,column:4},end:{line:54,column:5}},loc:{start:{line:54,column:15},end:{line:56,column:5}},line:54},"9":{name:"(anonymous_9)",decl:{start:{line:57,column:4},end:{line:57,column:5}},loc:{start:{line:57,column:16},end:{line:73,column:5}},line:57},"10":{name:"(anonymous_10)",decl:{start:{line:58,column:47},end:{line:58,column:48}},loc:{start:{line:58,column:60},end:{line:72,column:9}},line:58},"11":{name:"(anonymous_11)",decl:{start:{line:60,column:21},end:{line:60,column:22}},loc:{start:{line:60,column:29},end:{line:64,column:14}},line:60},"12":{name:"(anonymous_12)",decl:{start:{line:60,column:61},end:{line:60,column:62}},loc:{start:{line:60,column:74},end:{line:64,column:13}},line:60},"13":{name:"(anonymous_13)",decl:{start:{line:65,column:41},end:{line:65,column:42}},loc:{start:{line:65,column:46},end:{line:65,column:49}},line:65}},branchMap:{"0":{loc:{start:{line:17,column:16},end:{line:24,column:1}},type:"binary-expr",locations:[{start:{line:17,column:17},end:{line:17,column:21}},{start:{line:17,column:25},end:{line:17,column:39}},{start:{line:17,column:44},end:{line:24,column:1}}],line:17},"1":{loc:{start:{line:18,column:16},end:{line:18,column:34}},type:"binary-expr",locations:[{start:{line:18,column:16},end:{line:18,column:17}},{start:{line:18,column:22},end:{line:18,column:33}}],line:18},"2":{loc:{start:{line:21,column:32},end:{line:21,column:148}},type:"cond-expr",locations:[{start:{line:21,column:46},end:{line:21,column:67}},{start:{line:21,column:70},end:{line:21,column:148}}],line:21},"3":{loc:{start:{line:22,column:51},end:{line:22,column:67}},type:"binary-expr",locations:[{start:{line:22,column:51},end:{line:22,column:61}},{start:{line:22,column:65},end:{line:22,column:67}}],line:22},"4":{loc:{start:{line:38,column:22},end:{line:38,column:34}},type:"default-arg",locations:[{start:{line:38,column:32},end:{line:38,column:34}}],line:38},"5":{loc:{start:{line:41,column:8},end:{line:43,column:9}},type:"if",locations:[{start:{line:41,column:8},end:{line:43,column:9}},{start:{line:41,column:8},end:{line:43,column:9}}],line:41},"6":{loc:{start:{line:67,column:26},end:{line:69,column:23}},type:"cond-expr",locations:[{start:{line:68,column:16},end:{line:68,column:25}},{start:{line:69,column:16},end:{line:69,column:23}}],line:67},"7":{loc:{start:{line:67,column:26},end:{line:67,column:84}},type:"binary-expr",locations:[{start:{line:67,column:26},end:{line:67,column:42}},{start:{line:67,column:46},end:{line:67,column:84}}],line:67}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0],"5":[0,0],"6":[0,0],"7":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var __awaiter=(cov_xuwatpsw6.s[0]++,(cov_xuwatpsw6.b[0][0]++,this)&&(cov_xuwatpsw6.b[0][1]++,this.__awaiter)||(cov_xuwatpsw6.b[0][2]++,function(thisArg,_arguments,P,generator){cov_xuwatpsw6.f[0]++;cov_xuwatpsw6.s[1]++;return new((cov_xuwatpsw6.b[1][0]++,P)||(cov_xuwatpsw6.b[1][1]++,P=Promise))(function(resolve,reject){cov_xuwatpsw6.f[1]++;function fulfilled(value){cov_xuwatpsw6.f[2]++;cov_xuwatpsw6.s[2]++;try{cov_xuwatpsw6.s[3]++;step(generator.next(value));}catch(e){cov_xuwatpsw6.s[4]++;reject(e);}}function rejected(value){cov_xuwatpsw6.f[3]++;cov_xuwatpsw6.s[5]++;try{cov_xuwatpsw6.s[6]++;step(generator["throw"](value));}catch(e){cov_xuwatpsw6.s[7]++;reject(e);}}function step(result){cov_xuwatpsw6.f[4]++;cov_xuwatpsw6.s[8]++;result.done?(cov_xuwatpsw6.b[2][0]++,resolve(result.value)):(cov_xuwatpsw6.b[2][1]++,new P(function(resolve){cov_xuwatpsw6.f[5]++;cov_xuwatpsw6.s[9]++;resolve(result.value);}).then(fulfilled,rejected));}cov_xuwatpsw6.s[10]++;step((generator=generator.apply(thisArg,(cov_xuwatpsw6.b[3][0]++,_arguments)||(cov_xuwatpsw6.b[3][1]++,[]))).next());});}));cov_xuwatpsw6.s[11]++;Object.defineProperty(exports,"__esModule",{value:true});const automation_client_1=(cov_xuwatpsw6.s[12]++,require("@atomist/automation-client"));/**
 * Use to execute a rule set for any push to resolve to an object.
 */class PushRules{/**
     * Return all possible values
     * @param {string} name
     * @param {Array<PushMapping<V>>} choices Array of choices.
     * Passing an empty array will result in an instance that always maps to undefined,
     * and is not an error.
     */constructor(name,choices=(cov_xuwatpsw6.b[4][0]++,[])){cov_xuwatpsw6.f[6]++;cov_xuwatpsw6.s[13]++;this.name=name;cov_xuwatpsw6.s[14]++;this.choices=[];cov_xuwatpsw6.s[15]++;if(!name){cov_xuwatpsw6.b[5][0]++;cov_xuwatpsw6.s[16]++;throw new Error("PushRule name must be specified");}else{cov_xuwatpsw6.b[5][1]++;}cov_xuwatpsw6.s[17]++;this.add(choices);}/**
     * Return a PushRules with a subset of the rules of this one
     * @param {(p: PushMapping<V>) => boolean} predicate
     * @return {PushRules<V>}
     */filter(predicate){cov_xuwatpsw6.f[7]++;cov_xuwatpsw6.s[18]++;return new PushRules("name-",this.choices.filter(predicate));}add(rules){cov_xuwatpsw6.f[8]++;cov_xuwatpsw6.s[19]++;this.choices=this.choices.concat(rules);}mapping(pi){cov_xuwatpsw6.f[9]++;cov_xuwatpsw6.s[20]++;return __awaiter(this,void 0,void 0,function*(){cov_xuwatpsw6.f[10]++;const results=(cov_xuwatpsw6.s[21]++,yield Promise.all(this.choices.map(pc=>{cov_xuwatpsw6.f[11]++;cov_xuwatpsw6.s[22]++;return __awaiter(this,void 0,void 0,function*(){cov_xuwatpsw6.f[12]++;const found=(cov_xuwatpsw6.s[23]++,yield pc.mapping(pi));cov_xuwatpsw6.s[24]++;automation_client_1.logger.debug("Eligible PushRule named %s returned choice %j",pc.name,found);cov_xuwatpsw6.s[25]++;return found;});})));const nonNull=(cov_xuwatpsw6.s[26]++,results.find(p=>{cov_xuwatpsw6.f[13]++;cov_xuwatpsw6.s[27]++;return!!p;}));const indexOfNull=(cov_xuwatpsw6.s[28]++,results.indexOf(null));const value=(cov_xuwatpsw6.s[29]++,(cov_xuwatpsw6.b[7][0]++,indexOfNull>-1)&&(cov_xuwatpsw6.b[7][1]++,indexOfNull<results.indexOf(nonNull))?(cov_xuwatpsw6.b[6][0]++,undefined):(cov_xuwatpsw6.b[6][1]++,nonNull));cov_xuwatpsw6.s[30]++;automation_client_1.logger.info("PushRules [%s]: Value for push on %j is %j",this.name,pi.id,value);cov_xuwatpsw6.s[31]++;return value;});}}cov_xuwatpsw6.s[32]++;exports.PushRules=PushRules;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2NvbW1vbi9saXN0ZW5lci9zdXBwb3J0L1B1c2hSdWxlcy50cyIsInNvdXJjZXMiOlsiL1VzZXJzL3JvZGpvaG5zb24vc2ZvcnphbmRvLWRldi9pZGVhLXByb2plY3RzL215LWZsb3cvc3JjL2NvbW1vbi9saXN0ZW5lci9zdXBwb3J0L1B1c2hSdWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7O0dBY0c7Ozs7Ozs7Ozs7QUFFSCxrRUFBb0Q7QUFJcEQ7O0dBRUc7QUFDSDtJQUlJOzs7Ozs7T0FNRztJQUNILFlBQTRCLElBQVksRUFBRSxVQUFpQyxFQUFFO1FBQWpELFNBQUksR0FBSixJQUFJLENBQVE7UUFUakMsWUFBTyxHQUEwQixFQUFFLENBQUM7UUFVdkMsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNQLE1BQU0sSUFBSSxLQUFLLENBQUMsaUNBQWlDLENBQUMsQ0FBQztTQUN0RDtRQUNELElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDdEIsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSxNQUFNLENBQUMsU0FBeUM7UUFDbkQsT0FBTyxJQUFJLFNBQVMsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztJQUNsRSxDQUFDO0lBRU0sR0FBRyxDQUFDLEtBQTRCO1FBQ25DLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUVZLE9BQU8sQ0FBQyxFQUEwQjs7WUFDM0MsTUFBTSxPQUFPLEdBQVEsTUFBTSxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPO2lCQUM5QyxHQUFHLENBQUMsQ0FBTSxFQUFFLEVBQUMsRUFBRTtnQkFDWixNQUFNLEtBQUssR0FBRyxNQUFNLEVBQUUsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUM7Z0JBQ25DLDBCQUFNLENBQUMsS0FBSyxDQUFDLCtDQUErQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7Z0JBQzlFLE9BQU8sS0FBSyxDQUFDO1lBQ2pCLENBQUMsQ0FBQSxDQUFDLENBQUMsQ0FBQztZQUNSLE1BQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdkMsTUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUMxQyxNQUFNLEtBQUssR0FBRyxXQUFXLEdBQUcsQ0FBQyxDQUFDLElBQUksV0FBVyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztnQkFDdEUsU0FBUyxDQUFDLENBQUM7Z0JBQ1gsT0FBTyxDQUFDO1lBRVosMEJBQU0sQ0FBQyxJQUFJLENBQUMsNENBQTRDLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBQ25GLE9BQU8sS0FBSyxDQUFDO1FBQ2pCLENBQUM7S0FBQTtDQUNKO0FBL0NELDhCQStDQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgwqkgMjAxOCBBdG9taXN0LCBJbmMuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gXCJAYXRvbWlzdC9hdXRvbWF0aW9uLWNsaWVudFwiO1xuaW1wb3J0IHsgUHVzaExpc3RlbmVySW52b2NhdGlvbiB9IGZyb20gXCIuLi9QdXNoTGlzdGVuZXJcIjtcbmltcG9ydCB7IFB1c2hNYXBwaW5nIH0gZnJvbSBcIi4uL1B1c2hNYXBwaW5nXCI7XG5cbi8qKlxuICogVXNlIHRvIGV4ZWN1dGUgYSBydWxlIHNldCBmb3IgYW55IHB1c2ggdG8gcmVzb2x2ZSB0byBhbiBvYmplY3QuXG4gKi9cbmV4cG9ydCBjbGFzcyBQdXNoUnVsZXM8Vj4gaW1wbGVtZW50cyBQdXNoTWFwcGluZzxWPiB7XG5cbiAgICBwdWJsaWMgY2hvaWNlczogQXJyYXk8UHVzaE1hcHBpbmc8Vj4+ID0gW107XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm4gYWxsIHBvc3NpYmxlIHZhbHVlc1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gICAgICogQHBhcmFtIHtBcnJheTxQdXNoTWFwcGluZzxWPj59IGNob2ljZXMgQXJyYXkgb2YgY2hvaWNlcy5cbiAgICAgKiBQYXNzaW5nIGFuIGVtcHR5IGFycmF5IHdpbGwgcmVzdWx0IGluIGFuIGluc3RhbmNlIHRoYXQgYWx3YXlzIG1hcHMgdG8gdW5kZWZpbmVkLFxuICAgICAqIGFuZCBpcyBub3QgYW4gZXJyb3IuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IocHVibGljIHJlYWRvbmx5IG5hbWU6IHN0cmluZywgY2hvaWNlczogQXJyYXk8UHVzaE1hcHBpbmc8Vj4+ID0gW10pIHtcbiAgICAgICAgaWYgKCFuYW1lKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJQdXNoUnVsZSBuYW1lIG11c3QgYmUgc3BlY2lmaWVkXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuYWRkKGNob2ljZXMpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHVybiBhIFB1c2hSdWxlcyB3aXRoIGEgc3Vic2V0IG9mIHRoZSBydWxlcyBvZiB0aGlzIG9uZVxuICAgICAqIEBwYXJhbSB7KHA6IFB1c2hNYXBwaW5nPFY+KSA9PiBib29sZWFufSBwcmVkaWNhdGVcbiAgICAgKiBAcmV0dXJuIHtQdXNoUnVsZXM8Vj59XG4gICAgICovXG4gICAgcHVibGljIGZpbHRlcihwcmVkaWNhdGU6IChwOiBQdXNoTWFwcGluZzxWPikgPT4gYm9vbGVhbik6IFB1c2hSdWxlczxWPiB7XG4gICAgICAgIHJldHVybiBuZXcgUHVzaFJ1bGVzKFwibmFtZS1cIiwgdGhpcy5jaG9pY2VzLmZpbHRlcihwcmVkaWNhdGUpKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgYWRkKHJ1bGVzOiBBcnJheTxQdXNoTWFwcGluZzxWPj4pIHtcbiAgICAgICAgdGhpcy5jaG9pY2VzID0gdGhpcy5jaG9pY2VzLmNvbmNhdChydWxlcyk7XG4gICAgfVxuXG4gICAgcHVibGljIGFzeW5jIG1hcHBpbmcocGk6IFB1c2hMaXN0ZW5lckludm9jYXRpb24pOiBQcm9taXNlPFY+IHtcbiAgICAgICAgY29uc3QgcmVzdWx0czogVltdID0gYXdhaXQgUHJvbWlzZS5hbGwodGhpcy5jaG9pY2VzXG4gICAgICAgICAgICAubWFwKGFzeW5jIHBjID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBmb3VuZCA9IGF3YWl0IHBjLm1hcHBpbmcocGkpO1xuICAgICAgICAgICAgICAgIGxvZ2dlci5kZWJ1ZyhcIkVsaWdpYmxlIFB1c2hSdWxlIG5hbWVkICVzIHJldHVybmVkIGNob2ljZSAlalwiLCBwYy5uYW1lLCBmb3VuZCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZvdW5kO1xuICAgICAgICAgICAgfSkpO1xuICAgICAgICBjb25zdCBub25OdWxsID0gcmVzdWx0cy5maW5kKHAgPT4gISFwKTtcbiAgICAgICAgY29uc3QgaW5kZXhPZk51bGwgPSByZXN1bHRzLmluZGV4T2YobnVsbCk7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gaW5kZXhPZk51bGwgPiAtMSAmJiBpbmRleE9mTnVsbCA8IHJlc3VsdHMuaW5kZXhPZihub25OdWxsKSA/XG4gICAgICAgICAgICB1bmRlZmluZWQgOlxuICAgICAgICAgICAgbm9uTnVsbDtcblxuICAgICAgICBsb2dnZXIuaW5mbyhcIlB1c2hSdWxlcyBbJXNdOiBWYWx1ZSBmb3IgcHVzaCBvbiAlaiBpcyAlalwiLCB0aGlzLm5hbWUsIHBpLmlkLCB2YWx1ZSk7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG59XG4iXX0=