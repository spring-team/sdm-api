{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/handlers/events/delivery/artifact/gitHubReleaseArtifactStoreTest.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/test/handlers/events/delivery/artifact/gitHubReleaseArtifactStoreTest.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH,8FAA2F;AAC3F,yBAAyB;AACzB,uCAAuC;AACvC,qHAE8E;AAE9E,mFAA+E;AAC/E,0BAA0B;AAE1B,MAAM,KAAK,GAAG,qGAAqG,CAAC;AAEpH,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;IAExC,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;QAEtB,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;YACrC,MAAM,KAAK,GAAG,IAAI,uDAA0B,EAAE,CAAC;YAC/C,MAAM,EAAE,GAAG,IAAI,6BAAa,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;YACtD,OAAO,KAAK,CAAC,QAAQ,CAAC,KAAK,EACvB,EAAE,EACF,EAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY,EAAC,CAAC;iBACjC,IAAI,CAAC,EAAE,CAAC,EAAE;gBACP,MAAM,IAAI,GAAG,GAAG,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC;gBACxC,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,SAAS,IAAI,cAAc,CAAC,CAAC;gBACzD,MAAM,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAC5B,MAAM,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAClC,OAAO,wBAAU,CAAC,SAAS,QAAQ,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;YACpD,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAElB,EAAE,CAAC,iDAAiD,EAAE,GAAG,EAAE;YACvD,MAAM,KAAK,GAAG,IAAI,uDAA0B,EAAE,CAAC;YAC/C,MAAM,EAAE,GAAG,IAAI,6BAAa,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;YACtD,OAAO,KAAK,CAAC,QAAQ,CAAC,KAAK,EACvB,EAAE,EACF,EAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY,EAAC,CAAC;iBACjC,IAAI,CAAC,EAAE,CAAC,EAAE;gBACP,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;gBACpC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;gBAClC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAE,+BAA+B,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;gBAC3E,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,gBAAgB,EAAE,0CAA0C,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC;YACxG,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC","sourcesContent":["/*\n * Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GitHubRepoRef } from \"@atomist/automation-client/operations/common/GitHubRepoRef\";\nimport * as fs from \"fs\";\nimport * as assert from \"power-assert\";\nimport {\n    GitHubReleaseArtifactStore,\n} from \"../../../../../src/common/artifact/github/GitHubReleaseArtifactStore\";\n\nimport { runCommand } from \"@atomist/automation-client/action/cli/commandLine\";\nimport * as p from \"path\";\n\nconst asset = \"https://github.com/spring-team/fintan/releases/download/0.1.0-SNAPSHOT454/fintan-0.1.0-SNAPSHOT.jar\";\n\ndescribe(\"GitHubReleaseArtifactStore\", () => {\n\n    describe(\"checkout\", () => {\n\n        it(\"should checkout existing file\", () => {\n            const ghras = new GitHubReleaseArtifactStore();\n            const id = new GitHubRepoRef(\"spring-team\", \"fintan\");\n            return ghras.checkout(asset,\n                id,\n                {token: process.env.GITHUB_TOKEN})\n                .then(da => {\n                    const path = `${da.cwd}/${da.filename}`;\n                    assert(fs.existsSync(path), `File [${path}] must exist`);\n                    const cwd = p.dirname(path);\n                    const filename = p.basename(path);\n                    return runCommand(`unzip ${filename}`, { cwd });\n                });\n        }).timeout(60000);\n\n        it(\"should checkout existing file and parse AppInfo\", () => {\n            const ghras = new GitHubReleaseArtifactStore();\n            const id = new GitHubRepoRef(\"spring-team\", \"fintan\");\n            return ghras.checkout(asset,\n                id,\n                {token: process.env.GITHUB_TOKEN})\n                .then(da => {\n                    assert.equal(da.id.owner, id.owner);\n                    assert.equal(da.id.repo, id.repo);\n                    assert.equal(da.name, \"fintan\", \"name should be 'fintan', not \" + da.name);\n                    assert.equal(da.version, \"0.1.0-SNAPSHOT\", \"version should be '0.1.0-SNAPSHOT', not \" + da.version);\n                });\n        }).timeout(60000);\n    });\n\n});\n"]}