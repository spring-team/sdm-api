{"version":3,"file":"/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/blueprint/SoftwareDeliveryMachine.ts","sources":["/Users/rodjohnson/sforzando-dev/idea-projects/my-flow/src/blueprint/SoftwareDeliveryMachine.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright © 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// tslint:disable:max-file-line-count\n\nimport { Configuration, HandleCommand, HandleEvent, logger } from \"@atomist/automation-client\";\nimport { guid } from \"@atomist/automation-client/internal/util/string\";\nimport { Maker } from \"@atomist/automation-client/util/constructionUtils\";\nimport * as _ from \"lodash\";\nimport { createRepoHandler } from \"../common/command/generator/createRepo\";\nimport { listGeneratorsHandler } from \"../common/command/generator/listGenerators\";\nimport { executeBuild } from \"../common/delivery/build/executeBuild\";\nimport { executeAutofixes } from \"../common/delivery/code/autofix/executeAutofixes\";\nimport { executePushReactions } from \"../common/delivery/code/executePushReactions\";\nimport { executeFingerprinting } from \"../common/delivery/code/fingerprint/executeFingerprinting\";\nimport { executeReview } from \"../common/delivery/code/review/executeReview\";\nimport { Target } from \"../common/delivery/deploy/deploy\";\nimport { executeDeploy } from \"../common/delivery/deploy/executeDeploy\";\nimport { executeUndeploy, offerToDeleteRepository } from \"../common/delivery/deploy/executeUndeploy\";\nimport {\n    ArtifactGoal,\n    AutofixGoal,\n    BuildGoal,\n    DeleteAfterUndeploysGoal,\n    DeleteRepositoryGoal,\n    FingerprintGoal,\n    JustBuildGoal,\n    NoGoal,\n    PushReactionGoal,\n    ReviewGoal,\n    StagingEndpointGoal,\n    StagingVerifiedGoal,\n} from \"../common/delivery/goals/common/commonGoals\";\nimport { Goal } from \"../common/delivery/goals/Goal\";\nimport { Goals } from \"../common/delivery/goals/Goals\";\nimport { SdmGoalImplementationMapper } from \"../common/delivery/goals/SdmGoalImplementationMapper\";\nimport { lastLinesLogInterpreter, LogSuppressor } from \"../common/delivery/goals/support/logInterpreters\";\nimport { ExecuteGoalWithLog } from \"../common/delivery/goals/support/reportGoalError\";\nimport { GoalSetter } from \"../common/listener/GoalSetter\";\nimport { PushMapping } from \"../common/listener/PushMapping\";\nimport { PushTest } from \"../common/listener/PushTest\";\nimport { PushRule } from \"../common/listener/support/PushRule\";\nimport { PushRules } from \"../common/listener/support/PushRules\";\nimport { AnyPush } from \"../common/listener/support/pushtest/commonPushTests\";\nimport { StaticPushMapping } from \"../common/listener/support/StaticPushMapping\";\nimport { deleteRepositoryCommand } from \"../handlers/commands/deleteRepository\";\nimport { disposeCommand } from \"../handlers/commands/disposeCommand\";\nimport { selfDescribeHandler } from \"../handlers/commands/SelfDescribe\";\nimport { displayBuildLogHandler } from \"../handlers/commands/ShowBuildLog\";\nimport { FindArtifactOnImageLinked } from \"../handlers/events/delivery/build/FindArtifactOnImageLinked\";\nimport { InvokeListenersOnBuildComplete } from \"../handlers/events/delivery/build/InvokeListenersOnBuildComplete\";\nimport { SetGoalOnBuildComplete } from \"../handlers/events/delivery/build/SetStatusOnBuildComplete\";\nimport { ReactToSemanticDiffsOnPushImpact } from \"../handlers/events/delivery/code/ReactToSemanticDiffsOnPushImpact\";\nimport { OnDeployStatus } from \"../handlers/events/delivery/deploy/OnDeployStatus\";\nimport { FulfillGoalOnRequested } from \"../handlers/events/delivery/goals/FulfillGoalOnRequested\";\nimport { KubernetesIsolatedGoalLauncher } from \"../handlers/events/delivery/goals/k8s/launchGoalK8\";\nimport { GoalAutomationEventListener } from \"../handlers/events/delivery/goals/launchGoal\";\nimport { RequestDownstreamGoalsOnGoalSuccess } from \"../handlers/events/delivery/goals/RequestDownstreamGoalsOnGoalSuccess\";\nimport { resetGoalsCommand } from \"../handlers/events/delivery/goals/resetGoals\";\nimport { RespondOnGoalCompletion } from \"../handlers/events/delivery/goals/RespondOnGoalCompletion\";\nimport { executeImmaterial, SetGoalsOnPush } from \"../handlers/events/delivery/goals/SetGoalsOnPush\";\nimport { SkipDownstreamGoalsOnGoalFailure } from \"../handlers/events/delivery/goals/SkipDownstreamGoalsOnGoalFailure\";\nimport { executeVerifyEndpoint, SdmVerification } from \"../handlers/events/delivery/verify/executeVerifyEndpoint\";\nimport { OnVerifiedDeploymentStatus } from \"../handlers/events/delivery/verify/OnVerifiedDeploymentStatus\";\nimport { ClosedIssueHandler } from \"../handlers/events/issue/ClosedIssueHandler\";\nimport { NewIssueHandler } from \"../handlers/events/issue/NewIssueHandler\";\nimport { UpdatedIssueHandler } from \"../handlers/events/issue/UpdatedIssueHandler\";\nimport { OnChannelLink } from \"../handlers/events/repo/OnChannelLink\";\nimport { OnFirstPushToRepo } from \"../handlers/events/repo/OnFirstPushToRepo\";\nimport { OnPullRequest } from \"../handlers/events/repo/OnPullRequest\";\nimport { OnRepoCreation } from \"../handlers/events/repo/OnRepoCreation\";\nimport { OnRepoOnboarded } from \"../handlers/events/repo/OnRepoOnboarded\";\nimport { OnTag } from \"../handlers/events/repo/OnTag\";\nimport { OnUserJoiningChannel } from \"../handlers/events/repo/OnUserJoiningChannel\";\nimport { Builder } from \"../spi/build/Builder\";\nimport { InterpretLog } from \"../spi/log/InterpretedLog\";\nimport { EmptyFunctionalUnit, FunctionalUnit } from \"./FunctionalUnit\";\nimport { softwareDeliveryMachineOptions } from \"./sdmOptions\";\nimport { SoftwareDeliveryMachineConfigurer } from \"./SoftwareDeliveryMachineConfigurer\";\nimport { SoftwareDeliveryMachineOptions } from \"./SoftwareDeliveryMachineOptions\";\nimport { ListenerRegistrations } from \"./support/ListenerRegistrations\";\n\n/**\n * Class instantiated to create a **Software Delivery Machine**.\n * Combines commands and delivery event handling using _goals_.\n *\n * Includes built in support for a delivery process spanning\n * common goals of fingerprinting, reacting to fingerprint diffs,\n * code review, build, deployment, endpoint verification and\n * promotion to a production environment.\n *\n * The most important element of a software delivery machine is setting\n * zero or more _push rules_ in the constructor.\n * This is normally done using the internal DSL as follows:\n *\n * ```\n * const sdm = new SoftwareDeliveryMachine(\n *    \"MyMachine\",\n *    options,\n *    whenPushSatisfies(IsMaven, HasSpringBootApplicationClass, not(MaterialChangeToJavaRepo))\n *      .itMeans(\"No material change to Java\")\n *      .setGoals(NoGoals),\n *    whenPushSatisfies(ToDefaultBranch, IsMaven, HasSpringBootApplicationClass, HasCloudFoundryManifest)\n *      .itMeans(\"Spring Boot service to deploy\")\n *      .setGoals(HttpServiceGoals));\n * ```\n *\n * Uses the builder pattern to allow fluent construction. For example:\n *\n * ```\n * softwareDeliveryMachine\n *    .addPushReactions(async pu => ...)\n *    .addNewIssueListeners(async i => ...)\n *    .add...;\n * ```\n */\nexport class SoftwareDeliveryMachine extends ListenerRegistrations {\n\n    public generators: Array<Maker<HandleCommand>> = [];\n\n    public editors: Array<Maker<HandleCommand>> = [];\n\n    public supportingCommands: Array<Maker<HandleCommand>> = [];\n\n    public supportingEvents: Array<Maker<HandleEvent<any>>> = [];\n\n    public functionalUnits: FunctionalUnit[] = [];\n\n    public readonly goalSetters: GoalSetter[] = [];\n\n    private readonly disposalGoalSetters: GoalSetter[] = [];\n\n    // Maintained depending on whether this SDM might mutate\n    private mightMutate: boolean = false;\n\n    /**\n     * Return the PushMapping that will be used on pushes.\n     * Useful in testing goal setting.\n     * @return {PushMapping<Goals>}\n     */\n    get pushMapping(): PushMapping<Goals> {\n        return new PushRules(\"Goal setter\", this.goalSetters);\n    }\n\n    /**\n     * Return if this SDM purely observes, rather than changes an org.\n     * Note that this cannot be 100% reliable, as arbitrary event handlers\n     * could be making commits, initiating deployments etc.\n     * @return {boolean}\n     */\n    get observesOnly(): boolean {\n        if (this.mightMutate) {\n            return false;\n        }\n        return this.autofixRegistrations.length === 0;\n    }\n\n    /*\n     * Store all the implementations we know\n     */\n    public readonly goalFulfillmentMapper = new SdmGoalImplementationMapper(\n        // For now we only support kube or in process\n        process.env.ATOMIST_GOAL_LAUNCHER === \"kubernetes\" ? KubernetesIsolatedGoalLauncher : undefined); // public for testing\n\n    /**\n     * Provide the implementation for a goal.\n     * The SDM will run it as soon as the goal is ready (all preconditions are met).\n     * If you provide a PushTest, then the SDM can assign different implementations\n     * to the same goal based on the code in the project.\n     * @param {string} implementationName\n     * @param {Goal} goal\n     * @param {ExecuteGoalWithLog} goalExecutor\n     * @param options PushTest to narrow matching & InterpretLog that can handle\n     * the log from the goalExecutor function\n     * @return {this}\n     */\n    public addGoalImplementation(implementationName: string,\n                                 goal: Goal,\n                                 goalExecutor: ExecuteGoalWithLog,\n                                 options?: Partial<{\n                                     pushTest: PushTest,\n                                     logInterpreter: InterpretLog,\n                                 }>): this {\n        const optsToUse = {\n            pushTest: AnyPush,\n            logInterpreter: lastLinesLogInterpreter(implementationName, 10),\n            ...options,\n        };\n        const implementation = {\n            implementationName, goal, goalExecutor,\n            pushTest: optsToUse.pushTest,\n            logInterpreter: optsToUse.logInterpreter,\n        };\n        this.goalFulfillmentMapper.addImplementation(implementation);\n        return this;\n    }\n\n    public addDisposalRules(...goalSetters: GoalSetter[]): this {\n        this.disposalGoalSetters.push(...goalSetters);\n        return this;\n    }\n\n    private get onRepoCreation(): Maker<OnRepoCreation> {\n        return this.repoCreationListeners.length > 0 ?\n            () => new OnRepoCreation(this.repoCreationListeners, this.opts.credentialsResolver) :\n            undefined;\n    }\n\n    private get onNewRepoWithCode(): Maker<OnFirstPushToRepo> {\n        return this.newRepoWithCodeActions.length > 0 ?\n            () => new OnFirstPushToRepo(this.newRepoWithCodeActions, this.opts.credentialsResolver) :\n            undefined;\n    }\n\n    private get semanticDiffReactor(): Maker<ReactToSemanticDiffsOnPushImpact> {\n        return this.fingerprintDifferenceListeners.length > 0 ?\n            () => new ReactToSemanticDiffsOnPushImpact(this.fingerprintDifferenceListeners, this.opts.credentialsResolver) :\n            undefined;\n    }\n\n    private get goalSetting(): FunctionalUnit {\n        if (this.goalSetters.length === 0) {\n            logger.warn(\"No goal setters\");\n            return EmptyFunctionalUnit;\n        }\n        return {\n            eventHandlers: [() => new SetGoalsOnPush(this.opts.projectLoader,\n                this.goalSetters, this.goalsSetListeners,\n                this.goalFulfillmentMapper, this.opts.credentialsResolver)],\n            commandHandlers: [() => resetGoalsCommand({\n                projectLoader: this.opts.projectLoader,\n                goalsListeners: this.goalsSetListeners,\n                goalSetters: this.goalSetters,\n                implementationMapping: this.goalFulfillmentMapper,\n            })],\n        };\n    }\n\n    private get goalConsequences(): FunctionalUnit {\n        return {\n            eventHandlers: [\n                () => new SkipDownstreamGoalsOnGoalFailure(),\n                () => new RequestDownstreamGoalsOnGoalSuccess(this.goalFulfillmentMapper),\n                () => new RespondOnGoalCompletion(this.opts.credentialsResolver,\n                    this.goalCompletionListeners)],\n            commandHandlers: [],\n        };\n    }\n\n    private readonly artifactFinder = () => new FindArtifactOnImageLinked(\n        ArtifactGoal,\n        this.opts.artifactStore,\n        this.artifactListenerRegistrations,\n        this.opts.projectLoader,\n        this.opts.credentialsResolver)\n\n    private get notifyOnDeploy(): Maker<OnDeployStatus> {\n        return this.deploymentListeners.length > 0 ?\n            () => new OnDeployStatus(this.deploymentListeners, this.opts.credentialsResolver) :\n            undefined;\n    }\n\n    private addVerifyImplementation(): this {\n        const stagingVerification: SdmVerification = {\n            verifiers: this.endpointVerificationListeners,\n            endpointGoal: StagingEndpointGoal,\n            requestApproval: true,\n        };\n        return this.addGoalImplementation(\"VerifyInStaging\",\n            StagingVerifiedGoal,\n            executeVerifyEndpoint(stagingVerification));\n    }\n\n    private get onVerifiedStatus(): Maker<OnVerifiedDeploymentStatus> {\n        return this.verifiedDeploymentListeners.length > 0 ?\n            () => new OnVerifiedDeploymentStatus(this.verifiedDeploymentListeners, this.opts.credentialsResolver) :\n            undefined;\n    }\n\n    private get disposal(): FunctionalUnit {\n        return {\n            commandHandlers: [\n                () => disposeCommand({\n                    goalSetters: this.disposalGoalSetters,\n                    projectLoader: this.opts.projectLoader,\n                    goalsListeners: this.goalsSetListeners,\n                    implementationMapping: this.goalFulfillmentMapper,\n                }),\n                deleteRepositoryCommand],\n            eventHandlers: [],\n        };\n    }\n\n    private readonly onBuildComplete: Maker<SetGoalOnBuildComplete> =\n        () => new SetGoalOnBuildComplete([BuildGoal, JustBuildGoal])\n\n    get showBuildLog(): Maker<HandleCommand> {\n        return () => {\n            return displayBuildLogHandler();\n        };\n    }\n\n    private get allFunctionalUnits(): FunctionalUnit[] {\n        return this.functionalUnits\n            .concat([\n                this.goalSetting,\n                this.goalConsequences,\n                this.disposal,\n            ]);\n    }\n\n    get eventHandlers(): Array<Maker<HandleEvent<any>>> {\n        return this.supportingEvents\n            .concat(() => new FulfillGoalOnRequested(this.goalFulfillmentMapper, this.opts.projectLoader, this.opts.logFactory))\n            .concat(_.flatten(this.allFunctionalUnits.map(fu => fu.eventHandlers)))\n            .concat([\n                this.userJoiningChannelListeners.length > 0 ?\n                    () => new OnUserJoiningChannel(this.userJoiningChannelListeners, this.opts.credentialsResolver) :\n                    undefined,\n                this.buildListeners.length > 0 ?\n                    () => new InvokeListenersOnBuildComplete(this.buildListeners, this.opts.credentialsResolver) :\n                    undefined,\n                this.tagListeners.length > 0 ? () => new OnTag(this.tagListeners, this.opts.credentialsResolver) : undefined,\n                this.newIssueListeners.length > 0 ? () => new NewIssueHandler(this.newIssueListeners, this.opts.credentialsResolver) : undefined,\n                this.updatedIssueListeners.length > 0 ?\n                    () => new UpdatedIssueHandler(this.updatedIssueListeners, this.opts.credentialsResolver) :\n                    undefined,\n                this.closedIssueListeners.length > 0 ?\n                    () => new ClosedIssueHandler(this.closedIssueListeners, this.opts.credentialsResolver) :\n                    undefined,\n                this.channelLinkListeners.length > 0 ?\n                    () => new OnChannelLink(this.opts.projectLoader, this.channelLinkListeners, this.opts.credentialsResolver) :\n                    undefined,\n                this.pullRequestListeners.length > 0 ?\n                    () => new OnPullRequest(this.opts.projectLoader, this.pullRequestListeners,\n                        this.opts.credentialsResolver) : undefined,\n                this.repoOnboardingListeners.length > 0 ?\n                    () => new OnRepoOnboarded(this.repoOnboardingListeners, this.opts.credentialsResolver) :\n                    undefined,\n                this.onRepoCreation,\n                this.onNewRepoWithCode,\n                this.semanticDiffReactor,\n                this.onBuildComplete,\n                this.notifyOnDeploy,\n                this.onVerifiedStatus,\n                this.artifactFinder,\n            ]).filter(m => !!m);\n    }\n\n    get commandHandlers(): Array<Maker<HandleCommand>> {\n        return this.generators\n            .concat(_.flatten(this.allFunctionalUnits.map(fu => fu.commandHandlers)))\n            .concat(this.editors)\n            .concat(this.supportingCommands)\n            .concat([this.showBuildLog])\n            .filter(m => !!m);\n    }\n\n    public addGenerators(...g: Array<Maker<HandleCommand>>): this {\n        this.generators = this.generators.concat(g);\n        return this;\n    }\n\n    public addEditors(...e: Array<Maker<HandleCommand>>): this {\n        this.editors = this.editors.concat(e);\n        return this;\n    }\n\n    public addSupportingCommands(...e: Array<Maker<HandleCommand>>): this {\n        this.supportingCommands.push(...e);\n        return this;\n    }\n\n    public addSupportingEvents(...e: Array<Maker<HandleEvent<any>>>): this {\n        this.supportingEvents.push(...e);\n        return this;\n    }\n\n    public addFunctionalUnits(...fus: FunctionalUnit[]): this {\n        this.functionalUnits.push(...fus);\n        return this;\n    }\n\n    public addBuildRules(...rules: Array<PushRule<Builder> | Array<PushRule<Builder>>>): this {\n        this.mightMutate = rules.length > 0;\n        _.flatten(rules).forEach(r =>\n            this.addGoalImplementation(r.name, BuildGoal,\n                executeBuild(this.opts.projectLoader, r.value),\n                {\n                    pushTest: r.pushTest,\n                    logInterpreter: r.value.logInterpreter,\n                })\n                .addGoalImplementation(r.name, JustBuildGoal,\n                    executeBuild(this.opts.projectLoader, r.value),\n                    {\n                        pushTest: r.pushTest,\n                        logInterpreter:\n                        r.value.logInterpreter,\n                    },\n                ));\n        return this;\n    }\n\n    public addDeployRules(...rules: Array<StaticPushMapping<Target> | Array<StaticPushMapping<Target>>>): this {\n        this.mightMutate = rules.length > 0;\n        _.flatten(rules).forEach(r => {\n            // deploy\n            this.addGoalImplementation(r.name, r.value.deployGoal, executeDeploy(this.opts.artifactStore,\n                r.value.endpointGoal, r.value),\n                {\n                    pushTest: r.pushTest,\n                    logInterpreter: r.value.deployer.logInterpreter,\n                },\n            );\n            // endpoint\n            this.knownSideEffect(\n                r.value.endpointGoal,\n                r.value.deployGoal.definition.displayName);\n            // undeploy\n            this.addGoalImplementation(r.name, r.value.undeployGoal, executeUndeploy(r.value),\n                {\n                    pushTest: r.pushTest,\n                    logInterpreter: r.value.deployer.logInterpreter,\n                },\n            );\n        });\n        return this;\n    }\n\n    /**\n     * Declare that a goal will become successful based on something outside.\n     * For instance, ArtifactGoal succeeds because of an ImageLink event.\n     * This tells the SDM that it does not need to run anything when this\n     * goal becomes ready.\n     * @param {Goal} goal\n     * @param {string} sideEffectName\n     * @param {PushTest} pushTest\n     */\n    public knownSideEffect(goal: Goal, sideEffectName: string,\n                           pushTest: PushTest = AnyPush) {\n        this.goalFulfillmentMapper.addSideEffect({\n            goal,\n            sideEffectName, pushTest,\n        });\n    }\n\n    /**\n     * Add the given capabilities from these configurers\n     * @param {SoftwareDeliveryMachineConfigurer} configurers\n     * @return {this}\n     */\n    public addCapabilities(...configurers: SoftwareDeliveryMachineConfigurer[]): this {\n        for (const configurer of configurers) {\n            this.configure(configurer);\n        }\n        return this;\n    }\n\n    public configure(configurer: SoftwareDeliveryMachineConfigurer): this {\n        logger.info(\"Adding capabilities from configurer '%s'\", configurer.name);\n        configurer.configure(this);\n        return this;\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @param {SoftwareDeliveryMachineOptions} opts\n     * @param {GoalSetter} goalSetters tell me what to do on a push. Hint: start with \"whenPushSatisfies(...)\"\n     */\n    constructor(public readonly name: string,\n                public readonly opts: SoftwareDeliveryMachineOptions,\n                ...goalSetters: Array<GoalSetter | GoalSetter[]>) {\n        super();\n        this.goalSetters = _.flatten(goalSetters);\n        this.addSupportingCommands(\n            selfDescribeHandler(this),\n            listGeneratorsHandler(this),\n            createRepoHandler(this),\n        );\n\n        this.addGoalImplementation(\"Autofix\", AutofixGoal,\n            executeAutofixes(this.opts.projectLoader, this.autofixRegistrations), {\n                // Autofix errors should not be reported to the user\n                logInterpreter: LogSuppressor,\n            })\n            .addGoalImplementation(\"DoNothing\", NoGoal, executeImmaterial)\n            .addGoalImplementation(\"FingerprinterRegistration\", FingerprintGoal,\n                executeFingerprinting(this.opts.projectLoader, this.fingerprinterRegistrations, this.fingerprintListeners))\n            .addGoalImplementation(\"CodeReactions\", PushReactionGoal,\n                executePushReactions(this.opts.projectLoader, this.pushReactionRegistrations))\n            .addGoalImplementation(\"Reviews\", ReviewGoal,\n                executeReview(this.opts.projectLoader, this.reviewerRegistrations, this.reviewListeners))\n            .addVerifyImplementation()\n            .addGoalImplementation(\"OfferToDeleteRepo\", DeleteRepositoryGoal,\n                offerToDeleteRepository())\n            .addGoalImplementation(\"OfferToDeleteRepoAfterUndeploys\", DeleteAfterUndeploysGoal,\n                offerToDeleteRepository());\n        this.knownSideEffect(ArtifactGoal, \"from ImageLinked\");\n    }\n\n}\n\nexport interface ConfigureOptions {\n    sdmOptions?: Partial<SoftwareDeliveryMachineOptions>;\n    requiredConfigurationValues?: string[];\n}\n\nexport function configureSdm(\n    machineMaker: (options: SoftwareDeliveryMachineOptions, configuration: Configuration) => SoftwareDeliveryMachine,\n    options: ConfigureOptions = {}) {\n    return async (config: Configuration) => {\n        const sdmOptions = {\n            ...softwareDeliveryMachineOptions(config),\n            ...(options.sdmOptions ? options.sdmOptions : {}),\n        };\n        const machine = machineMaker(sdmOptions, config);\n\n        const forked = process.env.ATOMIST_ISOLATED_GOAL === \"true\";\n        if (forked) {\n            config.listeners.push(\n                new GoalAutomationEventListener(machine.goalFulfillmentMapper, machine.opts.projectLoader, machine.opts.logFactory));\n            config.name = `${config.name}-${process.env.ATOMIST_GOAL_ID || guid()}`;\n            // force ephemeral policy and no handlers or ingesters\n            config.policy = \"ephemeral\";\n            config.commands = [];\n            config.events = [];\n            config.ingesters = [];\n\n            // Disable app events for forked clients\n            config.applicationEvents.enabled = false;\n        } else {\n            const missingValues = [];\n            (options.requiredConfigurationValues || []).forEach(v => {\n                if (!_.get(config, v)) {\n                    missingValues.push(v);\n                }\n            });\n            if (missingValues.length > 0) {\n                throw new Error(\n                    `Missing configuration values. Please add the following values to your client configuration: '${missingValues.join(\", \")}'`);\n            }\n\n            if (!config.commands) {\n                config.commands = [];\n            }\n            config.commands.push(...machine.commandHandlers);\n\n            if (!config.events) {\n                config.events = [];\n            }\n            config.events.push(...machine.eventHandlers);\n        }\n        return config;\n    };\n}\n"]}