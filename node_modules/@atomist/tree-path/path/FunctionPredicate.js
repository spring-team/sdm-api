"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Predicate that executes a named predicate function, defined on the functionRegistry
 * General alternative to XPath functions. Allows the identification
 * of arbitrary functions to be executed against nodes
 */
class FunctionPredicate {
    /**
     * Takes the name of a predicate function
     * @param {string} name
     */
    constructor(name) {
        this.name = name;
        this.kind = "FunctionPredicate";
    }
    evaluate(nodeToTest, returnedNodes, ee, functionRegistry) {
        return !!functionRegistry[this.name] &&
            functionRegistry[this.name](nodeToTest, returnedNodes, ee, functionRegistry);
    }
    toString() {
        return `Function: '${this.name}'`;
    }
}
exports.FunctionPredicate = FunctionPredicate;
function isFunctionPredicate(p) {
    const maybeFp = p;
    return maybeFp.kind === "FunctionPredicate" && !!maybeFp.name;
}
exports.isFunctionPredicate = isFunctionPredicate;
//# sourceMappingURL=FunctionPredicate.js.map