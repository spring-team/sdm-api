"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Superclass for InputStateListener implementations that consume a single character at a time.
 * Stateful.
 */
var CharwiseInputStateListener = /** @class */ (function () {
    function CharwiseInputStateListener() {
    }
    CharwiseInputStateListener.prototype.read = function (s) {
        for (var _i = 0, s_1 = s; _i < s_1.length; _i++) {
            var ch = s_1[_i];
            this.consume(ch);
        }
        return this;
    };
    return CharwiseInputStateListener;
}());
exports.CharwiseInputStateListener = CharwiseInputStateListener;
/**
 * Convenient superclass for InputStateListeners that are state machines
 */
var AbstractStateMachine = /** @class */ (function (_super) {
    __extends(AbstractStateMachine, _super);
    function AbstractStateMachine(state) {
        var _this = _super.call(this) || this;
        _this.state = state;
        return _this;
    }
    return AbstractStateMachine;
}(CharwiseInputStateListener));
exports.AbstractStateMachine = AbstractStateMachine;
//# sourceMappingURL=AbstractStateMachine.js.map