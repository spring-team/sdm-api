"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MatchPrefixResult_1 = require("../../MatchPrefixResult");
var PatternMatch_1 = require("../../PatternMatch");
/**
 * Inspired by Snobol SPAN: http://www.snobol4.org/docs/burks/tutorial/ch4.htm
 * SPAN(S) matches one or more subject characters from the set in S.
 * SPAN must match at least one subject character, and will match the LONGEST subject string possible.
 */
var Span = /** @class */ (function () {
    function Span(characters) {
        this.characters = characters;
    }
    Object.defineProperty(Span.prototype, "$id", {
        get: function () {
            return "Span[" + this.characters + "]";
        },
        enumerable: true,
        configurable: true
    });
    Span.prototype.matchPrefix = function (is, thisMatchContext, parseContext) {
        var currentIs = is;
        var matched = "";
        while (!currentIs.exhausted() && this.characters.indexOf(currentIs.peek(1)) > -1) {
            matched += currentIs.peek(1);
            currentIs = currentIs.advance();
        }
        return (currentIs !== is) ?
            MatchPrefixResult_1.matchPrefixSuccess(new PatternMatch_1.TerminalPatternMatch(this.$id, matched, is.offset, currentIs)) :
            new MatchPrefixResult_1.MatchFailureReport(this.$id, is.offset, context);
    };
    return Span;
}());
exports.Span = Span;
//# sourceMappingURL=Span.js.map