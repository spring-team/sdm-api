import { ChangeSet } from "./ChangeSet";
import { PatternMatch } from "../PatternMatch";
export interface MatchUpdater {
    newContent(): string;
    replaceAll(newValue: string): void;
}
/**
 * Handle low level updating using get/set properties
 */
export declare class MicrogrammarUpdates {
    updatableMatch<T>(match: T & PatternMatch, cs: ChangeSet | string): T & MatchUpdater;
    /**
     * adds each match as a property to the target, with setters that update the changeset
     * @param target
     * @param cs
     * @param match
     */
    private addMatchesAsProperties(target, cs, match);
}
