"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Concat_1 = require("../matchers/Concat");
var Primitives_1 = require("../Primitives");
var Break_1 = require("./Break");
/**
 * Print a matcher structure
 *
 * This is implemented only as far as I needed it; let's see whether
 * we want to use it more before fleshing out the implementation.
 */
function isMatcher(ml) {
    return !!(ml.name);
}
function isConcat(ml) {
    return !!(ml.matchSteps);
}
function print(ml) {
    if (isConcat(ml)) {
        var matcherSteps = ml.matchSteps.filter(function (s) { return isMatcher(s); }).map(function (m) { return m; });
        return matcherSteps.map(function (s) { return print(s); }).join(" ");
    }
    else if (Primitives_1.isLiteral(ml)) {
        return ml.literal;
    }
    else if (Concat_1.isNamedMatcher(ml)) {
        return print(ml.ml);
    }
    else if (Break_1.isBreak(ml)) {
        return ("...(" + print(ml.terminateOn) + ")");
    }
    else if (isMatcher(ml)) {
        return "Matcher:" + ml.name;
    }
    else {
        return "???";
    }
}
exports.print = print;
//# sourceMappingURL=MatcherPrinter.js.map