"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Concat_1 = require("../matchers/Concat");
var Skip_1 = require("../matchers/skip/Skip");
var MatchPrefixResult_1 = require("../MatchPrefixResult");
var StringInputStream_1 = require("../spi/StringInputStream");
var InputStateFactory_1 = require("./InputStateFactory");
function exactMatch(matcher, input, parseContext, l) {
    if (parseContext === void 0) { parseContext = {}; }
    var wrapped = Concat_1.Concat.of({
        desired: matcher,
        trailingJunk: Skip_1.RestOfInput,
    });
    var result = wrapped.matchPrefix(InputStateFactory_1.inputStateFromStream(toInputStream(input), l), {}, parseContext);
    if (MatchPrefixResult_1.isSuccessfulMatch(result)) {
        var detyped = result.match;
        if (detyped.trailingJunk !== "") {
            return { description: "Not all input was consumed: Left over [" + detyped.trailingJunk.$matched + "]" };
        }
        else {
            return detyped.desired;
        }
    }
    return result;
}
exports.exactMatch = exactMatch;
function toInputStream(input) {
    return (typeof input === "string") ?
        new StringInputStream_1.StringInputStream(input) :
        input;
}
//# sourceMappingURL=ExactMatch.js.map