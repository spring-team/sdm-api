import { Arg, CommandInvocation } from "../internal/invoker/Payload";
/**
 * Parse positional parameters into parameter name/value pairs.  The
 * positional parameters should be of the form NAME[=VALUE].  If
 * =VALUE is omitted, the value is set to `undefined`.  If the VALUE
 * is empty, i.e., NAME=, then the value is the empty string.
 *
 * @param args typically argv._ from tags
 * @return array of CommandInvocation Arg
 */
export declare function extractArgs(args: string[]): Arg[];
export declare function readVersion(): string;
export declare function start(cwd: string, runInstall?: boolean, runCompile?: boolean): number;
export declare function run(cwd: string, ci: CommandInvocation, runInstall?: boolean, runCompile?: boolean): number;
export declare function gqlFetch(cwd: string, teamId: string, token?: string, runInstall?: boolean): Promise<number>;
export declare function gqlGen(cwd: string, pattern: string, runInstall?: boolean): Promise<number>;
export declare function config(argv: any): Promise<number>;
export declare function gitInfo(argv: any): Promise<number>;
export declare function install(cwd: string): number;
export declare function compile(cwd: string): number;
export declare function checkPackageJson(cwd: string): boolean;
