import { HandlerContext } from "../../HandlerContext";
import { ProjectOperationCredentials } from "../common/ProjectOperationCredentials";
import { RepoFilter } from "../common/repoFilter";
import { RepoFinder } from "../common/repoFinder";
import { RepoLoader } from "../common/repoLoader";
import { ProjectReviewer } from "./projectReviewer";
import { ProjectReview, ReviewResult } from "./ReviewResult";
/**
 * Review all the repos
 * @param {HandlerContext} ctx
 * @param credentials credentials to use to find and load repos
 * @param {ProjectReviewer} reviewer
 * @param {RepoFinder} repoFinder
 * @param parameters parameters to the reviewer
 * @param {} repoFilter
 * @param {RepoLoader} repoLoader
 * @return {Promise<Array<ActionResult<GitProject>>>}
 */
export declare function reviewAll<P, R extends ProjectReview = ProjectReview>(ctx: HandlerContext, credentials: ProjectOperationCredentials, reviewer: ProjectReviewer<P, R>, parameters?: P, repoFinder?: RepoFinder, repoFilter?: RepoFilter, repoLoader?: RepoLoader): Promise<ProjectReview[]>;
export declare function review<P, R extends ProjectReview = ProjectReview>(ctx: HandlerContext, credentials: ProjectOperationCredentials, reviewer: ProjectReviewer<P, R>, parameters?: P, repoFinder?: RepoFinder, repoFilter?: RepoFilter, repoLoader?: RepoLoader): Promise<ReviewResult>;
