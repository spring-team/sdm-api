"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BasicAuthCredentials_1 = require("./BasicAuthCredentials");
const ProjectOperationCredentials_1 = require("./ProjectOperationCredentials");
class AbstractRepoRef {
    constructor(providerType, remoteBase, owner, repo, sha = "master", path) {
        this.providerType = providerType;
        this.remoteBase = remoteBase;
        this.owner = owner;
        this.repo = repo;
        this.sha = sha;
        this.path = path;
    }
    get url() {
        return `https://${this.remoteBase}/${this.owner}/${this.repo}`;
    }
    cloneUrl(creds) {
        if (BasicAuthCredentials_1.isBasicAuthCredentials(creds)) {
            return `https://${encodeURIComponent(creds.username)}:${encodeURIComponent(creds.password)}@${this.remoteBase}/${this.pathComponent}.git`;
        }
        if (!ProjectOperationCredentials_1.isTokenCredentials(creds)) {
            throw new Error("Only token or basic auth supported");
        }
        return `https://${creds.token}:x-oauth-basic@${this.remoteBase}/${this.pathComponent}.git`;
    }
    get pathComponent() {
        return this.owner + "/" + this.repo;
    }
}
exports.AbstractRepoRef = AbstractRepoRef;
//# sourceMappingURL=AbstractRemoteRepoRef.js.map