"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert = require("power-assert");
const decorators_1 = require("../../../decorators");
const BaseEditorOrReviewerParameters_1 = require("./BaseEditorOrReviewerParameters");
const GitHubFallbackReposParameters_1 = require("./GitHubFallbackReposParameters");
/**
 * Editor parameters that apply to a single GitHub repo mapped to a Slack channel,
 * or otherwise use the targets.repos regex.
 */
let EditOneOrAllParameters = class EditOneOrAllParameters extends BaseEditorOrReviewerParameters_1.BaseEditorOrReviewerParameters {
    constructor() {
        super(new GitHubFallbackReposParameters_1.GitHubFallbackReposParameters());
    }
    bindAndValidate() {
        const targets = this.targets;
        if (!targets.repo) {
            assert(!!targets.repos, "Must set repos or repo");
            targets.repo = targets.repos;
        }
    }
};
EditOneOrAllParameters = __decorate([
    decorators_1.Parameters(),
    __metadata("design:paramtypes", [])
], EditOneOrAllParameters);
exports.EditOneOrAllParameters = EditOneOrAllParameters;
//# sourceMappingURL=EditOneOrAllParameters.js.map