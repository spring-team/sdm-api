import { ActionResult } from "../../action/ActionResult";
import { Configurable } from "../../project/git/Configurable";
import { ProjectOperationCredentials } from "./ProjectOperationCredentials";
import { ProviderType, RemoteRepoRef } from "./RepoId";
export declare abstract class AbstractRepoRef implements RemoteRepoRef {
    providerType: ProviderType;
    remoteBase: string;
    owner: string;
    repo: string;
    sha: string;
    path: string;
    branch?: string;
    constructor(providerType: ProviderType, remoteBase: string, owner: string, repo: string, sha?: string, path?: string);
    readonly url: string;
    cloneUrl(creds: ProjectOperationCredentials): string;
    readonly pathComponent: string;
    abstract createRemote(creds: ProjectOperationCredentials, description: string, visibility: any): Promise<ActionResult<this>>;
    abstract setUserConfig(credentials: ProjectOperationCredentials, project: Configurable): Promise<ActionResult<any>>;
    abstract raisePullRequest(creds: ProjectOperationCredentials, title: string, body: string, head: string, base: string): Promise<ActionResult<this>>;
    abstract deleteRemote(creds: ProjectOperationCredentials): Promise<ActionResult<this>>;
}
