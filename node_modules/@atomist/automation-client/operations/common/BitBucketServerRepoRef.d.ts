import { ActionResult } from "../../action/ActionResult";
import { Configurable } from "../../project/git/Configurable";
import { AbstractRepoRef } from "./AbstractRemoteRepoRef";
import { ProjectOperationCredentials } from "./ProjectOperationCredentials";
export declare class BitBucketServerRepoRef extends AbstractRepoRef {
    private isProject;
    private readonly apiBase;
    private readonly ownerType;
    constructor(remoteBase: string, owner: string, repo: string, isProject?: boolean, sha?: string, path?: string);
    createRemote(creds: ProjectOperationCredentials, description: string, visibility: any): Promise<ActionResult<this>>;
    deleteRemote(creds: ProjectOperationCredentials): Promise<ActionResult<this>>;
    setUserConfig(credentials: ProjectOperationCredentials, project: Configurable): Promise<ActionResult<any>>;
    raisePullRequest(credentials: ProjectOperationCredentials, title: string, body: string, head: string, base: string): Promise<ActionResult<this>>;
    readonly url: string;
    readonly pathComponent: string;
    private readonly apiBasePathComponent;
    readonly apiPathComponent: string;
}
