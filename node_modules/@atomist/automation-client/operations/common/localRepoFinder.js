"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const logger_1 = require("../../internal/util/logger");
const fileGlobs_1 = require("../../project/fileGlobs");
const NodeFsLocalProject_1 = require("../../project/local/NodeFsLocalProject");
const projectUtils_1 = require("../../project/util/projectUtils");
const GitHubRepoRef_1 = require("./GitHubRepoRef");
/**
 * Look for repos under /org/repo format, from current working directory
 */
function twoTierDirectoryRepoFinder(cwd) {
    return (context) => {
        logger_1.logger.debug(`Looking for repos in directories under '${cwd}'`);
        return NodeFsLocalProject_1.NodeFsLocalProject.fromExistingDirectory(new GitHubRepoRef_1.GitHubRepoRef("owner", "sources"), cwd)
            .then(project => projectUtils_1.toPromise(project.streamFilesRaw(["*/*/"].concat(fileGlobs_1.DefaultExcludes), { nodir: false })))
            .then(twoDirs => twoDirs.map(dir => {
            const path = dir.path.startsWith("/") ? dir.path.substr(1) : dir.path;
            const components = path.split("/");
            const owner = components[0];
            const repo = components[1];
            const baseDir = cwd + "/" + owner + "/" + repo;
            return { owner, repo, sha: "master", baseDir };
        }));
    };
}
exports.twoTierDirectoryRepoFinder = twoTierDirectoryRepoFinder;
//# sourceMappingURL=localRepoFinder.js.map