"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorators_1 = require("../../decorators");
const GitHubSourceRepoParameters_1 = require("../common/params/GitHubSourceRepoParameters");
const SourceRepoParameters_1 = require("../common/params/SourceRepoParameters");
const GitHubRepoCreationParameters_1 = require("./GitHubRepoCreationParameters");
/**
 * Default parameters needed to create a new repo from a seed.
 * Defaults to use GitHub.com, but subclasses can override the source and target parameters.
 */
let BaseSeedDrivenGeneratorParameters = class BaseSeedDrivenGeneratorParameters {
    /**
     * Subclasses can override this for non GitHub target strategies.
     * @param {SourceRepoParameters} source
     * @param {NewRepoCreationParameters} target
     */
    constructor(source = new GitHubSourceRepoParameters_1.GitHubSourceRepoParameters(), target = new GitHubRepoCreationParameters_1.GitHubRepoCreationParameters()) {
        this.source = source;
        this.target = target;
        this.addAtomistWebhook = false;
    }
};
__decorate([
    decorators_1.Parameter({
        pattern: /^(?:true|false)$/,
        type: "boolean",
        displayName: "Add Atomist webhook",
        description: "whether to add the Atomist webhook to the repository to allow updates",
        validInput: "'true' or 'false'",
        required: false,
        displayable: true,
    }),
    __metadata("design:type", Boolean)
], BaseSeedDrivenGeneratorParameters.prototype, "addAtomistWebhook", void 0);
BaseSeedDrivenGeneratorParameters = __decorate([
    decorators_1.Parameters(),
    __metadata("design:paramtypes", [SourceRepoParameters_1.SourceRepoParameters, Object])
], BaseSeedDrivenGeneratorParameters);
exports.BaseSeedDrivenGeneratorParameters = BaseSeedDrivenGeneratorParameters;
//# sourceMappingURL=BaseSeedDrivenGeneratorParameters.js.map