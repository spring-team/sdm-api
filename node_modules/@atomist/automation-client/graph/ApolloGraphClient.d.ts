import ApolloClient from "apollo-client";
import { GraphClient, MutationOptions, QueryOptions } from "../spi/graph/GraphClient";
/**
 * Implementation of GraphClient using Apollo Client.
 */
export declare class ApolloGraphClient implements GraphClient {
    endpoint: string;
    /**
     * Configured Apollo Client instance subclasses can use directly
     */
    readonly client: ApolloClient<any>;
    /**
     * Create a new GraphClient
     * @param endpoint GraphQL endpoint
     * @param headers any special headers to use
     */
    constructor(endpoint: string, headers?: any);
    query<T, Q>(options: QueryOptions<Q> | string): Promise<T>;
    executeQueryFromFile<T, Q>(queryFile: string, variables?: Q, queryOptions?: any, current?: string): Promise<T>;
    executeQuery<T, Q>(q: string, variables?: Q, queryOptions?: any): Promise<T>;
    mutate<T, Q>(options: MutationOptions<Q> | string): Promise<T>;
    executeMutationFromFile<T, Q>(mutationFile: string, variables?: Q, mutationOptions?: any, current?: string): Promise<T>;
    executeMutation<T, Q>(m: string, variables?: Q, mutationOptions?: any): Promise<any>;
}
