import { EventFired } from "../../HandleEvent";
import { HandlerContext } from "../../HandlerContext";
import { HandlerResult } from "../../HandlerResult";
import { AutomationEventListener, AutomationEventListenerSupport } from "../../server/AutomationEventListener";
import { CommandInvocation } from "../invoker/Payload";
export declare class MetricEnabledAutomationEventListener extends AutomationEventListenerSupport implements AutomationEventListener {
    commandSuccessful(payload: CommandInvocation, ctx: HandlerContext, result: HandlerResult): Promise<any>;
    commandFailed(payload: CommandInvocation, ctx: HandlerContext, err: any): Promise<any>;
    eventSuccessful(payload: EventFired<any>, ctx: HandlerContext, result: HandlerResult[]): Promise<any>;
    eventFailed(payload: EventFired<any>, ctx: HandlerContext, err: any): Promise<any>;
}
