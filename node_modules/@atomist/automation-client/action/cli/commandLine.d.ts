/// <reference types="node" />
import { ExecOptions } from "child_process";
import { ActionResult } from "../ActionResult";
export interface ChildProcess {
    exitCode: number;
    killed: boolean;
    pid: number;
}
export interface CommandResult<T = undefined> extends ActionResult<T> {
    stdout: string;
    stderr: string;
    childProcess: ChildProcess;
}
/**
 * Run a child process as promise, with basic type information
 * @param {string} cmd
 * @param {"child_process".ExecOptions} opts
 * @return {Promise<CommandResult>}
 */
export declare function runCommand(cmd: string, opts: ExecOptions): Promise<CommandResult>;
