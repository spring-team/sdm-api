import { AxiosPromise } from "axios";
import { WrapOptions } from "retry";
/**
 * Scheme and hostname (authority) of the Atomist webhook URL.
 */
export declare function webhookBaseUrl(): string;
/**
 * Atomist webhooks supported by these functions.
 */
export declare type AtomistWebhookType = "application" | "build" | "link-image";
/**
 * Post payload to the Atomist webhook URL.  It will retry
 * several times.
 *
 * @param webhook type of webhook
 * @param payload object to post
 * @param teamId Atomist team ID
 * @param retryOptions change default retry options
 * @return response of post operation
 */
export declare function postAtomistWebhook(webhook: AtomistWebhookType, payload: any, teamId: string, retryOptions?: WrapOptions): AxiosPromise<any>;
/**
 * Atomist generic build webhook payload repository structure.
 */
export interface AtomistBuildRepository {
    owner_name: string;
    name: string;
}
/**
 * Atomist generic build trigger types.
 */
export declare type AtomistBuildType = "cron" | "pull_request" | "push" | "tag" | "manual";
/**
 * Atomist generic build statuses.
 */
export declare type AtomistBuildStatus = "started" | "failed" | "error" | "passed" | "canceled";
/**
 * Atomist generic build post payload structure.
 */
export interface AtomistBuild {
    repository: AtomistBuildRepository;
    number?: number;
    name?: string;
    compare_url?: string;
    type: AtomistBuildType;
    pull_request_number?: number;
    build_url?: string;
    status: AtomistBuildStatus;
    id?: string;
    commit: string;
    tag?: string;
    branch?: string;
    provider?: string;
}
/**
 * Atomist link image commit information structure.
 */
export interface AtomistLinkImageGit {
    owner: string;
    repo: string;
    sha: string;
}
/**
 * Atomist link image image information structure.
 */
export interface AtomistLinkImageDocker {
    image: string;
}
/**
 * Atomist link image post payload structure.
 */
export interface AtomistLinkImage {
    git: AtomistLinkImageGit;
    docker: AtomistLinkImageDocker;
    type: "link-image";
}
