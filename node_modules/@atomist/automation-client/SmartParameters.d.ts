export interface ValidationError {
    message: string;
}
export declare type ValidationResult = void | ValidationError;
export declare function isValidationError(vr: ValidationResult): vr is ValidationError;
/**
 * Interface optionally implemented by parameters objects--whether HandleCommand
 * instances or external objects--to perform any binding logic and validate their parameters.
 * Allows returning a promise so that implementations can perform network calls etc
 * to validate. Simply return void if binding without validation.
 */
export interface SmartParameters {
    bindAndValidate(): ValidationResult | Promise<ValidationResult>;
}
export declare function isSmartParameters(a: any): a is SmartParameters;
